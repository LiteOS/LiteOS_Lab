GAS LISTING /tmp/cc0fYVTA.s 			page 1


   1              		.file	"securecutil.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              		.align 8
   6              	.LC0:
   7 0000 48756177 		.string	"Huawei Secure C V100R001C01SPC007B002"
   7      65692053 
   7      65637572 
   7      65204320 
   7      56313030 
   8              		.section	.text.GetHwSecureCVersion,"ax",@progbits
   9              		.globl	GetHwSecureCVersion
  11              	GetHwSecureCVersion:
  12              	.LFB6:
  13              		.file 1 "/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c"
   1:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /*
   2:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
   3:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  *
   4:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * OpenArkCompiler is licensed under the Mulan PSL v1. 
   5:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * You can use this software according to the terms and conditions of the Mulan PSL v1.
   6:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * You may obtain a copy of Mulan PSL v1 at:
   7:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  *
   8:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 	http://license.coscl.org.cn/MulanPSL 
   9:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  *
  10:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER 
  11:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
  12:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * FIT FOR A PARTICULAR PURPOSE.  
  13:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * See the Mulan PSL v1 for more details.  
  14:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  */
  15:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  16:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /* Avoid duplicate header files,not include securecutil.h */
  17:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #include "securecutil.h"
  18:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  19:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  20:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #if defined(ANDROID) && (SECUREC_HAVE_WCTOMB || SECUREC_HAVE_MBTOWC)
  21:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #include <wchar.h>
  22:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #if SECUREC_HAVE_WCTOMB
  23:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /*
  24:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * Convert wide characters to narrow multi-bytes
  25:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  */
  26:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** int wctomb(char *s, wchar_t wc)
  27:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** {
  28:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****     return wcrtomb(s, wc, NULL);
  29:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** }
  30:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #endif
  31:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  32:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #if SECUREC_HAVE_MBTOWC
  33:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /*
  34:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * Converting narrow multi-byte characters to wide characters
  35:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  */
  36:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** int mbtowc(wchar_t *pwc, const char *s, size_t n)
  37:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** {
  38:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****     return mbrtowc(pwc, s, n, NULL);
  39:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** }
  40:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #endif
  41:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #endif
GAS LISTING /tmp/cc0fYVTA.s 			page 2


  42:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  43:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /* high Num << 8 | num of SPC Ver */
  44:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #define SECUREC_C_VERSION     (0x5 << 8)
  45:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #define SECUREC_SPC_VERSION   7
  46:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** #define SECUREC_VERSION_STR   "Huawei Secure C V100R001C01SPC007B002"
  47:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** 
  48:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /* SPC verNumber<->verStr like:
  49:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X201<->C01
  50:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X202<->SPC001   Redefine numbers after this version
  51:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X502<->SPC002
  52:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X503<->SPC003
  53:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * ...
  54:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X50a<->SPC010
  55:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X50b<->SPC011
  56:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * ...
  57:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  */
  58:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** /* CP  verNumber<->verStr like:
  59:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X601<->CP0001
  60:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * 0X602<->CP0002
  61:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  * ...
  62:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****  */
  63:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** const char *GetHwSecureCVersion(unsigned short *verNumber)
  64:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** {
  14              		.loc 1 64 1
  15              		.cfi_startproc
  16 0000 F30F1EFA 		endbr64
  17 0004 55       		pushq	%rbp
  18              	.LCFI0:
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0005 4889E5   		movq	%rsp, %rbp
  22              	.LCFI1:
  23              		.cfi_def_cfa_register 6
  24 0008 4883EC20 		subq	$32, %rsp
  25 000c 48897DE8 		movq	%rdi, -24(%rbp)
  26              		.loc 1 64 1
  27 0010 64488B04 		movq	%fs:40, %rax
  27      25280000 
  27      00
  28 0019 488945F8 		movq	%rax, -8(%rbp)
  29 001d 31C0     		xorl	%eax, %eax
  65:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****     if (verNumber != NULL) {
  30              		.loc 1 65 8
  31 001f 48837DE8 		cmpq	$0, -24(%rbp)
  31      00
  32 0024 7409     		je	.L2
  66:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****         *verNumber = (unsigned short)(SECUREC_C_VERSION | SECUREC_SPC_VERSION);
  33              		.loc 1 66 20
  34 0026 488B45E8 		movq	-24(%rbp), %rax
  35 002a 66C70007 		movw	$1287, (%rax)
  35      05
  36              	.L2:
  67:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****     }
  68:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c ****     return SECUREC_VERSION_STR;
  37              		.loc 1 68 12
  38 002f 488D0500 		leaq	.LC0(%rip), %rax
  38      000000
GAS LISTING /tmp/cc0fYVTA.s 			page 3


  69:/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.c **** }
  39              		.loc 1 69 1
  40 0036 488B55F8 		movq	-8(%rbp), %rdx
  41 003a 64483314 		xorq	%fs:40, %rdx
  41      25280000 
  41      00
  42 0043 7405     		je	.L4
  43 0045 E8000000 		call	__stack_chk_fail@PLT
  43      00
  44              	.L4:
  45 004a C9       		leave
  46              	.LCFI2:
  47              		.cfi_def_cfa 7, 8
  48 004b C3       		ret
  49              		.cfi_endproc
  50              	.LFE6:
  52              		.text
  53              	.Letext0:
  54              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
  55              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
  56              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
  57              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
  58              		.file 6 "/usr/include/stdio.h"
  59              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 942              		.section	.note.gnu.property,"a"
 943              		.align 8
 944 0000 04000000 		.long	 1f - 0f
 945 0004 10000000 		.long	 4f - 1f
 946 0008 05000000 		.long	 5
 947              	0:
 948 000c 474E5500 		.string	 "GNU"
 949              	1:
 950              		.align 8
 951 0010 020000C0 		.long	 0xc0000002
 952 0014 04000000 		.long	 3f - 2f
 953              	2:
 954 0018 03000000 		.long	 0x3
 955              	3:
 956 001c 00000000 		.align 8
 957              	4:
GAS LISTING /tmp/cc0fYVTA.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 securecutil.c
     /tmp/cc0fYVTA.s:11     .text.GetHwSecureCVersion:0000000000000000 GetHwSecureCVersion

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
