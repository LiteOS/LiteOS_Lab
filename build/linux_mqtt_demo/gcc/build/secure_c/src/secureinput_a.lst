GAS LISTING /tmp/ccLrrfHE.s 			page 1


   1              		.file	"secureinput_a.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.SecIs64BitPtr,"ax",@progbits
   6              	SecIs64BitPtr:
   7              	.LFB6:
   8              		.file 1 "/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl"
   1:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
   2:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
   3:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *
   4:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * OpenArkCompiler is licensed under the Mulan PSL v1. 
   5:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * You can use this software according to the terms and conditions of the Mulan PSL v1.
   6:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * You may obtain a copy of Mulan PSL v1 at:
   7:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *
   8:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * 	http://license.coscl.org.cn/MulanPSL 
   9:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *
  10:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER 
  11:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
  12:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * FIT FOR A PARTICULAR PURPOSE.  
  13:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * See the Mulan PSL v1 for more details.  
  14:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
  15:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* [Standardize-exceptions] Use unsafe function: Performance-sensitive
  16:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * [reason] Always used in the performance critical path,
  17:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *          and sufficient input validation is performed before calling
  18:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
  19:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  20:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef INPUT_INL_5D13A042_DC3F_4ED9_A8D1_882811274C27
  21:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define INPUT_INL_5D13A042_DC3F_4ED9_A8D1_882811274C27
  22:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  23:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_IN_KERNEL
  24:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #include <linux/ctype.h>
  25:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef EOF
  26:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define EOF  (-1)
  27:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  28:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
  29:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if !defined(SECUREC_SYSAPI4VXWORKS) && !defined(SECUREC_CTYPE_MACRO_ADAPT)
  30:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #include <ctype.h>
  31:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
  32:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #include <wctype.h>             /* for iswspace */
  33:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  34:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  35:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  36:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  37:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_NUM_WIDTH_SHORT                 0
  38:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_NUM_WIDTH_INT                   1
  39:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_NUM_WIDTH_LONG                  2
  40:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_NUM_WIDTH_LONG_LONG             3 /* also long double */
  41:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  42:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BUF_EXT_MUL                     2
  43:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BUFFERED_BLOK_SIZE              1024
  44:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  45:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_VXWORKS_PLATFORM) && !defined(va_copy) && !defined(__va_copy)
  46:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* the name is the same as system macro. */
  47:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define __va_copy(d, s) do { \
  48:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t size_of_d = (size_t)sizeof(d); \
  49:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t size_of_s = (size_t)sizeof(s); \
  50:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (size_of_d != size_of_s) { \
GAS LISTING /tmp/ccLrrfHE.s 			page 2


  51:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)memcpy((d), (s), sizeof(va_list)); \
  52:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else { \
  53:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)memcpy(&(d), &(s), sizeof(va_list)); \
  54:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } \
  55:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** } SECUREC_WHILE_ZERO
  56:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  57:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  58:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  59:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MULTI_BYTE_MAX_LEN              6
  60:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Record a flag for each bit */
  61:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACKET_INDEX(x)                ((unsigned int)(x) >> 3)
  62:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACKET_VALUE(x)                ((unsigned char)(1 << ((unsigned int)(x) & 7)))
  63:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  64:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  65:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Compatibility macro name cannot be modifie */
  66:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef UNALIGNED
  67:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if !(defined(_M_IA64)) && !(defined(_M_AMD64))
  68:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define UNALIGNED
  69:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
  70:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define UNALIGNED __unaligned
  71:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  72:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  73:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  74:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
  75:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Max 64bit value is 0xffffffffffffffff */
  76:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_64BITS_VALUE                18446744073709551615ULL
  77:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_64BITS_VALUE_DIV_TEN        1844674407370955161ULL
  78:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_64BITS_VALUE_CUT_LAST_DIGIT 18446744073709551610ULL
  79:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MIN_64BITS_NEG_VALUE            9223372036854775808ULL
  80:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_64BITS_POS_VALUE            9223372036854775807ULL
  81:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MIN_32BITS_NEG_VALUE            2147483648ULL
  82:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_32BITS_POS_VALUE            2147483647ULL
  83:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_32BITS_VALUE                4294967295ULL
  84:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_32BITS_VALUE_INC            4294967296ULL
  85:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MAX_32BITS_VALUE_DIV_TEN        429496729ULL
  86:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_LONG_BIT_NUM                    ((unsigned int)(sizeof(long) << 3U))
  87:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  88:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_LONG_HEX_BEYOND_MAX(number)     (((number) >> (SECUREC_LONG_BIT_NUM - 4U)) > 0)
  89:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_LONG_OCTAL_BEYOND_MAX(number)   (((number) >> (SECUREC_LONG_BIT_NUM - 3U)) > 0)
  90:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  91:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_QWORD_HEX_BEYOND_MAX(number)    (((number) >> (64U - 4U)) > 0)
  92:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_QWORD_OCTAL_BEYOND_MAX(number)  (((number) >> (64U - 3U)) > 0)
  93:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  94:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_LP64_BIT_WIDTH                  64
  95:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_LP32_BIT_WIDTH                  32
  96:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  97:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
  98:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
  99:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_CHAR(x)                         (x)
 100:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACE                           '{'     /* [ to { */
 101:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 102:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 103:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_SCANF_BRACKET_CONDITION(comChr, ch, table, mask) ((comChr) == SECUREC_BRACE && \
 104:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (table) != NULL && \
 105:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (((table)[((unsigned int)(int)(ch) & SECUREC_CHAR_MASK) >> 3] ^ (mask)) & \
 106:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (1 << ((unsigned int)(int)(ch) & 7))))
 107:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
GAS LISTING /tmp/ccLrrfHE.s 			page 3


 108:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_SCANF_BRACKET_CONDITION(comChr, ch, table, mask) ((comChr) == SECUREC_BRACE && \
 109:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (((table)[((unsigned char)(ch) & 0xff) >> 3] ^ (mask)) & (1 << ((unsigned char)(ch) & 7))))
 110:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 111:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_SCANF_STRING_CONDITION(comChr, ch) ((comChr) == SECUREC_CHAR('s') && \
 112:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (!((ch) >= SECUREC_CHAR('\t') && (ch) <= SECUREC_CHAR('\r')) && (ch) != SECUREC_CHAR(' ')))
 113:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 114:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Do not use   |=   optimize this code, it will cause compiling warning */
 115:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* only supports  wide characters with a maximum length of two bytes */
 116:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACKET_SET_BIT(table, ch) do { \
 117:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned int tableIndex = SECUREC_BRACKET_INDEX(((unsigned int)(int)(ch) & SECUREC_CHAR_MASK));
 118:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned int tableValue = SECUREC_BRACKET_VALUE(((unsigned int)(int)(ch) & SECUREC_CHAR_MASK));
 119:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (table)[tableIndex] = (unsigned char)((table)[tableIndex] | tableValue); \
 120:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** } SECUREC_WHILE_ZERO
 121:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 122:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 123:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* table size is 32 x 256 */
 124:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACKET_TABLE_SIZE    8192
 125:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_EOF WEOF
 126:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_MB_LEN 16       /* max. # bytes in multibyte char  ,see MB_LEN_MAX */
 127:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* int to unsigned int clear  e571 */
 128:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_DIGIT(chr)  (!((unsigned int)(int)(chr) & 0xff00) && isdigit(((unsigned int)(int
 129:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_XDIGIT(chr) (!((unsigned int)(int)(chr) & 0xff00) && isxdigit(((unsigned int)(in
 130:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_SPACE(chr)    iswspace((wint_t)(int)(chr))
 131:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 132:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_BRACKET_TABLE_SIZE    32
 133:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_EOF EOF
 134:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_DIGIT(chr)    isdigit((unsigned char)(chr) & 0x00ff)
 135:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_XDIGIT(chr)   isxdigit((unsigned char)(chr) & 0x00ff)
 136:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_IS_SPACE(chr)    isspace((unsigned char)(chr) & 0x00ff)
 137:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 138:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 139:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 140:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecSkipSpaceChar(SecFileStream *stream, int *counter);
 141:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecGetChar(SecFileStream *stream, int *counter);
 142:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecUnGetChar(SecInt ch, SecFileStream *stream, int *counter);
 143:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 144:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** typedef struct {
 145:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 146:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned char *table; /* default NULL */
 147:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 148:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned char table[SECUREC_BRACKET_TABLE_SIZE]; /* Array length is large enough in application
 149:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 150:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned char mask; /* default 0 */
 151:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** } SecBracketTable;
 152:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 153:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 154:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_INIT_BRACKET_TABLE { NULL, 0 }
 155:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 156:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_INIT_BRACKET_TABLE { { 0 }, 0 }
 157:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 158:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 159:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
 160:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** typedef struct {
 161:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t floatStrSize;           /* tialization must be length of buffer in charater */
 162:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t floatStrUsedLen;        /* store float string len */
 163:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecChar buffer[SECUREC_FLOAT_BUFSIZE + 1];
 164:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecChar *floatStr;            /* Initialization must point to buffer */
GAS LISTING /tmp/ccLrrfHE.s 			page 4


 165:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecChar *allocatedFloatStr;   /* Initialization must be NULL  to store alloced point */
 166:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** } SecFloatSpec;
 167:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 168:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 169:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** typedef struct {
 170:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnsignedInt64 number64;
 171:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned long number;
 172:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int numberWidth;     /* 0 = SHORT, 1 = int, > 1  long or L_DOUBLE */
 173:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int isInt64Arg;      /* 1 for 64-bit integer, 0 otherwise */
 174:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int negative;        /* 0 is positive */
 175:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 176:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int beyondMax;       /* Non-zero means beyond */
 177:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 178:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     void *argPtr;        /* Variable parameter pointer */
 179:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t arrayWidth;   /* length of pointer Variable parameter, in charaters */
 180:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int width;           /* width number in format */
 181:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int widthSet;        /* 0 is not set width in format */
 182:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int comChr;          /* Lowercase format conversion characters */
 183:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int oriComChr;       /* store number conversion */
 184:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     signed char isWChar; /* -1/0 not wchar, 1 for wchar */
 185:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     char suppress;       /* 0 is not have %* in format */
 186:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** } SecScanSpec;
 187:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 188:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 189:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_INIT_NUMBER_SPEC { 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0 }
 190:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 191:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_INIT_NUMBER_SPEC { 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0 }
 192:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 193:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 194:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 195:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_GETC fgetwc
 196:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_UN_GETC ungetwc
 197:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_CHAR_MASK 0xffff
 198:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 199:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_GETC fgetc
 200:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_UN_GETC ungetc
 201:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_CHAR_MASK 0xff
 202:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 203:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 204:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 205:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Determine if it is a 64-bit pointer  function
 206:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 is not ,1 is 64bit pointer
 207:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 208:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecIs64BitPtr(size_t sizeOfVoidStar)
 209:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
   9              		.loc 1 209 1
  10              		.cfi_startproc
  11 0000 F30F1EFA 		endbr64
  12 0004 55       		pushq	%rbp
  13              	.LCFI0:
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0005 4889E5   		movq	%rsp, %rbp
  17              	.LCFI1:
  18              		.cfi_def_cfa_register 6
  19 0008 4883EC20 		subq	$32, %rsp
  20 000c 48897DE8 		movq	%rdi, -24(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 5


  21              		.loc 1 209 1
  22 0010 64488B04 		movq	%fs:40, %rax
  22      25280000 
  22      00
  23 0019 488945F8 		movq	%rax, -8(%rbp)
  24 001d 31C0     		xorl	%eax, %eax
 210:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* point size is 4 or 8 , Under the 64 bit system, the value not 0 */
 211:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* to clear e778 */
 212:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((sizeOfVoidStar & sizeof(SecInt64)) != 0) {
  25              		.loc 1 212 25
  26 001f 488B45E8 		movq	-24(%rbp), %rax
  27 0023 83E008   		andl	$8, %eax
  28              		.loc 1 212 8
  29 0026 4885C0   		testq	%rax, %rax
  30 0029 7407     		je	.L2
 213:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return 1;
  31              		.loc 1 213 16
  32 002b B8010000 		movl	$1, %eax
  32      00
  33 0030 EB05     		jmp	.L3
  34              	.L2:
 214:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
  35              		.loc 1 215 12
  36 0032 B8000000 		movl	$0, %eax
  36      00
  37              	.L3:
 216:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
  38              		.loc 1 216 1
  39 0037 488B55F8 		movq	-8(%rbp), %rdx
  40 003b 64483314 		xorq	%fs:40, %rdx
  40      25280000 
  40      00
  41 0044 7405     		je	.L4
  42 0046 E8000000 		call	__stack_chk_fail@PLT
  42      00
  43              	.L4:
  44 004b C9       		leave
  45              	.LCFI2:
  46              		.cfi_def_cfa 7, 8
  47 004c C3       		ret
  48              		.cfi_endproc
  49              	.LFE6:
  51              		.section	.text.SecAssignFloat,"ax",@progbits
  53              	SecAssignFloat:
  54              	.LFB7:
 217:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 218:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
 219:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 220:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 221:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Convert a floating point string to a floating point number
 222:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 223:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecAssignFloat(const char *floatStr, int numberWidth, void *argPtr)
 224:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
  55              		.loc 1 224 1
  56              		.cfi_startproc
  57 0000 F30F1EFA 		endbr64
GAS LISTING /tmp/ccLrrfHE.s 			page 6


  58 0004 55       		pushq	%rbp
  59              	.LCFI3:
  60              		.cfi_def_cfa_offset 16
  61              		.cfi_offset 6, -16
  62 0005 4889E5   		movq	%rsp, %rbp
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 6
  65 0008 4883EC50 		subq	$80, %rsp
  66 000c 48897DC8 		movq	%rdi, -56(%rbp)
  67 0010 8975C4   		movl	%esi, -60(%rbp)
  68 0013 488955B8 		movq	%rdx, -72(%rbp)
  69              		.loc 1 224 1
  70 0017 64488B04 		movq	%fs:40, %rax
  70      25280000 
  70      00
  71 0020 488945F8 		movq	%rax, -8(%rbp)
  72 0024 31C0     		xorl	%eax, %eax
 225:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     char *endPtr = NULL;
  73              		.loc 1 225 11
  74 0026 48C745D0 		movq	$0, -48(%rbp)
  74      00000000 
 226:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     double d;
 227:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_SUPPORT_STRTOLD
 228:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (numberWidth == SECUREC_NUM_WIDTH_LONG_LONG) {
  75              		.loc 1 228 8
  76 002e 837DC403 		cmpl	$3, -60(%rbp)
  77 0032 7521     		jne	.L6
  78              	.LBB2:
 229:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         long double d2 = strtold(floatStr, &endPtr);
  79              		.loc 1 229 26
  80 0034 488D55D0 		leaq	-48(%rbp), %rdx
  81 0038 488B45C8 		movq	-56(%rbp), %rax
  82 003c 4889D6   		movq	%rdx, %rsi
  83 003f 4889C7   		movq	%rax, %rdi
  84 0042 E8000000 		call	strtold@PLT
  84      00
  85 0047 DB7DE0   		fstpt	-32(%rbp)
 230:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(long double UNALIGNED *)(argPtr) = d2;
  86              		.loc 1 230 44
  87 004a 488B45B8 		movq	-72(%rbp), %rax
  88 004e DB6DE0   		fldt	-32(%rbp)
  89 0051 DB38     		fstpt	(%rax)
  90 0053 EB3E     		jmp	.L5
  91              	.L6:
  92              	.LBE2:
 231:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 232:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 233:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 234:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     d = strtod(floatStr, &endPtr);
  93              		.loc 1 234 9
  94 0055 488D55D0 		leaq	-48(%rbp), %rdx
  95 0059 488B45C8 		movq	-56(%rbp), %rax
  96 005d 4889D6   		movq	%rdx, %rsi
  97 0060 4889C7   		movq	%rax, %rdi
  98 0063 E8000000 		call	strtod@PLT
  98      00
  99 0068 66480F7E 		movq	%xmm0, %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 7


  99      C0
 100 006d 488945D8 		movq	%rax, -40(%rbp)
 235:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (numberWidth > SECUREC_NUM_WIDTH_INT) {
 101              		.loc 1 235 8
 102 0071 837DC401 		cmpl	$1, -60(%rbp)
 103 0075 7E0F     		jle	.L8
 236:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(double UNALIGNED *)(argPtr) = (double)d;
 104              		.loc 1 236 39
 105 0077 488B45B8 		movq	-72(%rbp), %rax
 106 007b F20F1045 		movsd	-40(%rbp), %xmm0
 106      D8
 107 0080 F20F1100 		movsd	%xmm0, (%rax)
 108 0084 EB0D     		jmp	.L5
 109              	.L8:
 237:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 238:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(float UNALIGNED *)(argPtr) = (float)d;
 110              		.loc 1 238 40
 111 0086 F20F5A45 		cvtsd2ss	-40(%rbp), %xmm0
 111      D8
 112              		.loc 1 238 38
 113 008b 488B45B8 		movq	-72(%rbp), %rax
 114 008f F30F1100 		movss	%xmm0, (%rax)
 115              	.L5:
 239:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 240:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 116              		.loc 1 240 1
 117 0093 488B45F8 		movq	-8(%rbp), %rax
 118 0097 64483304 		xorq	%fs:40, %rax
 118      25280000 
 118      00
 119 00a0 7405     		je	.L10
 120 00a2 E8000000 		call	__stack_chk_fail@PLT
 120      00
 121              	.L10:
 122 00a7 C9       		leave
 123              	.LCFI5:
 124              		.cfi_def_cfa 7, 8
 125 00a8 C3       		ret
 126              		.cfi_endproc
 127              	.LFE7:
 129              		.section	.text.SecUpdateFloatString,"ax",@progbits
 131              	SecUpdateFloatString:
 132              	.LFB8:
 241:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 242:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 243:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 244:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Convert a floating point wchar string to a floating point number
 245:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Success  ret 0
 246:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 247:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecAssignFloatW(const SecFloatSpec *floatSpec, const  SecScanSpec *spec)
 248:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 249:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* convert float string */
 250:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t mbsLen;
 251:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     size_t tempFloatStrLen = (size_t)(floatSpec->floatStrSize + 1) * sizeof(wchar_t);
 252:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     char *tempFloatStr = (char *)SECUREC_MALLOC(tempFloatStrLen);
 253:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 254:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (tempFloatStr == NULL) {
GAS LISTING /tmp/ccLrrfHE.s 			page 8


 255:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 256:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 257:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     tempFloatStr[0] = '\0';
 258:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SECUREC_MASK_MSVC_CRT_WARNING
 259:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     mbsLen = wcstombs(tempFloatStr, floatSpec->floatStr, tempFloatStrLen - 1);
 260:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SECUREC_END_MASK_MSVC_CRT_WARNING
 261:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (mbsLen != (size_t)-1) {
 262:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         tempFloatStr[mbsLen] = '\0';
 263:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecAssignFloat(tempFloatStr, spec->numberWidth, spec->argPtr);
 264:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 265:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_FREE(tempFloatStr);
 266:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 267:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 268:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SECUREC_FREE(tempFloatStr);
 269:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 270:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 271:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 272:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 273:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Splice floating point string
 274:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
 275:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 276:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecUpdateFloatString(SecChar ch, SecFloatSpec *floatSpec)
 277:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 133              		.loc 1 277 1
 134              		.cfi_startproc
 135 0000 F30F1EFA 		endbr64
 136 0004 55       		pushq	%rbp
 137              	.LCFI6:
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 6, -16
 140 0005 4889E5   		movq	%rsp, %rbp
 141              	.LCFI7:
 142              		.cfi_def_cfa_register 6
 143 0008 4883EC40 		subq	$64, %rsp
 144 000c 89F8     		movl	%edi, %eax
 145 000e 488975C0 		movq	%rsi, -64(%rbp)
 146 0012 8845CC   		movb	%al, -52(%rbp)
 147              		.loc 1 277 1
 148 0015 64488B04 		movq	%fs:40, %rax
 148      25280000 
 148      00
 149 001e 488945F8 		movq	%rax, -8(%rbp)
 150 0022 31C0     		xorl	%eax, %eax
 278:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStr[floatSpec->floatStrUsedLen++] = ch;    /* ch must be '0' - '9' */
 151              		.loc 1 278 14
 152 0024 488B45C0 		movq	-64(%rbp), %rax
 153 0028 488BB070 		movq	368(%rax), %rsi
 153      010000
 154              		.loc 1 278 34
 155 002f 488B45C0 		movq	-64(%rbp), %rax
 156 0033 488B4008 		movq	8(%rax), %rax
 157              		.loc 1 278 51
 158 0037 488D4801 		leaq	1(%rax), %rcx
 159 003b 488B55C0 		movq	-64(%rbp), %rdx
 160 003f 48894A08 		movq	%rcx, 8(%rdx)
 161              		.loc 1 278 24
 162 0043 488D1406 		leaq	(%rsi,%rax), %rdx
GAS LISTING /tmp/ccLrrfHE.s 			page 9


 163              		.loc 1 278 55
 164 0047 0FB645CC 		movzbl	-52(%rbp), %eax
 165 004b 8802     		movb	%al, (%rdx)
 279:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (floatSpec->floatStrUsedLen < floatSpec->floatStrSize) {
 166              		.loc 1 279 18
 167 004d 488B45C0 		movq	-64(%rbp), %rax
 168 0051 488B5008 		movq	8(%rax), %rdx
 169              		.loc 1 279 47
 170 0055 488B45C0 		movq	-64(%rbp), %rax
 171 0059 488B00   		movq	(%rax), %rax
 172              		.loc 1 279 8
 173 005c 4839C2   		cmpq	%rax, %rdx
 174 005f 730A     		jnb	.L12
 280:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return 0;
 175              		.loc 1 280 16
 176 0061 B8000000 		movl	$0, %eax
 176      00
 177 0066 E9C80100 		jmp	.L13
 177      00
 178              	.L12:
 281:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 282:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (floatSpec->allocatedFloatStr == NULL) {
 179              		.loc 1 282 18
 180 006b 488B45C0 		movq	-64(%rbp), %rax
 181 006f 488B8078 		movq	376(%rax), %rax
 181      010000
 182              		.loc 1 282 8
 183 0076 4885C0   		testq	%rax, %rax
 184 0079 0F85A900 		jne	.L14
 184      0000
 185              	.LBB3:
 283:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* add 1 to clear ZERO LENGTH ALLOCATIONS warning */
 284:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         size_t oriBufSize = floatSpec->floatStrSize* (SECUREC_BUF_EXT_MUL * sizeof(SecChar)) + 1;
 186              		.loc 1 284 38
 187 007f 488B45C0 		movq	-64(%rbp), %rax
 188 0083 488B00   		movq	(%rax), %rax
 189              		.loc 1 284 52
 190 0086 4801C0   		addq	%rax, %rax
 191              		.loc 1 284 16
 192 0089 4883C001 		addq	$1, %rax
 193 008d 488945E8 		movq	%rax, -24(%rbp)
 285:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         void *tmpPointer = (void *)SECUREC_MALLOC(oriBufSize);
 194              		.loc 1 285 28
 195 0091 488B45E8 		movq	-24(%rbp), %rax
 196 0095 4889C7   		movq	%rax, %rdi
 197 0098 E8000000 		call	malloc@PLT
 197      00
 198 009d 488945F0 		movq	%rax, -16(%rbp)
 286:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (tmpPointer == NULL) {
 199              		.loc 1 286 12
 200 00a1 48837DF0 		cmpq	$0, -16(%rbp)
 200      00
 201 00a6 750A     		jne	.L15
 287:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 202              		.loc 1 287 20
 203 00a8 B8FFFFFF 		movl	$-1, %eax
 203      FF
GAS LISTING /tmp/ccLrrfHE.s 			page 10


 204 00ad E9810100 		jmp	.L13
 204      00
 205              	.L15:
 288:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 289:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (memcpy_s(tmpPointer, oriBufSize, floatSpec->floatStr, floatSpec->floatStrSize * sizeof(
 206              		.loc 1 289 76
 207 00b2 488B45C0 		movq	-64(%rbp), %rax
 208 00b6 488B08   		movq	(%rax), %rcx
 209              		.loc 1 289 55
 210 00b9 488B45C0 		movq	-64(%rbp), %rax
 211 00bd 488B9070 		movq	368(%rax), %rdx
 211      010000
 212              		.loc 1 289 13
 213 00c4 488B75E8 		movq	-24(%rbp), %rsi
 214 00c8 488B45F0 		movq	-16(%rbp), %rax
 215 00cc 4889C7   		movq	%rax, %rdi
 216 00cf E8000000 		call	memcpy_s@PLT
 216      00
 217              		.loc 1 289 12
 218 00d4 85C0     		testl	%eax, %eax
 219 00d6 7416     		je	.L16
 290:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_FREE(tmpPointer);   /* This is a dead code, just to meet the coding requirement
 220              		.loc 1 290 13
 221 00d8 488B45F0 		movq	-16(%rbp), %rax
 222 00dc 4889C7   		movq	%rax, %rdi
 223 00df E8000000 		call	free@PLT
 223      00
 291:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 224              		.loc 1 291 20
 225 00e4 B8FFFFFF 		movl	$-1, %eax
 225      FF
 226 00e9 E9450100 		jmp	.L13
 226      00
 227              	.L16:
 292:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 293:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->floatStr = (SecChar *) (tmpPointer);
 228              		.loc 1 293 29
 229 00ee 488B45C0 		movq	-64(%rbp), %rax
 230 00f2 488B55F0 		movq	-16(%rbp), %rdx
 231 00f6 48899070 		movq	%rdx, 368(%rax)
 231      010000
 294:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->allocatedFloatStr = (SecChar *) (tmpPointer); /* use to clear free on stack warn
 232              		.loc 1 294 38
 233 00fd 488B45C0 		movq	-64(%rbp), %rax
 234 0101 488B55F0 		movq	-16(%rbp), %rdx
 235 0105 48899078 		movq	%rdx, 376(%rax)
 235      010000
 295:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->floatStrSize *= SECUREC_BUF_EXT_MUL; /* this is OK, oriBufSize plus 1 just clear
 236              		.loc 1 295 33
 237 010c 488B45C0 		movq	-64(%rbp), %rax
 238 0110 488B00   		movq	(%rax), %rax
 239 0113 488D1400 		leaq	(%rax,%rax), %rdx
 240 0117 488B45C0 		movq	-64(%rbp), %rax
 241 011b 488910   		movq	%rdx, (%rax)
 296:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return 0;
 242              		.loc 1 296 16
 243 011e B8000000 		movl	$0, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 11


 243      00
 244 0123 E90B0100 		jmp	.L13
 244      00
 245              	.L14:
 246              	.LBE3:
 247              	.LBB4:
 297:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 298:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* LSD 2014.3.6 fix, replace realloc to malloc to avoid heap injection */
 299:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         size_t oriBufSize = floatSpec->floatStrSize * sizeof(SecChar);
 248              		.loc 1 299 16
 249 0128 488B45C0 		movq	-64(%rbp), %rax
 250 012c 488B00   		movq	(%rax), %rax
 251 012f 488945D0 		movq	%rax, -48(%rbp)
 300:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         size_t nextSize = (oriBufSize * SECUREC_BUF_EXT_MUL) + 1; /* add 1 to clear satic check too
 252              		.loc 1 300 39
 253 0133 488B45D0 		movq	-48(%rbp), %rax
 254 0137 4801C0   		addq	%rax, %rax
 255              		.loc 1 300 16
 256 013a 4883C001 		addq	$1, %rax
 257 013e 488945D8 		movq	%rax, -40(%rbp)
 301:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* Prevents integer overflow when calculating the wide character length.
 302:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          * The maximum length of SECUREC_MAX_WIDTH_LEN is enough
 303:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          */
 304:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (nextSize <= SECUREC_MAX_WIDTH_LEN) {
 258              		.loc 1 304 12
 259 0142 48817DD8 		cmpq	$214748360, -40(%rbp)
 259      C8CCCC0C 
 260 014a 0F87DE00 		ja	.L17
 260      0000
 261              	.LBB5:
 305:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             void *tmpPointer = (void *)SECUREC_MALLOC(nextSize);
 262              		.loc 1 305 32
 263 0150 488B45D8 		movq	-40(%rbp), %rax
 264 0154 4889C7   		movq	%rax, %rdi
 265 0157 E8000000 		call	malloc@PLT
 265      00
 266 015c 488945E0 		movq	%rax, -32(%rbp)
 306:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (tmpPointer == NULL) {
 267              		.loc 1 306 16
 268 0160 48837DE0 		cmpq	$0, -32(%rbp)
 268      00
 269 0165 750A     		jne	.L18
 307:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 270              		.loc 1 307 24
 271 0167 B8FFFFFF 		movl	$-1, %eax
 271      FF
 272 016c E9C20000 		jmp	.L13
 272      00
 273              	.L18:
 308:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 309:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (memcpy_s(tmpPointer, nextSize, floatSpec->floatStr, oriBufSize) != EOK) {
 274              		.loc 1 309 57
 275 0171 488B45C0 		movq	-64(%rbp), %rax
 276 0175 488B9070 		movq	368(%rax), %rdx
 276      010000
 277              		.loc 1 309 17
 278 017c 488B4DD0 		movq	-48(%rbp), %rcx
GAS LISTING /tmp/ccLrrfHE.s 			page 12


 279 0180 488B75D8 		movq	-40(%rbp), %rsi
 280 0184 488B45E0 		movq	-32(%rbp), %rax
 281 0188 4889C7   		movq	%rax, %rdi
 282 018b E8000000 		call	memcpy_s@PLT
 282      00
 283              		.loc 1 309 16
 284 0190 85C0     		testl	%eax, %eax
 285 0192 7416     		je	.L19
 310:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_FREE(tmpPointer);   /* This is a dead code, just to meet the coding require
 286              		.loc 1 310 17
 287 0194 488B45E0 		movq	-32(%rbp), %rax
 288 0198 4889C7   		movq	%rax, %rdi
 289 019b E8000000 		call	free@PLT
 289      00
 311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 290              		.loc 1 311 24
 291 01a0 B8FFFFFF 		movl	$-1, %eax
 291      FF
 292 01a5 E9890000 		jmp	.L13
 292      00
 293              	.L19:
 312:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 313:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (memset_s(floatSpec->floatStr, oriBufSize, 0, oriBufSize) != EOK) {
 294              		.loc 1 313 35
 295 01aa 488B45C0 		movq	-64(%rbp), %rax
 296 01ae 488B8070 		movq	368(%rax), %rax
 296      010000
 297              		.loc 1 313 17
 298 01b5 488B55D0 		movq	-48(%rbp), %rdx
 299 01b9 488B75D0 		movq	-48(%rbp), %rsi
 300 01bd 4889D1   		movq	%rdx, %rcx
 301 01c0 BA000000 		movl	$0, %edx
 301      00
 302 01c5 4889C7   		movq	%rax, %rdi
 303 01c8 E8000000 		call	memset_s@PLT
 303      00
 304              		.loc 1 313 16
 305 01cd 85C0     		testl	%eax, %eax
 306 01cf 7413     		je	.L20
 314:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_FREE(tmpPointer);   /* This is a dead code, just to meet the coding require
 307              		.loc 1 314 17
 308 01d1 488B45E0 		movq	-32(%rbp), %rax
 309 01d5 4889C7   		movq	%rax, %rdi
 310 01d8 E8000000 		call	free@PLT
 310      00
 315:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 311              		.loc 1 315 24
 312 01dd B8FFFFFF 		movl	$-1, %eax
 312      FF
 313 01e2 EB4F     		jmp	.L13
 314              	.L20:
 316:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 317:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_FREE(floatSpec->floatStr);
 315              		.loc 1 317 13
 316 01e4 488B45C0 		movq	-64(%rbp), %rax
 317 01e8 488B8070 		movq	368(%rax), %rax
 317      010000
GAS LISTING /tmp/ccLrrfHE.s 			page 13


 318 01ef 4889C7   		movq	%rax, %rdi
 319 01f2 E8000000 		call	free@PLT
 319      00
 318:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 319:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStr = (SecChar *) (tmpPointer);
 320              		.loc 1 319 33
 321 01f7 488B45C0 		movq	-64(%rbp), %rax
 322 01fb 488B55E0 		movq	-32(%rbp), %rdx
 323 01ff 48899070 		movq	%rdx, 368(%rax)
 323      010000
 320:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->allocatedFloatStr = (SecChar *) (tmpPointer);    /* use to clear free on sta
 324              		.loc 1 320 42
 325 0206 488B45C0 		movq	-64(%rbp), %rax
 326 020a 488B55E0 		movq	-32(%rbp), %rdx
 327 020e 48899078 		movq	%rdx, 376(%rax)
 327      010000
 321:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize *= SECUREC_BUF_EXT_MUL; /* this is OK, oriBufSize plus 1 just c
 328              		.loc 1 321 37
 329 0215 488B45C0 		movq	-64(%rbp), %rax
 330 0219 488B00   		movq	(%rax), %rax
 331 021c 488D1400 		leaq	(%rax,%rax), %rdx
 332 0220 488B45C0 		movq	-64(%rbp), %rax
 333 0224 488910   		movq	%rdx, (%rax)
 322:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return 0;
 334              		.loc 1 322 20
 335 0227 B8000000 		movl	$0, %eax
 335      00
 336 022c EB05     		jmp	.L13
 337              	.L17:
 338              	.LBE5:
 339              	.LBE4:
 323:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 324:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 325:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return -1;
 340              		.loc 1 325 12
 341 022e B8FFFFFF 		movl	$-1, %eax
 341      FF
 342              	.L13:
 326:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 343              		.loc 1 326 1
 344 0233 488B4DF8 		movq	-8(%rbp), %rcx
 345 0237 6448330C 		xorq	%fs:40, %rcx
 345      25280000 
 345      00
 346 0240 7405     		je	.L21
 347 0242 E8000000 		call	__stack_chk_fail@PLT
 347      00
 348              	.L21:
 349 0247 C9       		leave
 350              	.LCFI8:
 351              		.cfi_def_cfa 7, 8
 352 0248 C3       		ret
 353              		.cfi_endproc
 354              	.LFE8:
 356              		.section	.text.SecIsLeadByte,"ax",@progbits
 358              	SecIsLeadByte:
 359              	.LFB9:
GAS LISTING /tmp/ccLrrfHE.s 			page 14


 327:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 328:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 329:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef SECUREC_FOR_WCHAR
 330:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* LSD only multi-bytes string need isleadbyte() function */
 331:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecIsLeadByte(SecInt ch)
 332:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 360              		.loc 1 332 1
 361              		.cfi_startproc
 362 0000 F30F1EFA 		endbr64
 363 0004 55       		pushq	%rbp
 364              	.LCFI9:
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 6, -16
 367 0005 4889E5   		movq	%rsp, %rbp
 368              	.LCFI10:
 369              		.cfi_def_cfa_register 6
 370 0008 4883EC20 		subq	$32, %rsp
 371 000c 897DEC   		movl	%edi, -20(%rbp)
 372              		.loc 1 332 1
 373 000f 64488B04 		movq	%fs:40, %rax
 373      25280000 
 373      00
 374 0018 488945F8 		movq	%rax, -8(%rbp)
 375 001c 31C0     		xorl	%eax, %eax
 333:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned int c = (unsigned int)ch;
 376              		.loc 1 333 18
 377 001e 8B45EC   		movl	-20(%rbp), %eax
 378 0021 8945F4   		movl	%eax, -12(%rbp)
 334:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if !(defined(_MSC_VER) || defined(_INC_WCTYPE))
 335:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return (int)(c & 0x80);
 379              		.loc 1 335 20
 380 0024 8B45F4   		movl	-12(%rbp), %eax
 381              		.loc 1 335 12
 382 0027 25800000 		andl	$128, %eax
 382      00
 336:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 337:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return (int)isleadbyte((int)(c & 0xff));
 338:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 339:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 383              		.loc 1 339 1
 384 002c 488B55F8 		movq	-8(%rbp), %rdx
 385 0030 64483314 		xorq	%fs:40, %rdx
 385      25280000 
 385      00
 386 0039 7405     		je	.L24
 387 003b E8000000 		call	__stack_chk_fail@PLT
 387      00
 388              	.L24:
 389 0040 C9       		leave
 390              	.LCFI11:
 391              		.cfi_def_cfa 7, 8
 392 0041 C3       		ret
 393              		.cfi_endproc
 394              	.LFE9:
 396              		.section	.text.SecUpdateWcharFlagByType,"ax",@progbits
 398              	SecUpdateWcharFlagByType:
 399              	.LFB10:
GAS LISTING /tmp/ccLrrfHE.s 			page 15


 340:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 341:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 342:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 343:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parsing whether it is a wide character
 344:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 345:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecUpdateWcharFlagByType(SecUnsignedChar ch, SecScanSpec *spec)
 346:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 400              		.loc 1 346 1
 401              		.cfi_startproc
 402 0000 F30F1EFA 		endbr64
 403 0004 55       		pushq	%rbp
 404              	.LCFI12:
 405              		.cfi_def_cfa_offset 16
 406              		.cfi_offset 6, -16
 407 0005 4889E5   		movq	%rsp, %rbp
 408              	.LCFI13:
 409              		.cfi_def_cfa_register 6
 410 0008 4883EC20 		subq	$32, %rsp
 411 000c 89F8     		movl	%edi, %eax
 412 000e 488975E0 		movq	%rsi, -32(%rbp)
 413 0012 8845EC   		movb	%al, -20(%rbp)
 414              		.loc 1 346 1
 415 0015 64488B04 		movq	%fs:40, %rax
 415      25280000 
 415      00
 416 001e 488945F8 		movq	%rax, -8(%rbp)
 417 0022 31C0     		xorl	%eax, %eax
 347:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_FOR_WCHAR) && (defined(SECUREC_COMPATIBLE_WIN_FORMAT))
 348:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     signed char flagForUpperType = -1;
 349:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     signed char flagForLowerType = 1;
 350:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 351:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     signed char flagForUpperType = 1;
 418              		.loc 1 351 17
 419 0024 C645F601 		movb	$1, -10(%rbp)
 352:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     signed char flagForLowerType = -1;
 420              		.loc 1 352 17
 421 0028 C645F7FF 		movb	$-1, -9(%rbp)
 353:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 354:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* if no  l or h flag  */
 355:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->isWChar == 0) {
 422              		.loc 1 355 13
 423 002c 488B45E0 		movq	-32(%rbp), %rax
 424 0030 0FB64040 		movzbl	64(%rax), %eax
 425              		.loc 1 355 8
 426 0034 84C0     		testb	%al, %al
 427 0036 7525     		jne	.L31
 356:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((ch == SECUREC_CHAR('C')) || (ch == SECUREC_CHAR('S'))) {
 428              		.loc 1 356 12
 429 0038 807DEC43 		cmpb	$67, -20(%rbp)
 430 003c 7406     		je	.L27
 431              		.loc 1 356 39 discriminator 1
 432 003e 807DEC53 		cmpb	$83, -20(%rbp)
 433 0042 750D     		jne	.L28
 434              	.L27:
 357:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isWChar = flagForUpperType;
 435              		.loc 1 357 27
 436 0044 488B45E0 		movq	-32(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 16


 437 0048 0FB655F6 		movzbl	-10(%rbp), %edx
 438 004c 885040   		movb	%dl, 64(%rax)
 439 004f EB0B     		jmp	.L26
 440              	.L28:
 358:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 359:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isWChar = flagForLowerType;
 441              		.loc 1 359 27
 442 0051 488B45E0 		movq	-32(%rbp), %rax
 443 0055 0FB655F7 		movzbl	-9(%rbp), %edx
 444 0059 885040   		movb	%dl, 64(%rax)
 445              	.L26:
 360:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 361:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 362:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 446              		.loc 1 362 5
 447 005c 90       		nop
 448              	.L31:
 449 005d 90       		nop
 363:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 450              		.loc 1 363 1
 451 005e 488B45F8 		movq	-8(%rbp), %rax
 452 0062 64483304 		xorq	%fs:40, %rax
 452      25280000 
 452      00
 453 006b 7405     		je	.L30
 454 006d E8000000 		call	__stack_chk_fail@PLT
 454      00
 455              	.L30:
 456 0072 C9       		leave
 457              	.LCFI14:
 458              		.cfi_def_cfa 7, 8
 459 0073 C3       		ret
 460              		.cfi_endproc
 461              	.LFE10:
 463              		.section	.text.SecDecodeScanQualifierL,"ax",@progbits
 465              	SecDecodeScanQualifierL:
 466              	.LFB11:
 364:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 365:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * decode  %l %ll
 366:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 367:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeScanQualifierL(const SecUnsignedChar **format, SecScanSpec *spec)
 368:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 467              		.loc 1 368 1
 468              		.cfi_startproc
 469 0000 F30F1EFA 		endbr64
 470 0004 55       		pushq	%rbp
 471              	.LCFI15:
 472              		.cfi_def_cfa_offset 16
 473              		.cfi_offset 6, -16
 474 0005 4889E5   		movq	%rsp, %rbp
 475              	.LCFI16:
 476              		.cfi_def_cfa_register 6
 477 0008 4883EC20 		subq	$32, %rsp
 478 000c 48897DE8 		movq	%rdi, -24(%rbp)
 479 0010 488975E0 		movq	%rsi, -32(%rbp)
 480              		.loc 1 368 1
 481 0014 64488B04 		movq	%fs:40, %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 17


 481      25280000 
 481      00
 482 001d 488945F8 		movq	%rax, -8(%rbp)
 483 0021 31C0     		xorl	%eax, %eax
 369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 484              		.loc 1 369 28
 485 0023 488B45E8 		movq	-24(%rbp), %rax
 486 0027 488B00   		movq	(%rax), %rax
 487 002a 488945F0 		movq	%rax, -16(%rbp)
 370:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*(fmt + 1) == SECUREC_CHAR('l')) {
 488              		.loc 1 370 15
 489 002e 488B45F0 		movq	-16(%rbp), %rax
 490 0032 4883C001 		addq	$1, %rax
 491              		.loc 1 370 9
 492 0036 0FB600   		movzbl	(%rax), %eax
 493              		.loc 1 370 8
 494 0039 3C6C     		cmpb	$108, %al
 495 003b 751D     		jne	.L33
 371:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isInt64Arg = 1;
 496              		.loc 1 371 26
 497 003d 488B45E0 		movq	-32(%rbp), %rax
 498 0041 C7401401 		movl	$1, 20(%rax)
 498      000000
 372:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->numberWidth = SECUREC_NUM_WIDTH_LONG_LONG;
 499              		.loc 1 372 27
 500 0048 488B45E0 		movq	-32(%rbp), %rax
 501 004c C7401003 		movl	$3, 16(%rax)
 501      000000
 373:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 502              		.loc 1 373 9
 503 0053 488345F0 		addq	$1, -16(%rbp)
 503      01
 504 0058 EB1E     		jmp	.L34
 505              	.L33:
 374:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 375:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->numberWidth = SECUREC_NUM_WIDTH_LONG;
 506              		.loc 1 375 27
 507 005a 488B45E0 		movq	-32(%rbp), %rax
 508 005e C7401002 		movl	$2, 16(%rax)
 508      000000
 376:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_ON_64BITS) && !(defined(SECUREC_COMPATIBLE_WIN_FORMAT))
 377:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* on window 64 system sizeof long is 32bit */
 378:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isInt64Arg = 1;
 509              		.loc 1 378 26
 510 0065 488B45E0 		movq	-32(%rbp), %rax
 511 0069 C7401401 		movl	$1, 20(%rax)
 511      000000
 379:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 380:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isWChar = 1;
 512              		.loc 1 380 23
 513 0070 488B45E0 		movq	-32(%rbp), %rax
 514 0074 C6404001 		movb	$1, 64(%rax)
 515              	.L34:
 381:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 382:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 516              		.loc 1 382 13
 517 0078 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 18


 518 007c 488B55F0 		movq	-16(%rbp), %rdx
 519 0080 488910   		movq	%rdx, (%rax)
 383:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 520              		.loc 1 383 1
 521 0083 90       		nop
 522 0084 488B45F8 		movq	-8(%rbp), %rax
 523 0088 64483304 		xorq	%fs:40, %rax
 523      25280000 
 523      00
 524 0091 7405     		je	.L35
 525 0093 E8000000 		call	__stack_chk_fail@PLT
 525      00
 526              	.L35:
 527 0098 C9       		leave
 528              	.LCFI17:
 529              		.cfi_def_cfa 7, 8
 530 0099 C3       		ret
 531              		.cfi_endproc
 532              	.LFE11:
 534              		.section	.text.SecDecodeScanQualifierI,"ax",@progbits
 536              	SecDecodeScanQualifierI:
 537              	.LFB12:
 384:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 385:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 386:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * decode  %I %I43 %I64 %Id %Ii %Io ...
 387:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * set finishFlag to  1  finish Flag
 388:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 389:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeScanQualifierI(const SecUnsignedChar **format, SecScanSpec *spec, int *finishF
 390:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 538              		.loc 1 390 1
 539              		.cfi_startproc
 540 0000 F30F1EFA 		endbr64
 541 0004 55       		pushq	%rbp
 542              	.LCFI18:
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 6, -16
 545 0005 4889E5   		movq	%rsp, %rbp
 546              	.LCFI19:
 547              		.cfi_def_cfa_register 6
 548 0008 4883EC30 		subq	$48, %rsp
 549 000c 48897DE8 		movq	%rdi, -24(%rbp)
 550 0010 488975E0 		movq	%rsi, -32(%rbp)
 551 0014 488955D8 		movq	%rdx, -40(%rbp)
 552              		.loc 1 390 1
 553 0018 64488B04 		movq	%fs:40, %rax
 553      25280000 
 553      00
 554 0021 488945F8 		movq	%rax, -8(%rbp)
 555 0025 31C0     		xorl	%eax, %eax
 391:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 556              		.loc 1 391 28
 557 0027 488B45E8 		movq	-24(%rbp), %rax
 558 002b 488B00   		movq	(%rax), %rax
 559 002e 488945F0 		movq	%rax, -16(%rbp)
 392:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((*(fmt + 1) == SECUREC_CHAR('6')) &&
 560              		.loc 1 392 16
 561 0032 488B45F0 		movq	-16(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 19


 562 0036 4883C001 		addq	$1, %rax
 563              		.loc 1 392 10
 564 003a 0FB600   		movzbl	(%rax), %eax
 565              		.loc 1 392 8
 566 003d 3C36     		cmpb	$54, %al
 567 003f 7531     		jne	.L37
 393:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (*(fmt + 2) == SECUREC_CHAR('4'))) { /* offset 2 for I64 */
 568              		.loc 1 393 16 discriminator 1
 569 0041 488B45F0 		movq	-16(%rbp), %rax
 570 0045 4883C002 		addq	$2, %rax
 571              		.loc 1 393 10 discriminator 1
 572 0049 0FB600   		movzbl	(%rax), %eax
 392:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((*(fmt + 1) == SECUREC_CHAR('6')) &&
 573              		.loc 1 392 43 discriminator 1
 574 004c 3C34     		cmpb	$52, %al
 575 004e 7522     		jne	.L37
 394:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isInt64Arg = 1;
 576              		.loc 1 394 26
 577 0050 488B45E0 		movq	-32(%rbp), %rax
 578 0054 C7401401 		movl	$1, 20(%rax)
 578      000000
 395:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *format = *format + 2; /* add 2 to skip I64 point to '4' next loop will inc */
 579              		.loc 1 395 19
 580 005b 488B45E8 		movq	-24(%rbp), %rax
 581 005f 488B00   		movq	(%rax), %rax
 582              		.loc 1 395 27
 583 0062 488D5002 		leaq	2(%rax), %rdx
 584              		.loc 1 395 17
 585 0066 488B45E8 		movq	-24(%rbp), %rax
 586 006a 488910   		movq	%rdx, (%rax)
 587 006d E9AB0000 		jmp	.L38
 587      00
 588              	.L37:
 396:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((*(fmt + 1) == SECUREC_CHAR('3')) &&
 589              		.loc 1 396 23
 590 0072 488B45F0 		movq	-16(%rbp), %rax
 591 0076 4883C001 		addq	$1, %rax
 592              		.loc 1 396 17
 593 007a 0FB600   		movzbl	(%rax), %eax
 594              		.loc 1 396 15
 595 007d 3C33     		cmpb	$51, %al
 596 007f 7523     		jne	.L39
 397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 2) == SECUREC_CHAR('2'))) { /* offset 2 for I32 */
 597              		.loc 1 397 24 discriminator 1
 598 0081 488B45F0 		movq	-16(%rbp), %rax
 599 0085 4883C002 		addq	$2, %rax
 600              		.loc 1 397 18 discriminator 1
 601 0089 0FB600   		movzbl	(%rax), %eax
 396:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((*(fmt + 1) == SECUREC_CHAR('3')) &&
 602              		.loc 1 396 50 discriminator 1
 603 008c 3C32     		cmpb	$50, %al
 604 008e 7514     		jne	.L39
 398:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *format = *format + 2; /* add 2 to skip I32 point to '2' next loop will inc */
 605              		.loc 1 398 19
 606 0090 488B45E8 		movq	-24(%rbp), %rax
 607 0094 488B00   		movq	(%rax), %rax
 608              		.loc 1 398 27
GAS LISTING /tmp/ccLrrfHE.s 			page 20


 609 0097 488D5002 		leaq	2(%rax), %rdx
 610              		.loc 1 398 17
 611 009b 488B45E8 		movq	-24(%rbp), %rax
 612 009f 488910   		movq	%rdx, (%rax)
 613 00a2 EB79     		jmp	.L38
 614              	.L39:
 399:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((*(fmt + 1) == SECUREC_CHAR('d')) ||
 615              		.loc 1 399 23
 616 00a4 488B45F0 		movq	-16(%rbp), %rax
 617 00a8 4883C001 		addq	$1, %rax
 618              		.loc 1 399 17
 619 00ac 0FB600   		movzbl	(%rax), %eax
 620              		.loc 1 399 15
 621 00af 3C64     		cmpb	$100, %al
 622 00b1 743C     		je	.L40
 400:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('i')) ||
 623              		.loc 1 400 24 discriminator 1
 624 00b3 488B45F0 		movq	-16(%rbp), %rax
 625 00b7 4883C001 		addq	$1, %rax
 626              		.loc 1 400 18 discriminator 1
 627 00bb 0FB600   		movzbl	(%rax), %eax
 399:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((*(fmt + 1) == SECUREC_CHAR('d')) ||
 628              		.loc 1 399 50 discriminator 1
 629 00be 3C69     		cmpb	$105, %al
 630 00c0 742D     		je	.L40
 401:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('o')) ||
 631              		.loc 1 401 24
 632 00c2 488B45F0 		movq	-16(%rbp), %rax
 633 00c6 4883C001 		addq	$1, %rax
 634              		.loc 1 401 18
 635 00ca 0FB600   		movzbl	(%rax), %eax
 400:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('i')) ||
 636              		.loc 1 400 51
 637 00cd 3C6F     		cmpb	$111, %al
 638 00cf 741E     		je	.L40
 402:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('x')) ||
 639              		.loc 1 402 24
 640 00d1 488B45F0 		movq	-16(%rbp), %rax
 641 00d5 4883C001 		addq	$1, %rax
 642              		.loc 1 402 18
 643 00d9 0FB600   		movzbl	(%rax), %eax
 401:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('o')) ||
 644              		.loc 1 401 51
 645 00dc 3C78     		cmpb	$120, %al
 646 00de 740F     		je	.L40
 403:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('X'))) {
 647              		.loc 1 403 24
 648 00e0 488B45F0 		movq	-16(%rbp), %rax
 649 00e4 4883C001 		addq	$1, %rax
 650              		.loc 1 403 18
 651 00e8 0FB600   		movzbl	(%rax), %eax
 402:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (*(fmt + 1) == SECUREC_CHAR('x')) ||
 652              		.loc 1 402 51
 653 00eb 3C58     		cmpb	$88, %al
 654 00ed 7513     		jne	.L41
 655              	.L40:
 404:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isInt64Arg = SecIs64BitPtr(sizeof(void *));
GAS LISTING /tmp/ccLrrfHE.s 			page 21


 656              		.loc 1 404 28
 657 00ef BF080000 		movl	$8, %edi
 657      00
 658 00f4 E8000000 		call	SecIs64BitPtr
 658      00
 659              		.loc 1 404 26
 660 00f9 488B55E0 		movq	-32(%rbp), %rdx
 661 00fd 894214   		movl	%eax, 20(%rdx)
 662 0100 EB1B     		jmp	.L38
 663              	.L41:
 405:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 406:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* for %I */
 407:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->isInt64Arg = SecIs64BitPtr(sizeof(void *));
 664              		.loc 1 407 28
 665 0102 BF080000 		movl	$8, %edi
 665      00
 666 0107 E8000000 		call	SecIs64BitPtr
 666      00
 667              		.loc 1 407 26
 668 010c 488B55E0 		movq	-32(%rbp), %rdx
 669 0110 894214   		movl	%eax, 20(%rdx)
 408:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *finishFlag = 1;
 670              		.loc 1 408 21
 671 0113 488B45D8 		movq	-40(%rbp), %rax
 672 0117 C7000100 		movl	$1, (%rax)
 672      0000
 673              	.L38:
 409:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 410:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 674              		.loc 1 410 1
 675 011d 90       		nop
 676 011e 488B45F8 		movq	-8(%rbp), %rax
 677 0122 64483304 		xorq	%fs:40, %rax
 677      25280000 
 677      00
 678 012b 7405     		je	.L42
 679 012d E8000000 		call	__stack_chk_fail@PLT
 679      00
 680              	.L42:
 681 0132 C9       		leave
 682              	.LCFI20:
 683              		.cfi_def_cfa 7, 8
 684 0133 C3       		ret
 685              		.cfi_endproc
 686              	.LFE12:
 688              		.section	.text.SecDecodeScanWidth,"ax",@progbits
 690              	SecDecodeScanWidth:
 691              	.LFB13:
 411:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 412:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecDecodeScanWidth(const SecUnsignedChar **format, SecScanSpec *spec)
 413:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 692              		.loc 1 413 1
 693              		.cfi_startproc
 694 0000 F30F1EFA 		endbr64
 695 0004 55       		pushq	%rbp
 696              	.LCFI21:
 697              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccLrrfHE.s 			page 22


 698              		.cfi_offset 6, -16
 699 0005 4889E5   		movq	%rsp, %rbp
 700              	.LCFI22:
 701              		.cfi_def_cfa_register 6
 702 0008 4883EC20 		subq	$32, %rsp
 703 000c 48897DE8 		movq	%rdi, -24(%rbp)
 704 0010 488975E0 		movq	%rsi, -32(%rbp)
 705              		.loc 1 413 1
 706 0014 64488B04 		movq	%fs:40, %rax
 706      25280000 
 706      00
 707 001d 488945F8 		movq	%rax, -8(%rbp)
 708 0021 31C0     		xorl	%eax, %eax
 414:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 709              		.loc 1 414 28
 710 0023 488B45E8 		movq	-24(%rbp), %rax
 711 0027 488B00   		movq	(%rax), %rax
 712 002a 488945F0 		movq	%rax, -16(%rbp)
 415:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_DIGIT(*fmt)) {
 713              		.loc 1 415 11
 714 002e EB56     		jmp	.L44
 715              	.L47:
 416:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->widthSet = 1;
 716              		.loc 1 416 24
 717 0030 488B45E0 		movq	-32(%rbp), %rax
 718 0034 C7403401 		movl	$1, 52(%rax)
 718      000000
 417:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SECUREC_MUL_TEN_ADD_BEYOND_MAX(spec->width)) {
 719              		.loc 1 417 13
 720 003b 488B45E0 		movq	-32(%rbp), %rax
 721 003f 8B4030   		movl	48(%rax), %eax
 722              		.loc 1 417 12
 723 0042 3D14AE47 		cmpl	$21474836, %eax
 723      01
 724 0047 7E07     		jle	.L45
 418:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 725              		.loc 1 418 20
 726 0049 B8FFFFFF 		movl	$-1, %eax
 726      FF
 727 004e EB6D     		jmp	.L46
 728              	.L45:
 419:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 420:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->width = (int)SECUREC_MUL_TEN((unsigned int)spec->width) + (unsigned char)(*fmt - SECU
 729              		.loc 1 420 28
 730 0050 488B45E0 		movq	-32(%rbp), %rax
 731 0054 8B4030   		movl	48(%rax), %eax
 732 0057 8D148500 		leal	0(,%rax,4), %edx
 732      000000
 733 005e 488B45E0 		movq	-32(%rbp), %rax
 734 0062 8B4030   		movl	48(%rax), %eax
 735 0065 01D0     		addl	%edx, %eax
 736 0067 01C0     		addl	%eax, %eax
 737              		.loc 1 420 23
 738 0069 89C2     		movl	%eax, %edx
 739              		.loc 1 420 89
 740 006b 488B45F0 		movq	-16(%rbp), %rax
 741 006f 0FB600   		movzbl	(%rax), %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 23


 742              		.loc 1 420 73
 743 0072 83E830   		subl	$48, %eax
 744 0075 0FB6C0   		movzbl	%al, %eax
 745              		.loc 1 420 71
 746 0078 01C2     		addl	%eax, %edx
 747              		.loc 1 420 21
 748 007a 488B45E0 		movq	-32(%rbp), %rax
 749 007e 895030   		movl	%edx, 48(%rax)
 421:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 750              		.loc 1 421 9
 751 0081 488345F0 		addq	$1, -16(%rbp)
 751      01
 752              	.L44:
 415:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->widthSet = 1;
 753              		.loc 1 415 12
 754 0086 E8000000 		call	__ctype_b_loc@PLT
 754      00
 755 008b 488B10   		movq	(%rax), %rdx
 756 008e 488B45F0 		movq	-16(%rbp), %rax
 757 0092 0FB600   		movzbl	(%rax), %eax
 758 0095 0FB6C0   		movzbl	%al, %eax
 759 0098 4801C0   		addq	%rax, %rax
 760 009b 4801D0   		addq	%rdx, %rax
 761 009e 0FB700   		movzwl	(%rax), %eax
 762 00a1 0FB7C0   		movzwl	%ax, %eax
 763 00a4 25000800 		andl	$2048, %eax
 763      00
 415:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->widthSet = 1;
 764              		.loc 1 415 11
 765 00a9 85C0     		testl	%eax, %eax
 766 00ab 7583     		jne	.L47
 422:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 423:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 767              		.loc 1 423 13
 768 00ad 488B45E8 		movq	-24(%rbp), %rax
 769 00b1 488B55F0 		movq	-16(%rbp), %rdx
 770 00b5 488910   		movq	%rdx, (%rax)
 424:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 771              		.loc 1 424 12
 772 00b8 B8000000 		movl	$0, %eax
 772      00
 773              	.L46:
 425:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 774              		.loc 1 425 1
 775 00bd 488B4DF8 		movq	-8(%rbp), %rcx
 776 00c1 6448330C 		xorq	%fs:40, %rcx
 776      25280000 
 776      00
 777 00ca 7405     		je	.L48
 778 00cc E8000000 		call	__stack_chk_fail@PLT
 778      00
 779              	.L48:
 780 00d1 C9       		leave
 781              	.LCFI23:
 782              		.cfi_def_cfa 7, 8
 783 00d2 C3       		ret
 784              		.cfi_endproc
GAS LISTING /tmp/ccLrrfHE.s 			page 24


 785              	.LFE13:
 787              		.section	.text.SecSetDefaultScanSpec,"ax",@progbits
 789              	SecSetDefaultScanSpec:
 790              	.LFB14:
 426:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 427:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 428:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * init default flags for each format
 429:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecSetDefaultScanSpec(SecScanSpec *spec)
 431:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 791              		.loc 1 431 1
 792              		.cfi_startproc
 793 0000 F30F1EFA 		endbr64
 794 0004 55       		pushq	%rbp
 795              	.LCFI24:
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 6, -16
 798 0005 4889E5   		movq	%rsp, %rbp
 799              	.LCFI25:
 800              		.cfi_def_cfa_register 6
 801 0008 4883EC20 		subq	$32, %rsp
 802 000c 48897DE8 		movq	%rdi, -24(%rbp)
 803              		.loc 1 431 1
 804 0010 64488B04 		movq	%fs:40, %rax
 804      25280000 
 804      00
 805 0019 488945F8 		movq	%rax, -8(%rbp)
 806 001d 31C0     		xorl	%eax, %eax
 432:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 = 0;
 807              		.loc 1 432 20
 808 001f 488B45E8 		movq	-24(%rbp), %rax
 809 0023 48C70000 		movq	$0, (%rax)
 809      000000
 433:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number = 0;
 810              		.loc 1 433 18
 811 002a 488B45E8 		movq	-24(%rbp), %rax
 812 002e 48C74008 		movq	$0, 8(%rax)
 812      00000000 
 434:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->numberWidth = SECUREC_NUM_WIDTH_INT;    /* 0 = SHORT, 1 = int, > 1  long or L_DOUBLE */
 813              		.loc 1 434 23
 814 0036 488B45E8 		movq	-24(%rbp), %rax
 815 003a C7401001 		movl	$1, 16(%rax)
 815      000000
 435:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->isInt64Arg = 0;                         /* 1 for 64-bit integer, 0 otherwise */
 816              		.loc 1 435 22
 817 0041 488B45E8 		movq	-24(%rbp), %rax
 818 0045 C7401400 		movl	$0, 20(%rax)
 818      000000
 436:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->negative = 0;
 819              		.loc 1 436 20
 820 004c 488B45E8 		movq	-24(%rbp), %rax
 821 0050 C7401800 		movl	$0, 24(%rax)
 821      000000
 437:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 438:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->beyondMax = 0;
 822              		.loc 1 438 21
 823 0057 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 25


 824 005b C7401C00 		movl	$0, 28(%rax)
 824      000000
 439:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 440:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->argPtr = NULL;
 825              		.loc 1 440 18
 826 0062 488B45E8 		movq	-24(%rbp), %rax
 827 0066 48C74020 		movq	$0, 32(%rax)
 827      00000000 
 441:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->arrayWidth = 0;
 828              		.loc 1 441 22
 829 006e 488B45E8 		movq	-24(%rbp), %rax
 830 0072 48C74028 		movq	$0, 40(%rax)
 830      00000000 
 442:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->width = 0;
 831              		.loc 1 442 17
 832 007a 488B45E8 		movq	-24(%rbp), %rax
 833 007e C7403000 		movl	$0, 48(%rax)
 833      000000
 443:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->widthSet = 0;
 834              		.loc 1 443 20
 835 0085 488B45E8 		movq	-24(%rbp), %rax
 836 0089 C7403400 		movl	$0, 52(%rax)
 836      000000
 444:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->comChr = 0;
 837              		.loc 1 444 18
 838 0090 488B45E8 		movq	-24(%rbp), %rax
 839 0094 C7403800 		movl	$0, 56(%rax)
 839      000000
 445:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->isWChar = 0;
 840              		.loc 1 445 19
 841 009b 488B45E8 		movq	-24(%rbp), %rax
 842 009f C6404000 		movb	$0, 64(%rax)
 446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->suppress = 0;
 843              		.loc 1 446 20
 844 00a3 488B45E8 		movq	-24(%rbp), %rax
 845 00a7 C6404100 		movb	$0, 65(%rax)
 447:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 846              		.loc 1 447 1
 847 00ab 90       		nop
 848 00ac 488B45F8 		movq	-8(%rbp), %rax
 849 00b0 64483304 		xorq	%fs:40, %rax
 849      25280000 
 849      00
 850 00b9 7405     		je	.L50
 851 00bb E8000000 		call	__stack_chk_fail@PLT
 851      00
 852              	.L50:
 853 00c0 C9       		leave
 854              	.LCFI26:
 855              		.cfi_def_cfa 7, 8
 856 00c1 C3       		ret
 857              		.cfi_endproc
 858              	.LFE14:
 860              		.section	.text.SecDecodeScanQualifier,"ax",@progbits
 862              	SecDecodeScanQualifier:
 863              	.LFB15:
 448:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
GAS LISTING /tmp/ccLrrfHE.s 			page 26


 449:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 450:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * decode qualifier %I %L %h ...
 451:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * set finishFlag to  1  finish Flag
 452:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 453:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void  SecDecodeScanQualifier(const SecUnsignedChar **format, SecScanSpec *spec, int *finishF
 454:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 864              		.loc 1 454 1
 865              		.cfi_startproc
 866 0000 F30F1EFA 		endbr64
 867 0004 55       		pushq	%rbp
 868              	.LCFI27:
 869              		.cfi_def_cfa_offset 16
 870              		.cfi_offset 6, -16
 871 0005 4889E5   		movq	%rsp, %rbp
 872              	.LCFI28:
 873              		.cfi_def_cfa_register 6
 874 0008 4883EC30 		subq	$48, %rsp
 875 000c 48897DE8 		movq	%rdi, -24(%rbp)
 876 0010 488975E0 		movq	%rsi, -32(%rbp)
 877 0014 488955D8 		movq	%rdx, -40(%rbp)
 878              		.loc 1 454 1
 879 0018 64488B04 		movq	%fs:40, %rax
 879      25280000 
 879      00
 880 0021 488945F8 		movq	%rax, -8(%rbp)
 881 0025 31C0     		xorl	%eax, %eax
 455:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     switch ((int)(unsigned char)(**(format))) {
 882              		.loc 1 455 35
 883 0027 488B45E8 		movq	-24(%rbp), %rax
 884 002b 488B00   		movq	(%rax), %rax
 885              		.loc 1 455 34
 886 002e 0FB600   		movzbl	(%rax), %eax
 887              		.loc 1 455 13
 888 0031 0FB6C0   		movzbl	%al, %eax
 889 0034 83E82A   		subl	$42, %eax
 890 0037 83F850   		cmpl	$80, %eax
 891 003a 0F87CB00 		ja	.L52
 891      0000
 892 0040 89C0     		movl	%eax, %eax
 893 0042 488D1485 		leaq	0(,%rax,4), %rdx
 893      00000000 
 894 004a 488D0500 		leaq	.L54(%rip), %rax
 894      000000
 895 0051 8B0402   		movl	(%rdx,%rax), %eax
 896 0054 4898     		cltq
 897 0056 488D1500 		leaq	.L54(%rip), %rdx
 897      000000
 898 005d 4801D0   		addq	%rdx, %rax
 899 0060 3EFFE0   		notrack jmp	*%rax
 900              		.section	.rodata.SecDecodeScanQualifier,"a",@progbits
 901              		.align 4
 902              		.align 4
 903              	.L54:
 904 0000 00000000 		.long	.L62-.L54
 905 0004 00000000 		.long	.L52-.L54
 906 0008 00000000 		.long	.L52-.L54
 907 000c 00000000 		.long	.L52-.L54
GAS LISTING /tmp/ccLrrfHE.s 			page 27


 908 0010 00000000 		.long	.L52-.L54
 909 0014 00000000 		.long	.L52-.L54
 910 0018 00000000 		.long	.L52-.L54
 911 001c 00000000 		.long	.L52-.L54
 912 0020 00000000 		.long	.L52-.L54
 913 0024 00000000 		.long	.L52-.L54
 914 0028 00000000 		.long	.L52-.L54
 915 002c 00000000 		.long	.L52-.L54
 916 0030 00000000 		.long	.L52-.L54
 917 0034 00000000 		.long	.L52-.L54
 918 0038 00000000 		.long	.L52-.L54
 919 003c 00000000 		.long	.L52-.L54
 920 0040 00000000 		.long	.L52-.L54
 921 0044 00000000 		.long	.L52-.L54
 922 0048 00000000 		.long	.L52-.L54
 923 004c 00000000 		.long	.L52-.L54
 924 0050 00000000 		.long	.L52-.L54
 925 0054 00000000 		.long	.L52-.L54
 926 0058 00000000 		.long	.L52-.L54
 927 005c 00000000 		.long	.L52-.L54
 928 0060 00000000 		.long	.L52-.L54
 929 0064 00000000 		.long	.L52-.L54
 930 0068 00000000 		.long	.L52-.L54
 931 006c 00000000 		.long	.L52-.L54
 932 0070 00000000 		.long	.L65-.L54
 933 0074 00000000 		.long	.L52-.L54
 934 0078 00000000 		.long	.L52-.L54
 935 007c 00000000 		.long	.L61-.L54
 936 0080 00000000 		.long	.L52-.L54
 937 0084 00000000 		.long	.L52-.L54
 938 0088 00000000 		.long	.L56-.L54
 939 008c 00000000 		.long	.L52-.L54
 940 0090 00000000 		.long	.L65-.L54
 941 0094 00000000 		.long	.L52-.L54
 942 0098 00000000 		.long	.L52-.L54
 943 009c 00000000 		.long	.L52-.L54
 944 00a0 00000000 		.long	.L52-.L54
 945 00a4 00000000 		.long	.L52-.L54
 946 00a8 00000000 		.long	.L52-.L54
 947 00ac 00000000 		.long	.L52-.L54
 948 00b0 00000000 		.long	.L52-.L54
 949 00b4 00000000 		.long	.L52-.L54
 950 00b8 00000000 		.long	.L52-.L54
 951 00bc 00000000 		.long	.L52-.L54
 952 00c0 00000000 		.long	.L52-.L54
 953 00c4 00000000 		.long	.L52-.L54
 954 00c8 00000000 		.long	.L52-.L54
 955 00cc 00000000 		.long	.L52-.L54
 956 00d0 00000000 		.long	.L52-.L54
 957 00d4 00000000 		.long	.L52-.L54
 958 00d8 00000000 		.long	.L52-.L54
 959 00dc 00000000 		.long	.L52-.L54
 960 00e0 00000000 		.long	.L52-.L54
 961 00e4 00000000 		.long	.L52-.L54
 962 00e8 00000000 		.long	.L52-.L54
 963 00ec 00000000 		.long	.L52-.L54
 964 00f0 00000000 		.long	.L52-.L54
GAS LISTING /tmp/ccLrrfHE.s 			page 28


 965 00f4 00000000 		.long	.L52-.L54
 966 00f8 00000000 		.long	.L59-.L54
 967 00fc 00000000 		.long	.L52-.L54
 968 0100 00000000 		.long	.L58-.L54
 969 0104 00000000 		.long	.L52-.L54
 970 0108 00000000 		.long	.L57-.L54
 971 010c 00000000 		.long	.L52-.L54
 972 0110 00000000 		.long	.L52-.L54
 973 0114 00000000 		.long	.L52-.L54
 974 0118 00000000 		.long	.L52-.L54
 975 011c 00000000 		.long	.L56-.L54
 976 0120 00000000 		.long	.L52-.L54
 977 0124 00000000 		.long	.L52-.L54
 978 0128 00000000 		.long	.L53-.L54
 979 012c 00000000 		.long	.L52-.L54
 980 0130 00000000 		.long	.L52-.L54
 981 0134 00000000 		.long	.L55-.L54
 982 0138 00000000 		.long	.L52-.L54
 983 013c 00000000 		.long	.L52-.L54
 984 0140 00000000 		.long	.L53-.L54
 985              		.section	.text.SecDecodeScanQualifier
 986              	.L59:
 456:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('F'):    /* fall-through */ /* FALLTHRU */
 457:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('N'):
 458:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 459:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('h'):
 460:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             --spec->numberWidth;  /* h for SHORT , hh for CHAR */
 987              		.loc 1 460 19
 988 0063 488B45E0 		movq	-32(%rbp), %rax
 989 0067 8B4010   		movl	16(%rax), %eax
 990              		.loc 1 460 13
 991 006a 8D50FF   		leal	-1(%rax), %edx
 992 006d 488B45E0 		movq	-32(%rbp), %rax
 993 0071 895010   		movl	%edx, 16(%rax)
 461:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isWChar = -1;
 994              		.loc 1 461 27
 995 0074 488B45E0 		movq	-32(%rbp), %rax
 996 0078 C64040FF 		movb	$-1, 64(%rax)
 462:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 997              		.loc 1 462 13
 998 007c E9970000 		jmp	.L63
 998      00
 999              	.L58:
 463:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_COMPATIBLE_LINUX_FORMAT
 464:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('j'):
 465:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->numberWidth = SECUREC_NUM_WIDTH_LONG_LONG;  /* intmax_t or uintmax_t */
 1000              		.loc 1 465 31
 1001 0081 488B45E0 		movq	-32(%rbp), %rax
 1002 0085 C7401003 		movl	$3, 16(%rax)
 1002      000000
 466:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isInt64Arg = 1;
 1003              		.loc 1 466 30
 1004 008c 488B45E0 		movq	-32(%rbp), %rax
 1005 0090 C7401401 		movl	$1, 20(%rax)
 1005      000000
 467:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1006              		.loc 1 467 13
GAS LISTING /tmp/ccLrrfHE.s 			page 29


 1007 0097 EB7F     		jmp	.L63
 1008              	.L53:
 468:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('t'):    /* fall-through */ /* FALLTHRU */
 469:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 470:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('z'):
 471:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 472:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->numberWidth = SECUREC_NUM_WIDTH_LONG_LONG;
 1009              		.loc 1 472 31
 1010 0099 488B45E0 		movq	-32(%rbp), %rax
 1011 009d C7401003 		movl	$3, 16(%rax)
 1011      000000
 473:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isInt64Arg = 1;
 1012              		.loc 1 473 30
 1013 00a4 488B45E0 		movq	-32(%rbp), %rax
 1014 00a8 C7401401 		movl	$1, 20(%rax)
 1014      000000
 474:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 475:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->numberWidth = SECUREC_NUM_WIDTH_LONG;
 476:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 477:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1015              		.loc 1 477 13
 1016 00af EB67     		jmp	.L63
 1017              	.L56:
 478:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('L'):    /* long double */ /* fall-through */ /* FALLTHRU */
 479:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('q'):
 480:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->numberWidth = SECUREC_NUM_WIDTH_LONG_LONG;
 1018              		.loc 1 480 31
 1019 00b1 488B45E0 		movq	-32(%rbp), %rax
 1020 00b5 C7401003 		movl	$3, 16(%rax)
 1020      000000
 481:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isInt64Arg = 1;
 1021              		.loc 1 481 30
 1022 00bc 488B45E0 		movq	-32(%rbp), %rax
 1023 00c0 C7401401 		movl	$1, 20(%rax)
 1023      000000
 482:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1024              		.loc 1 482 13
 1025 00c7 EB4F     		jmp	.L63
 1026              	.L57:
 483:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('l'):
 484:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecDecodeScanQualifierL(format, spec);
 1027              		.loc 1 484 13
 1028 00c9 488B55E0 		movq	-32(%rbp), %rdx
 1029 00cd 488B45E8 		movq	-24(%rbp), %rax
 1030 00d1 4889D6   		movq	%rdx, %rsi
 1031 00d4 4889C7   		movq	%rax, %rdi
 1032 00d7 E8000000 		call	SecDecodeScanQualifierL
 1032      00
 485:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1033              		.loc 1 485 13
 1034 00dc EB3A     		jmp	.L63
 1035              	.L55:
 486:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('w'):
 487:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->isWChar = 1;
 1036              		.loc 1 487 27
 1037 00de 488B45E0 		movq	-32(%rbp), %rax
 1038 00e2 C6404001 		movb	$1, 64(%rax)
GAS LISTING /tmp/ccLrrfHE.s 			page 30


 488:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1039              		.loc 1 488 13
 1040 00e6 EB30     		jmp	.L63
 1041              	.L62:
 489:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('*'):
 490:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->suppress = 1;
 1042              		.loc 1 490 28
 1043 00e8 488B45E0 		movq	-32(%rbp), %rax
 1044 00ec C6404101 		movb	$1, 65(%rax)
 491:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1045              		.loc 1 491 13
 1046 00f0 EB26     		jmp	.L63
 1047              	.L61:
 492:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('I'):
 493:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecDecodeScanQualifierI(format, spec, finishFlag);
 1048              		.loc 1 493 13
 1049 00f2 488B55D8 		movq	-40(%rbp), %rdx
 1050 00f6 488B4DE0 		movq	-32(%rbp), %rcx
 1051 00fa 488B45E8 		movq	-24(%rbp), %rax
 1052 00fe 4889CE   		movq	%rcx, %rsi
 1053 0101 4889C7   		movq	%rax, %rdi
 1054 0104 E8000000 		call	SecDecodeScanQualifierI
 1054      00
 494:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1055              		.loc 1 494 13
 1056 0109 EB0D     		jmp	.L63
 1057              	.L52:
 495:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         default:
 496:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             *finishFlag = 1;
 1058              		.loc 1 496 25
 1059 010b 488B45D8 		movq	-40(%rbp), %rax
 1060 010f C7000100 		movl	$1, (%rax)
 1060      0000
 497:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 1061              		.loc 1 497 13
 1062 0115 EB01     		jmp	.L63
 1063              	.L65:
 458:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         case SECUREC_CHAR('h'):
 1064              		.loc 1 458 13
 1065 0117 90       		nop
 1066              	.L63:
 498:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 499:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 500:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1067              		.loc 1 500 1
 1068 0118 90       		nop
 1069 0119 488B45F8 		movq	-8(%rbp), %rax
 1070 011d 64483304 		xorq	%fs:40, %rax
 1070      25280000 
 1070      00
 1071 0126 7405     		je	.L64
 1072 0128 E8000000 		call	__stack_chk_fail@PLT
 1072      00
 1073              	.L64:
 1074 012d C9       		leave
 1075              	.LCFI29:
 1076              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccLrrfHE.s 			page 31


 1077 012e C3       		ret
 1078              		.cfi_endproc
 1079              	.LFE15:
 1081              		.section	.text.SecDecodeScanFlag,"ax",@progbits
 1083              	SecDecodeScanFlag:
 1084              	.LFB16:
 501:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 502:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * decode width and qualifier in format
 503:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 504:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecDecodeScanFlag(const SecUnsignedChar **format, SecScanSpec *spec)
 505:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1085              		.loc 1 505 1
 1086              		.cfi_startproc
 1087 0000 F30F1EFA 		endbr64
 1088 0004 55       		pushq	%rbp
 1089              	.LCFI30:
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 6, -16
 1092 0005 4889E5   		movq	%rsp, %rbp
 1093              	.LCFI31:
 1094              		.cfi_def_cfa_register 6
 1095 0008 4883EC30 		subq	$48, %rsp
 1096 000c 48897DD8 		movq	%rdi, -40(%rbp)
 1097 0010 488975D0 		movq	%rsi, -48(%rbp)
 1098              		.loc 1 505 1
 1099 0014 64488B04 		movq	%fs:40, %rax
 1099      25280000 
 1099      00
 1100 001d 488945F8 		movq	%rax, -8(%rbp)
 1101 0021 31C0     		xorl	%eax, %eax
 506:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 1102              		.loc 1 506 34
 1103 0023 488B45D8 		movq	-40(%rbp), %rax
 1104 0027 488B00   		movq	(%rax), %rax
 1105              		.loc 1 506 28
 1106 002a 488945F0 		movq	%rax, -16(%rbp)
 507:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int finishFlag = 0;
 1107              		.loc 1 507 9
 1108 002e C745EC00 		movl	$0, -20(%rbp)
 1108      000000
 1109              	.L69:
 508:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 509:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     do {
 510:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt; /*  first skip % , next  seek fmt */
 1110              		.loc 1 510 9
 1111 0035 488B45F0 		movq	-16(%rbp), %rax
 1112 0039 4883C001 		addq	$1, %rax
 1113 003d 488945F0 		movq	%rax, -16(%rbp)
 511:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* may %*6d , so put it inside the loop */
 512:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecDecodeScanWidth(&fmt, spec) != 0) {
 1114              		.loc 1 512 13
 1115 0041 488B55D0 		movq	-48(%rbp), %rdx
 1116 0045 488D45F0 		leaq	-16(%rbp), %rax
 1117 0049 4889D6   		movq	%rdx, %rsi
 1118 004c 4889C7   		movq	%rax, %rdi
 1119 004f E8000000 		call	SecDecodeScanWidth
 1119      00
GAS LISTING /tmp/ccLrrfHE.s 			page 32


 1120              		.loc 1 512 12
 1121 0054 85C0     		testl	%eax, %eax
 1122 0056 7407     		je	.L67
 513:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 1123              		.loc 1 513 20
 1124 0058 B8FFFFFF 		movl	$-1, %eax
 1124      FF
 1125 005d EB2E     		jmp	.L70
 1126              	.L67:
 514:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 515:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecDecodeScanQualifier(&fmt, spec, &finishFlag);
 1127              		.loc 1 515 9
 1128 005f 488D55EC 		leaq	-20(%rbp), %rdx
 1129 0063 488B4DD0 		movq	-48(%rbp), %rcx
 1130 0067 488D45F0 		leaq	-16(%rbp), %rax
 1131 006b 4889CE   		movq	%rcx, %rsi
 1132 006e 4889C7   		movq	%rax, %rdi
 1133 0071 E8000000 		call	SecDecodeScanQualifier
 1133      00
 516:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } while (finishFlag == 0);
 1134              		.loc 1 516 25
 1135 0076 8B45EC   		movl	-20(%rbp), %eax
 1136              		.loc 1 516 5
 1137 0079 85C0     		testl	%eax, %eax
 1138 007b 74B8     		je	.L69
 517:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 1139              		.loc 1 517 13
 1140 007d 488B55F0 		movq	-16(%rbp), %rdx
 1141 0081 488B45D8 		movq	-40(%rbp), %rax
 1142 0085 488910   		movq	%rdx, (%rax)
 518:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 1143              		.loc 1 518 12
 1144 0088 B8000000 		movl	$0, %eax
 1144      00
 1145              	.L70:
 519:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1146              		.loc 1 519 1 discriminator 1
 1147 008d 488B4DF8 		movq	-8(%rbp), %rcx
 1148 0091 6448330C 		xorq	%fs:40, %rcx
 1148      25280000 
 1148      00
 1149 009a 7405     		je	.L71
 1150              		.loc 1 519 1 is_stmt 0
 1151 009c E8000000 		call	__stack_chk_fail@PLT
 1151      00
 1152              	.L71:
 1153 00a1 C9       		leave
 1154              	.LCFI32:
 1155              		.cfi_def_cfa 7, 8
 1156 00a2 C3       		ret
 1157              		.cfi_endproc
 1158              	.LFE16:
 1160              		.section	.text.SecDecodeClearFormat,"ax",@progbits
 1162              	SecDecodeClearFormat:
 1163              	.LFB17:
 520:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 521:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
GAS LISTING /tmp/ccLrrfHE.s 			page 33


 522:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 523:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 524:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 525:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 526:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Judging whether a zeroing buffer is needed according to different formats
 527:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 528:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecDecodeClearFormat(const SecUnsignedChar *format, int *comChr)
 529:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1164              		.loc 1 529 1 is_stmt 1
 1165              		.cfi_startproc
 1166 0000 F30F1EFA 		endbr64
 1167 0004 55       		pushq	%rbp
 1168              	.LCFI33:
 1169              		.cfi_def_cfa_offset 16
 1170              		.cfi_offset 6, -16
 1171 0005 4889E5   		movq	%rsp, %rbp
 1172              	.LCFI34:
 1173              		.cfi_def_cfa_register 6
 1174 0008 4883EC30 		subq	$48, %rsp
 1175 000c 48897DD8 		movq	%rdi, -40(%rbp)
 1176 0010 488975D0 		movq	%rsi, -48(%rbp)
 1177              		.loc 1 529 1
 1178 0014 64488B04 		movq	%fs:40, %rax
 1178      25280000 
 1178      00
 1179 001d 488945F8 		movq	%rax, -8(%rbp)
 1180 0021 31C0     		xorl	%eax, %eax
 530:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = format;
 1181              		.loc 1 530 28
 1182 0023 488B45D8 		movq	-40(%rbp), %rax
 1183 0027 488945F0 		movq	%rax, -16(%rbp)
 531:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* to lowercase */
 532:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int ch = (unsigned char)(*fmt) | (SECUREC_CHAR('a') - SECUREC_CHAR('A'));
 1184              		.loc 1 532 30
 1185 002b 488B45F0 		movq	-16(%rbp), %rax
 1186 002f 0FB600   		movzbl	(%rax), %eax
 1187              		.loc 1 532 36
 1188 0032 83C820   		orl	$32, %eax
 1189              		.loc 1 532 9
 1190 0035 0FB6C0   		movzbl	%al, %eax
 1191 0038 8945EC   		movl	%eax, -20(%rbp)
 533:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (!(ch == SECUREC_CHAR('c') || ch == SECUREC_CHAR('s') || ch == SECUREC_BRACE)) {
 1192              		.loc 1 533 8
 1193 003b 837DEC63 		cmpl	$99, -20(%rbp)
 1194 003f 7413     		je	.L73
 1195              		.loc 1 533 35 discriminator 1
 1196 0041 837DEC73 		cmpl	$115, -20(%rbp)
 1197 0045 740D     		je	.L73
 1198              		.loc 1 533 9 discriminator 2
 1199 0047 837DEC7B 		cmpl	$123, -20(%rbp)
 1200 004b 7407     		je	.L73
 534:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;     /* first argument is not a string type */
 1201              		.loc 1 534 16
 1202 004d B8FFFFFF 		movl	$-1, %eax
 1202      FF
 1203 0052 EB7A     		jmp	.L74
 1204              	.L73:
GAS LISTING /tmp/ccLrrfHE.s 			page 34


 535:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 536:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch == SECUREC_BRACE) {
 1205              		.loc 1 536 8
 1206 0054 837DEC7B 		cmpl	$123, -20(%rbp)
 1207 0058 7566     		jne	.L75
 537:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if !(defined(SECUREC_COMPATIBLE_WIN_FORMAT))
 538:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (*fmt == SECUREC_CHAR('{')) {
 1208              		.loc 1 538 13
 1209 005a 488B45F0 		movq	-16(%rbp), %rax
 1210 005e 0FB600   		movzbl	(%rax), %eax
 1211              		.loc 1 538 12
 1212 0061 3C7B     		cmpb	$123, %al
 1213 0063 7507     		jne	.L76
 539:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 1214              		.loc 1 539 20
 1215 0065 B8FFFFFF 		movl	$-1, %eax
 1215      FF
 1216 006a EB62     		jmp	.L74
 1217              	.L76:
 540:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 541:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 542:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1218              		.loc 1 542 9
 1219 006c 488345F0 		addq	$1, -16(%rbp)
 1219      01
 543:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (*fmt == SECUREC_CHAR('^')) {
 1220              		.loc 1 543 13
 1221 0071 488B45F0 		movq	-16(%rbp), %rax
 1222 0075 0FB600   		movzbl	(%rax), %eax
 1223              		.loc 1 543 12
 1224 0078 3C5E     		cmpb	$94, %al
 1225 007a 7505     		jne	.L77
 544:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1226              		.loc 1 544 13
 1227 007c 488345F0 		addq	$1, -16(%rbp)
 1227      01
 1228              	.L77:
 545:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 546:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (*fmt == SECUREC_CHAR(']')) {
 1229              		.loc 1 546 13
 1230 0081 488B45F0 		movq	-16(%rbp), %rax
 1231 0085 0FB600   		movzbl	(%rax), %eax
 1232              		.loc 1 546 12
 1233 0088 3C5D     		cmpb	$93, %al
 1234 008a 750C     		jne	.L79
 547:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1235              		.loc 1 547 13
 1236 008c 488345F0 		addq	$1, -16(%rbp)
 1236      01
 548:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         while ((*fmt != SECUREC_CHAR('\0')) && (*fmt != SECUREC_CHAR(']'))) {
 1237              		.loc 1 549 15
 1238 0091 EB05     		jmp	.L79
 1239              	.L81:
 550:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1240              		.loc 1 550 13
 1241 0093 488345F0 		addq	$1, -16(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 35


 1241      01
 1242              	.L79:
 549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1243              		.loc 1 549 17
 1244 0098 488B45F0 		movq	-16(%rbp), %rax
 1245 009c 0FB600   		movzbl	(%rax), %eax
 549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1246              		.loc 1 549 15
 1247 009f 84C0     		testb	%al, %al
 1248 00a1 740B     		je	.L80
 549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1249              		.loc 1 549 49 discriminator 1
 1250 00a3 488B45F0 		movq	-16(%rbp), %rax
 1251 00a7 0FB600   		movzbl	(%rax), %eax
 549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 1252              		.loc 1 549 45 discriminator 1
 1253 00aa 3C5D     		cmpb	$93, %al
 1254 00ac 75E5     		jne	.L81
 1255              	.L80:
 551:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 552:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (*fmt == SECUREC_CHAR('\0')) {
 1256              		.loc 1 552 13
 1257 00ae 488B45F0 		movq	-16(%rbp), %rax
 1258 00b2 0FB600   		movzbl	(%rax), %eax
 1259              		.loc 1 552 12
 1260 00b5 84C0     		testb	%al, %al
 1261 00b7 7507     		jne	.L75
 553:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1; /* trunc'd format string */
 1262              		.loc 1 553 20
 1263 00b9 B8FFFFFF 		movl	$-1, %eax
 1263      FF
 1264 00be EB0E     		jmp	.L74
 1265              	.L75:
 554:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 555:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 556:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *comChr = ch;
 1266              		.loc 1 556 13
 1267 00c0 488B45D0 		movq	-48(%rbp), %rax
 1268 00c4 8B55EC   		movl	-20(%rbp), %edx
 1269 00c7 8910     		movl	%edx, (%rax)
 557:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 1270              		.loc 1 557 12
 1271 00c9 B8000000 		movl	$0, %eax
 1271      00
 1272              	.L74:
 558:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1273              		.loc 1 558 1
 1274 00ce 488B4DF8 		movq	-8(%rbp), %rcx
 1275 00d2 6448330C 		xorq	%fs:40, %rcx
 1275      25280000 
 1275      00
 1276 00db 7405     		je	.L82
 1277 00dd E8000000 		call	__stack_chk_fail@PLT
 1277      00
 1278              	.L82:
 1279 00e2 C9       		leave
 1280              	.LCFI35:
GAS LISTING /tmp/ccLrrfHE.s 			page 36


 1281              		.cfi_def_cfa 7, 8
 1282 00e3 C3       		ret
 1283              		.cfi_endproc
 1284              	.LFE17:
 1286              		.section	.text.SecAddEndingZero,"ax",@progbits
 1288              	SecAddEndingZero:
 1289              	.LFB18:
 559:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 560:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 561:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * add L'\0' for wchar string , add '\0' for char string
 562:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 563:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecAddEndingZero(void *ptr, const SecScanSpec *spec)
 564:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1290              		.loc 1 564 1
 1291              		.cfi_startproc
 1292 0000 F30F1EFA 		endbr64
 1293 0004 55       		pushq	%rbp
 1294              	.LCFI36:
 1295              		.cfi_def_cfa_offset 16
 1296              		.cfi_offset 6, -16
 1297 0005 4889E5   		movq	%rsp, %rbp
 1298              	.LCFI37:
 1299              		.cfi_def_cfa_register 6
 1300 0008 4883EC20 		subq	$32, %rsp
 1301 000c 48897DE8 		movq	%rdi, -24(%rbp)
 1302 0010 488975E0 		movq	%rsi, -32(%rbp)
 1303              		.loc 1 564 1
 1304 0014 64488B04 		movq	%fs:40, %rax
 1304      25280000 
 1304      00
 1305 001d 488945F8 		movq	%rax, -8(%rbp)
 1306 0021 31C0     		xorl	%eax, %eax
 565:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *(char *)ptr = '\0';
 1307              		.loc 1 565 18
 1308 0023 488B45E8 		movq	-24(%rbp), %rax
 1309 0027 C60000   		movb	$0, (%rax)
 566:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (void)spec; /* clear not use */
 567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_HAVE_WCHART
 568:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->isWChar > 0) {
 1310              		.loc 1 568 13
 1311 002a 488B45E0 		movq	-32(%rbp), %rax
 1312 002e 0FB64040 		movzbl	64(%rax), %eax
 1313              		.loc 1 568 8
 1314 0032 84C0     		testb	%al, %al
 1315 0034 7E0A     		jle	.L86
 569:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(wchar_t UNALIGNED *)ptr = L'\0';
 1316              		.loc 1 569 35
 1317 0036 488B45E8 		movq	-24(%rbp), %rax
 1318 003a C7000000 		movl	$0, (%rax)
 1318      0000
 1319              	.L86:
 570:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 571:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 572:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1320              		.loc 1 572 1
 1321 0040 90       		nop
 1322 0041 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 37


 1323 0045 64483304 		xorq	%fs:40, %rax
 1323      25280000 
 1323      00
 1324 004e 7405     		je	.L85
 1325 0050 E8000000 		call	__stack_chk_fail@PLT
 1325      00
 1326              	.L85:
 1327 0055 C9       		leave
 1328              	.LCFI38:
 1329              		.cfi_def_cfa 7, 8
 1330 0056 C3       		ret
 1331              		.cfi_endproc
 1332              	.LFE18:
 1334              		.section	.text.SecClearDestBuf,"ax",@progbits
 1335              		.globl	SecClearDestBuf
 1337              	SecClearDestBuf:
 1338              	.LFB19:
 573:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 574:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
 575:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 576:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Clean up the first %s %c buffer to zero for wchar version
 577:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 578:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** void SecClearDestBufW(const wchar_t *buffer, const wchar_t *format, va_list argList)
 579:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 580:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 581:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Clean up the first %s %c buffer to zero for char version
 582:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 583:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** void SecClearDestBuf(const char *buffer, const char *format, va_list argList)
 584:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 585:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1339              		.loc 1 585 1
 1340              		.cfi_startproc
 1341 0000 F30F1EFA 		endbr64
 1342 0004 55       		pushq	%rbp
 1343              	.LCFI39:
 1344              		.cfi_def_cfa_offset 16
 1345              		.cfi_offset 6, -16
 1346 0005 4889E5   		movq	%rsp, %rbp
 1347              	.LCFI40:
 1348              		.cfi_def_cfa_register 6
 1349 0008 4881ECB0 		subq	$176, %rsp
 1349      000000
 1350 000f 4889BD68 		movq	%rdi, -152(%rbp)
 1350      FFFFFF
 1351 0016 4889B560 		movq	%rsi, -160(%rbp)
 1351      FFFFFF
 1352 001d 48899558 		movq	%rdx, -168(%rbp)
 1352      FFFFFF
 1353              		.loc 1 585 1
 1354 0024 64488B04 		movq	%fs:40, %rax
 1354      25280000 
 1354      00
 1355 002d 488945F8 		movq	%rax, -8(%rbp)
 1356 0031 31C0     		xorl	%eax, %eax
 586:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 587:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     va_list argListSave;        /* backup for argList value, this variable don't need initialized *
 588:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecScanSpec spec;
GAS LISTING /tmp/ccLrrfHE.s 			page 38


 589:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int comChr = 0;
 1357              		.loc 1 589 9
 1358 0033 C78574FF 		movl	$0, -140(%rbp)
 1358      FFFF0000 
 1358      0000
 590:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = (const SecUnsignedChar *)format;
 1359              		.loc 1 590 28
 1360 003d 488B8560 		movq	-160(%rbp), %rax
 1360      FFFFFF
 1361 0044 48898578 		movq	%rax, -136(%rbp)
 1361      FFFFFF
 591:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (fmt == NULL) {
 1362              		.loc 1 591 13
 1363 004b 488B8578 		movq	-136(%rbp), %rax
 1363      FFFFFF
 1364              		.loc 1 591 8
 1365 0052 4885C0   		testq	%rax, %rax
 1366 0055 0F849C01 		je	.L106
 1366      0000
 592:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 593:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 594:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 595:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* find first % */
 596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (*fmt != SECUREC_CHAR('\0') && *fmt != SECUREC_CHAR('%')) {
 1367              		.loc 1 596 11
 1368 005b EB12     		jmp	.L90
 1369              	.L92:
 597:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1370              		.loc 1 597 9
 1371 005d 488B8578 		movq	-136(%rbp), %rax
 1371      FFFFFF
 1372 0064 4883C001 		addq	$1, %rax
 1373 0068 48898578 		movq	%rax, -136(%rbp)
 1373      FFFFFF
 1374              	.L90:
 596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1375              		.loc 1 596 12
 1376 006f 488B8578 		movq	-136(%rbp), %rax
 1376      FFFFFF
 1377 0076 0FB600   		movzbl	(%rax), %eax
 596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1378              		.loc 1 596 11
 1379 0079 84C0     		testb	%al, %al
 1380 007b 740E     		je	.L91
 596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1381              		.loc 1 596 42 discriminator 1
 1382 007d 488B8578 		movq	-136(%rbp), %rax
 1382      FFFFFF
 1383 0084 0FB600   		movzbl	(%rax), %eax
 596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 1384              		.loc 1 596 39 discriminator 1
 1385 0087 3C25     		cmpb	$37, %al
 1386 0089 75D2     		jne	.L92
 1387              	.L91:
 598:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 599:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*fmt == SECUREC_CHAR('\0')) {
 1388              		.loc 1 599 9
GAS LISTING /tmp/ccLrrfHE.s 			page 39


 1389 008b 488B8578 		movq	-136(%rbp), %rax
 1389      FFFFFF
 1390 0092 0FB600   		movzbl	(%rax), %eax
 1391              		.loc 1 599 8
 1392 0095 84C0     		testb	%al, %al
 1393 0097 0F845D01 		je	.L107
 1393      0000
 600:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 601:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 602:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 603:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecSetDefaultScanSpec(&spec);
 1394              		.loc 1 603 5
 1395 009d 488D4590 		leaq	-112(%rbp), %rax
 1396 00a1 4889C7   		movq	%rax, %rdi
 1397 00a4 E8000000 		call	SecSetDefaultScanSpec
 1397      00
 604:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SecDecodeScanFlag(&fmt, &spec) != 0) {
 1398              		.loc 1 604 9
 1399 00a9 488D5590 		leaq	-112(%rbp), %rdx
 1400 00ad 488D8578 		leaq	-136(%rbp), %rax
 1400      FFFFFF
 1401 00b4 4889D6   		movq	%rdx, %rsi
 1402 00b7 4889C7   		movq	%rax, %rdi
 1403 00ba E8000000 		call	SecDecodeScanFlag
 1403      00
 1404              		.loc 1 604 8
 1405 00bf 85C0     		testl	%eax, %eax
 1406 00c1 0F853601 		jne	.L108
 1406      0000
 605:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 606:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 607:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 608:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* update wchar flag for %S %C */
 609:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUpdateWcharFlagByType(*fmt, &spec);
 1407              		.loc 1 609 30
 1408 00c7 488B8578 		movq	-136(%rbp), %rax
 1408      FFFFFF
 1409 00ce 0FB600   		movzbl	(%rax), %eax
 1410              		.loc 1 609 5
 1411 00d1 0FB6C0   		movzbl	%al, %eax
 1412 00d4 488D5590 		leaq	-112(%rbp), %rdx
 1413 00d8 4889D6   		movq	%rdx, %rsi
 1414 00db 89C7     		movl	%eax, %edi
 1415 00dd E8000000 		call	SecUpdateWcharFlagByType
 1415      00
 610:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 611:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec.suppress != 0 || SecDecodeClearFormat(fmt, &comChr) != 0) {
 1416              		.loc 1 611 13
 1417 00e2 0FB645D1 		movzbl	-47(%rbp), %eax
 1418              		.loc 1 611 8
 1419 00e6 84C0     		testb	%al, %al
 1420 00e8 0F851201 		jne	.L109
 1420      0000
 1421              		.loc 1 611 31 discriminator 1
 1422 00ee 488B8578 		movq	-136(%rbp), %rax
 1422      FFFFFF
 1423 00f5 488D9574 		leaq	-140(%rbp), %rdx
GAS LISTING /tmp/ccLrrfHE.s 			page 40


 1423      FFFFFF
 1424 00fc 4889D6   		movq	%rdx, %rsi
 1425 00ff 4889C7   		movq	%rax, %rdi
 1426 0102 E8000000 		call	SecDecodeClearFormat
 1426      00
 1427              		.loc 1 611 28 discriminator 1
 1428 0107 85C0     		testl	%eax, %eax
 1429 0109 0F85F100 		jne	.L109
 1429      0000
 612:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 613:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 614:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 615:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((buffer != NULL) && (*buffer != SECUREC_CHAR('\0')) && (comChr != SECUREC_CHAR('s'))) {
 1430              		.loc 1 615 8
 1431 010f 4883BD68 		cmpq	$0, -152(%rbp)
 1431      FFFFFF00 
 1432 0117 741D     		je	.L97
 1433              		.loc 1 615 30 discriminator 1
 1434 0119 488B8568 		movq	-152(%rbp), %rax
 1434      FFFFFF
 1435 0120 0FB600   		movzbl	(%rax), %eax
 1436              		.loc 1 615 26 discriminator 1
 1437 0123 84C0     		testb	%al, %al
 1438 0125 740F     		je	.L97
 1439              		.loc 1 615 72 discriminator 2
 1440 0127 8B8574FF 		movl	-140(%rbp), %eax
 1440      FFFF
 1441              		.loc 1 615 61 discriminator 2
 1442 012d 83F873   		cmpl	$115, %eax
 1443 0130 0F85CD00 		jne	.L110
 1443      0000
 1444              	.L97:
 616:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* when buffer not empty just clear %s.
 617:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          * example call sscanf by  argment of (" \n", "%s", s, sizeof(s))
 618:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          */
 619:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 620:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 621:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (void)memset(&argListSave, 0, sizeof(va_list)); /* to clear e530 argListSave not initialized */
 1445              		.loc 1 621 11
 1446 0136 488D45E0 		leaq	-32(%rbp), %rax
 1447 013a BA180000 		movl	$24, %edx
 1447      00
 1448 013f BE000000 		movl	$0, %esi
 1448      00
 1449 0144 4889C7   		movq	%rax, %rdi
 1450 0147 E8000000 		call	memset@PLT
 1450      00
 622:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(va_copy)
 623:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     va_copy(argListSave, argList);
 1451              		.loc 1 623 5
 1452 014c 488D4DE0 		leaq	-32(%rbp), %rcx
 1453 0150 488BB558 		movq	-168(%rbp), %rsi
 1453      FFFFFF
 1454 0157 488B06   		movq	(%rsi), %rax
 1455 015a 488B5608 		movq	8(%rsi), %rdx
 1456 015e 488901   		movq	%rax, (%rcx)
 1457 0161 48895108 		movq	%rdx, 8(%rcx)
GAS LISTING /tmp/ccLrrfHE.s 			page 41


 1458 0165 488B4610 		movq	16(%rsi), %rax
 1459 0169 48894110 		movq	%rax, 16(%rcx)
 1460              	.LBB6:
 624:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #elif defined(__va_copy)        /* for vxworks */
 625:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     __va_copy(argListSave, argList);
 626:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 627:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     argListSave = argList;
 628:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 629:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     do {
 630:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         void *argPtr = (void *)va_arg(argListSave, void *);
 1461              		.loc 1 630 15
 1462 016d 8B45E0   		movl	-32(%rbp), %eax
 1463 0170 83F82F   		cmpl	$47, %eax
 1464 0173 7717     		ja	.L98
 1465 0175 488B45F0 		movq	-16(%rbp), %rax
 1466 0179 8B55E0   		movl	-32(%rbp), %edx
 1467 017c 89D2     		movl	%edx, %edx
 1468 017e 4801D0   		addq	%rdx, %rax
 1469 0181 8B55E0   		movl	-32(%rbp), %edx
 1470 0184 83C208   		addl	$8, %edx
 1471 0187 8955E0   		movl	%edx, -32(%rbp)
 1472 018a EB0C     		jmp	.L99
 1473              	.L98:
 1474 018c 488B45E8 		movq	-24(%rbp), %rax
 1475 0190 488D5008 		leaq	8(%rax), %rdx
 1476 0194 488955E8 		movq	%rdx, -24(%rbp)
 1477              	.L99:
 1478 0198 488B00   		movq	(%rax), %rax
 1479 019b 48894580 		movq	%rax, -128(%rbp)
 631:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* Get the next argument - size of the array in characters */
 632:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         size_t arrayWidth = ((size_t)(va_arg(argListSave, size_t))) & 0xFFFFFFFFUL;
 1480              		.loc 1 632 39
 1481 019f 8B45E0   		movl	-32(%rbp), %eax
 1482 01a2 83F82F   		cmpl	$47, %eax
 1483 01a5 7717     		ja	.L100
 1484 01a7 488B45F0 		movq	-16(%rbp), %rax
 1485 01ab 8B55E0   		movl	-32(%rbp), %edx
 1486 01ae 89D2     		movl	%edx, %edx
 1487 01b0 4801D0   		addq	%rdx, %rax
 1488 01b3 8B55E0   		movl	-32(%rbp), %edx
 1489 01b6 83C208   		addl	$8, %edx
 1490 01b9 8955E0   		movl	%edx, -32(%rbp)
 1491 01bc EB0C     		jmp	.L101
 1492              	.L100:
 1493 01be 488B45E8 		movq	-24(%rbp), %rax
 1494 01c2 488D5008 		leaq	8(%rax), %rdx
 1495 01c6 488955E8 		movq	%rdx, -24(%rbp)
 1496              	.L101:
 1497 01ca 488B00   		movq	(%rax), %rax
 1498              		.loc 1 632 16
 1499 01cd 83E0FF   		andl	$4294967295, %eax
 1500 01d0 48894588 		movq	%rax, -120(%rbp)
 633:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         va_end(argListSave);
 634:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* to clear e438 last value assigned not used , the compiler will optimize this code */
 635:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)argListSave;
 636:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* There is no need to judge the upper limit */
 637:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (arrayWidth == 0 || argPtr == NULL) {
GAS LISTING /tmp/ccLrrfHE.s 			page 42


 1501              		.loc 1 637 12
 1502 01d4 48837D88 		cmpq	$0, -120(%rbp)
 1502      00
 1503 01d9 742B     		je	.L111
 1504              		.loc 1 637 29 discriminator 1
 1505 01db 48837D80 		cmpq	$0, -128(%rbp)
 1505      00
 1506 01e0 7424     		je	.L111
 638:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return;
 639:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 640:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 641:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* clear one char */
 642:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecAddEndingZero(argPtr, &spec);
 1507              		.loc 1 642 9
 1508 01e2 488D5590 		leaq	-112(%rbp), %rdx
 1509 01e6 488B4580 		movq	-128(%rbp), %rax
 1510 01ea 4889D6   		movq	%rdx, %rsi
 1511 01ed 4889C7   		movq	%rax, %rdi
 1512 01f0 E8000000 		call	SecAddEndingZero
 1512      00
 1513              	.LBE6:
 643:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } SECUREC_WHILE_ZERO;
 644:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 1514              		.loc 1 644 5
 1515 01f5 EB10     		jmp	.L87
 1516              	.L106:
 592:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 1517              		.loc 1 592 9
 1518 01f7 90       		nop
 1519 01f8 EB0D     		jmp	.L87
 1520              	.L107:
 600:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 1521              		.loc 1 600 9
 1522 01fa 90       		nop
 1523 01fb EB0A     		jmp	.L87
 1524              	.L108:
 605:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 1525              		.loc 1 605 9
 1526 01fd 90       		nop
 1527 01fe EB07     		jmp	.L87
 1528              	.L109:
 612:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 1529              		.loc 1 612 9
 1530 0200 90       		nop
 1531 0201 EB04     		jmp	.L87
 1532              	.L110:
 619:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 1533              		.loc 1 619 9
 1534 0203 90       		nop
 1535 0204 EB01     		jmp	.L87
 1536              	.L111:
 1537              	.LBB7:
 638:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 1538              		.loc 1 638 13
 1539 0206 90       		nop
 1540              	.L87:
 1541              	.LBE7:
GAS LISTING /tmp/ccLrrfHE.s 			page 43


 645:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 646:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1542              		.loc 1 646 1
 1543 0207 488B45F8 		movq	-8(%rbp), %rax
 1544 020b 64483304 		xorq	%fs:40, %rax
 1544      25280000 
 1544      00
 1545 0214 7405     		je	.L105
 1546 0216 E8000000 		call	__stack_chk_fail@PLT
 1546      00
 1547              	.L105:
 1548 021b C9       		leave
 1549              	.LCFI41:
 1550              		.cfi_def_cfa 7, 8
 1551 021c C3       		ret
 1552              		.cfi_endproc
 1553              	.LFE19:
 1555              		.section	.text.SecAssignNumber,"ax",@progbits
 1557              	SecAssignNumber:
 1558              	.LFB20:
 647:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 648:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 649:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Assign number  to output buffer
 650:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 651:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecAssignNumber(const SecScanSpec *spec)
 652:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1559              		.loc 1 652 1
 1560              		.cfi_startproc
 1561 0000 F30F1EFA 		endbr64
 1562 0004 55       		pushq	%rbp
 1563              	.LCFI42:
 1564              		.cfi_def_cfa_offset 16
 1565              		.cfi_offset 6, -16
 1566 0005 4889E5   		movq	%rsp, %rbp
 1567              	.LCFI43:
 1568              		.cfi_def_cfa_register 6
 1569 0008 4883EC20 		subq	$32, %rsp
 1570 000c 48897DE8 		movq	%rdi, -24(%rbp)
 1571              		.loc 1 652 1
 1572 0010 64488B04 		movq	%fs:40, %rax
 1572      25280000 
 1572      00
 1573 0019 488945F8 		movq	%rax, -8(%rbp)
 1574 001d 31C0     		xorl	%eax, %eax
 653:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     void *argPtr = spec->argPtr;
 1575              		.loc 1 653 11
 1576 001f 488B45E8 		movq	-24(%rbp), %rax
 1577 0023 488B4020 		movq	32(%rax), %rax
 1578 0027 488945F0 		movq	%rax, -16(%rbp)
 654:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->isInt64Arg != 0) {
 1579              		.loc 1 654 13
 1580 002b 488B45E8 		movq	-24(%rbp), %rax
 1581 002f 8B4014   		movl	20(%rax), %eax
 1582              		.loc 1 654 8
 1583 0032 85C0     		testl	%eax, %eax
 1584 0034 7413     		je	.L113
 655:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_VXWORKS_PLATFORM)
GAS LISTING /tmp/ccLrrfHE.s 			page 44


 656:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_VXWORKS_PLATFORM_COMP)
 657:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(SecInt64 UNALIGNED *)argPtr = (SecInt64)(spec->number64);
 658:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 659:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          /* take number64 as unsigned number unsigned to int clear Compile warning */
 660:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(SecInt64 UNALIGNED *)argPtr = *(SecUnsignedInt64 *)(&(spec->number64));
 661:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 662:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 663:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* take number64 as unsigned number */
 664:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(SecInt64 UNALIGNED *)argPtr = (SecInt64)(spec->number64);
 1585              		.loc 1 664 56
 1586 0036 488B45E8 		movq	-24(%rbp), %rax
 1587 003a 488B00   		movq	(%rax), %rax
 1588              		.loc 1 664 41
 1589 003d 4889C2   		movq	%rax, %rdx
 1590              		.loc 1 664 39
 1591 0040 488B45F0 		movq	-16(%rbp), %rax
 1592 0044 488910   		movq	%rdx, (%rax)
 665:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 666:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 1593              		.loc 1 666 9
 1594 0047 EB6C     		jmp	.L112
 1595              	.L113:
 667:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 668:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->numberWidth > SECUREC_NUM_WIDTH_INT) {
 1596              		.loc 1 668 13
 1597 0049 488B45E8 		movq	-24(%rbp), %rax
 1598 004d 8B4010   		movl	16(%rax), %eax
 1599              		.loc 1 668 8
 1600 0050 83F801   		cmpl	$1, %eax
 1601 0053 7E14     		jle	.L115
 669:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* take number as unsigned number */
 670:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(long UNALIGNED *)argPtr = (long)(spec->number);
 1602              		.loc 1 670 48
 1603 0055 488B45E8 		movq	-24(%rbp), %rax
 1604 0059 488B4008 		movq	8(%rax), %rax
 1605              		.loc 1 670 37
 1606 005d 4889C2   		movq	%rax, %rdx
 1607              		.loc 1 670 35
 1608 0060 488B45F0 		movq	-16(%rbp), %rax
 1609 0064 488910   		movq	%rdx, (%rax)
 1610 0067 EB4C     		jmp	.L112
 1611              	.L115:
 671:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if (spec->numberWidth == SECUREC_NUM_WIDTH_INT) {
 1612              		.loc 1 671 20
 1613 0069 488B45E8 		movq	-24(%rbp), %rax
 1614 006d 8B4010   		movl	16(%rax), %eax
 1615              		.loc 1 671 15
 1616 0070 83F801   		cmpl	$1, %eax
 1617 0073 7512     		jne	.L116
 672:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(int UNALIGNED *)argPtr = (int)(spec->number);
 1618              		.loc 1 672 46
 1619 0075 488B45E8 		movq	-24(%rbp), %rax
 1620 0079 488B4008 		movq	8(%rax), %rax
 1621              		.loc 1 672 36
 1622 007d 89C2     		movl	%eax, %edx
 1623              		.loc 1 672 34
 1624 007f 488B45F0 		movq	-16(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 45


 1625 0083 8910     		movl	%edx, (%rax)
 1626 0085 EB2E     		jmp	.L112
 1627              	.L116:
 673:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if (spec->numberWidth == SECUREC_NUM_WIDTH_SHORT) {
 1628              		.loc 1 673 20
 1629 0087 488B45E8 		movq	-24(%rbp), %rax
 1630 008b 8B4010   		movl	16(%rax), %eax
 1631              		.loc 1 673 15
 1632 008e 85C0     		testl	%eax, %eax
 1633 0090 7513     		jne	.L117
 674:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* take number as unsigned number */
 675:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(short UNALIGNED *)argPtr = (short)(spec->number);
 1634              		.loc 1 675 50
 1635 0092 488B45E8 		movq	-24(%rbp), %rax
 1636 0096 488B4008 		movq	8(%rax), %rax
 1637              		.loc 1 675 38
 1638 009a 89C2     		movl	%eax, %edx
 1639              		.loc 1 675 36
 1640 009c 488B45F0 		movq	-16(%rbp), %rax
 1641 00a0 668910   		movw	%dx, (%rax)
 1642 00a3 EB10     		jmp	.L112
 1643              	.L117:
 676:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {  /* < 0 for hh format modifier */
 677:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* take number as unsigned number */
 678:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(char UNALIGNED *)argPtr = (char)(spec->number);
 1644              		.loc 1 678 48
 1645 00a5 488B45E8 		movq	-24(%rbp), %rax
 1646 00a9 488B4008 		movq	8(%rax), %rax
 1647              		.loc 1 678 37
 1648 00ad 89C2     		movl	%eax, %edx
 1649              		.loc 1 678 35
 1650 00af 488B45F0 		movq	-16(%rbp), %rax
 1651 00b3 8810     		movb	%dl, (%rax)
 1652              	.L112:
 679:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 680:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1653              		.loc 1 680 1
 1654 00b5 488B45F8 		movq	-8(%rbp), %rax
 1655 00b9 64483304 		xorq	%fs:40, %rax
 1655      25280000 
 1655      00
 1656 00c2 7405     		je	.L118
 1657 00c4 E8000000 		call	__stack_chk_fail@PLT
 1657      00
 1658              	.L118:
 1659 00c9 C9       		leave
 1660              	.LCFI44:
 1661              		.cfi_def_cfa 7, 8
 1662 00ca C3       		ret
 1663              		.cfi_endproc
 1664              	.LFE20:
 1666              		.section	.text.SecIsLongBitEqual,"ax",@progbits
 1668              	SecIsLongBitEqual:
 1669              	.LFB21:
 681:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 682:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 683:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
GAS LISTING /tmp/ccLrrfHE.s 			page 46


 684:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Judge the long bit width
 685:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 686:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecIsLongBitEqual(int bitNum)
 687:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1670              		.loc 1 687 1
 1671              		.cfi_startproc
 1672 0000 F30F1EFA 		endbr64
 1673 0004 55       		pushq	%rbp
 1674              	.LCFI45:
 1675              		.cfi_def_cfa_offset 16
 1676              		.cfi_offset 6, -16
 1677 0005 4889E5   		movq	%rsp, %rbp
 1678              	.LCFI46:
 1679              		.cfi_def_cfa_register 6
 1680 0008 4883EC20 		subq	$32, %rsp
 1681 000c 897DEC   		movl	%edi, -20(%rbp)
 1682              		.loc 1 687 1
 1683 000f 64488B04 		movq	%fs:40, %rax
 1683      25280000 
 1683      00
 1684 0018 488945F8 		movq	%rax, -8(%rbp)
 1685 001c 31C0     		xorl	%eax, %eax
 688:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return (unsigned int)bitNum == SECUREC_LONG_BIT_NUM;
 1686              		.loc 1 688 33
 1687 001e 837DEC40 		cmpl	$64, -20(%rbp)
 1688 0022 0F94C0   		sete	%al
 1689 0025 0FB6C0   		movzbl	%al, %eax
 689:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1690              		.loc 1 689 1
 1691 0028 488B55F8 		movq	-8(%rbp), %rdx
 1692 002c 64483314 		xorq	%fs:40, %rdx
 1692      25280000 
 1692      00
 1693 0035 7405     		je	.L121
 1694 0037 E8000000 		call	__stack_chk_fail@PLT
 1694      00
 1695              	.L121:
 1696 003c C9       		leave
 1697              	.LCFI47:
 1698              		.cfi_def_cfa 7, 8
 1699 003d C3       		ret
 1700              		.cfi_endproc
 1701              	.LFE21:
 1703              		.section	.text.SecHexValueOfChar,"ax",@progbits
 1705              	SecHexValueOfChar:
 1706              	.LFB22:
 690:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 691:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 692:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Convert hexadecimal characters to decimal value
 693:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 694:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecHexValueOfChar(SecInt ch)
 695:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1707              		.loc 1 695 1
 1708              		.cfi_startproc
 1709 0000 F30F1EFA 		endbr64
 1710 0004 55       		pushq	%rbp
 1711              	.LCFI48:
GAS LISTING /tmp/ccLrrfHE.s 			page 47


 1712              		.cfi_def_cfa_offset 16
 1713              		.cfi_offset 6, -16
 1714 0005 4889E5   		movq	%rsp, %rbp
 1715              	.LCFI49:
 1716              		.cfi_def_cfa_register 6
 1717 0008 4883EC20 		subq	$32, %rsp
 1718 000c 897DEC   		movl	%edi, -20(%rbp)
 1719              		.loc 1 695 1
 1720 000f 64488B04 		movq	%fs:40, %rax
 1720      25280000 
 1720      00
 1721 0018 488945F8 		movq	%rax, -8(%rbp)
 1722 001c 31C0     		xorl	%eax, %eax
 696:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* use isdigt Causing tool false alarms */
 697:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return (int)((ch >= '0' && ch <= '9') ? ((unsigned char)ch - '0') :
 1723              		.loc 1 697 12
 1724 001e 837DEC2F 		cmpl	$47, -20(%rbp)
 1725 0022 7E11     		jle	.L123
 1726              		.loc 1 697 29 discriminator 1
 1727 0024 837DEC39 		cmpl	$57, -20(%rbp)
 1728 0028 7F0B     		jg	.L123
 1729              		.loc 1 697 46 discriminator 3
 1730 002a 8B45EC   		movl	-20(%rbp), %eax
 1731 002d 0FB6C0   		movzbl	%al, %eax
 1732              		.loc 1 697 12 discriminator 3
 1733 0030 83E830   		subl	$48, %eax
 1734 0033 EB0C     		jmp	.L125
 1735              	.L123:
 698:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ((((unsigned char)ch | (unsigned char)('a' - 'A')) - ('a')) + 10)); /* Adding 10 is to 
 1736              		.loc 1 698 16 discriminator 4
 1737 0035 8B45EC   		movl	-20(%rbp), %eax
 1738              		.loc 1 698 34 discriminator 4
 1739 0038 83C820   		orl	$32, %eax
 1740 003b 0FB6C0   		movzbl	%al, %eax
 697:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ((((unsigned char)ch | (unsigned char)('a' - 'A')) - ('a')) + 10)); /* Adding 10 is to 
 1741              		.loc 1 697 12 discriminator 4
 1742 003e 83E857   		subl	$87, %eax
 1743              	.L125:
 699:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1744              		.loc 1 699 1 discriminator 7
 1745 0041 488B55F8 		movq	-8(%rbp), %rdx
 1746 0045 64483314 		xorq	%fs:40, %rdx
 1746      25280000 
 1746      00
 1747 004e 7405     		je	.L126
 1748              		.loc 1 699 1 is_stmt 0
 1749 0050 E8000000 		call	__stack_chk_fail@PLT
 1749      00
 1750              	.L126:
 1751 0055 C9       		leave
 1752              	.LCFI50:
 1753              		.cfi_def_cfa 7, 8
 1754 0056 C3       		ret
 1755              		.cfi_endproc
 1756              	.LFE22:
 1758              		.section	.text.SecDecodeNumberDecimal,"ax",@progbits
 1760              	SecDecodeNumberDecimal:
GAS LISTING /tmp/ccLrrfHE.s 			page 48


 1761              	.LFB23:
 700:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 701:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 702:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 703:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 704:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse decimal character to integer for 32bit .
 705:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 706:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumberDecimal(SecInt ch, SecScanSpec *spec)
 707:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1762              		.loc 1 707 1 is_stmt 1
 1763              		.cfi_startproc
 1764 0000 F30F1EFA 		endbr64
 1765 0004 55       		pushq	%rbp
 1766              	.LCFI51:
 1767              		.cfi_def_cfa_offset 16
 1768              		.cfi_offset 6, -16
 1769 0005 4889E5   		movq	%rsp, %rbp
 1770              	.LCFI52:
 1771              		.cfi_def_cfa_register 6
 1772 0008 4883EC30 		subq	$48, %rsp
 1773 000c 897DDC   		movl	%edi, -36(%rbp)
 1774 000f 488975D0 		movq	%rsi, -48(%rbp)
 1775              		.loc 1 707 1
 1776 0013 64488B04 		movq	%fs:40, %rax
 1776      25280000 
 1776      00
 1777 001c 488945F8 		movq	%rax, -8(%rbp)
 1778 0020 31C0     		xorl	%eax, %eax
 708:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 709:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     unsigned long decimalEdge = SECUREC_MAX_32BITS_VALUE_DIV_TEN;
 1779              		.loc 1 709 19
 1780 0022 48C745E8 		movq	$429496729, -24(%rbp)
 1780      99999919 
 710:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 711:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SecIsLongBitEqual(SECUREC_LP64_BIT_WIDTH)) {
 1781              		.loc 1 711 9
 1782 002a BF400000 		movl	$64, %edi
 1782      00
 1783 002f E8000000 		call	SecIsLongBitEqual
 1783      00
 1784              		.loc 1 711 8
 1785 0034 85C0     		testl	%eax, %eax
 1786 0036 740E     		je	.L128
 712:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         decimalEdge = (unsigned long)SECUREC_MAX_64BITS_VALUE_DIV_TEN;
 1787              		.loc 1 712 21
 1788 0038 48B89999 		movabsq	$1844674407370955161, %rax
 1788      99999999 
 1788      9919
 1789 0042 488945E8 		movq	%rax, -24(%rbp)
 1790              	.L128:
 713:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 714:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 715:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SecIsLongBitEqual(SECUREC_LP32_BIT_WIDTH)) {
 716:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         decimalEdge = SECUREC_MAX_32BITS_VALUE_DIV_TEN;
 717:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 718:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 719:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->number > decimalEdge) {
GAS LISTING /tmp/ccLrrfHE.s 			page 49


 1791              		.loc 1 719 13
 1792 0046 488B45D0 		movq	-48(%rbp), %rax
 1793 004a 488B4008 		movq	8(%rax), %rax
 1794              		.loc 1 719 8
 1795 004e 483945E8 		cmpq	%rax, -24(%rbp)
 1796 0052 730B     		jnb	.L129
 720:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
 1797              		.loc 1 720 25
 1798 0054 488B45D0 		movq	-48(%rbp), %rax
 1799 0058 C7401C01 		movl	$1, 28(%rax)
 1799      000000
 1800              	.L129:
 721:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 722:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 723:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number = SECUREC_MUL_TEN(spec->number);
 1801              		.loc 1 723 20
 1802 005f 488B45D0 		movq	-48(%rbp), %rax
 1803 0063 488B4008 		movq	8(%rax), %rax
 1804 0067 488D1485 		leaq	0(,%rax,4), %rdx
 1804      00000000 
 1805 006f 488B45D0 		movq	-48(%rbp), %rax
 1806 0073 488B4008 		movq	8(%rax), %rax
 1807 0077 4801D0   		addq	%rdx, %rax
 1808 007a 488D1400 		leaq	(%rax,%rax), %rdx
 1809              		.loc 1 723 18
 1810 007e 488B45D0 		movq	-48(%rbp), %rax
 1811 0082 48895008 		movq	%rdx, 8(%rax)
 724:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 725:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->number == SECUREC_MUL_TEN(decimalEdge)) {
 1812              		.loc 1 725 13
 1813 0086 488B45D0 		movq	-48(%rbp), %rax
 1814 008a 488B4008 		movq	8(%rax), %rax
 1815              		.loc 1 725 25
 1816 008e 488B55E8 		movq	-24(%rbp), %rdx
 1817 0092 488D0C95 		leaq	0(,%rdx,4), %rcx
 1817      00000000 
 1818 009a 488B55E8 		movq	-24(%rbp), %rdx
 1819 009e 4801CA   		addq	%rcx, %rdx
 1820 00a1 4801D2   		addq	%rdx, %rdx
 1821              		.loc 1 725 8
 1822 00a4 4839D0   		cmpq	%rdx, %rax
 1823 00a7 7528     		jne	.L130
 1824              	.LBB8:
 726:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUnsignedInt64 number64As = (unsigned long)SECUREC_MAX_64BITS_VALUE - spec->number;
 1825              		.loc 1 726 85
 1826 00a9 488B45D0 		movq	-48(%rbp), %rax
 1827 00ad 488B4008 		movq	8(%rax), %rax
 1828              		.loc 1 726 26
 1829 00b1 48F7D0   		notq	%rax
 1830 00b4 488945F0 		movq	%rax, -16(%rbp)
 727:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (number64As < (SecUnsignedInt64)((SecUnsignedInt)ch - SECUREC_CHAR('0'))) {
 1831              		.loc 1 727 45
 1832 00b8 8B45DC   		movl	-36(%rbp), %eax
 1833              		.loc 1 727 64
 1834 00bb 83E830   		subl	$48, %eax
 1835              		.loc 1 727 26
 1836 00be 89C0     		movl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 50


 1837              		.loc 1 727 12
 1838 00c0 483945F0 		cmpq	%rax, -16(%rbp)
 1839 00c4 730B     		jnb	.L130
 728:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->beyondMax = 1;
 1840              		.loc 1 728 29
 1841 00c6 488B45D0 		movq	-48(%rbp), %rax
 1842 00ca C7401C01 		movl	$1, 28(%rax)
 1842      000000
 1843              	.L130:
 1844              	.LBE8:
 729:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 730:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 731:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 732:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number += (unsigned long)((SecUnsignedInt)ch - SECUREC_CHAR('0'));
 1845              		.loc 1 732 18
 1846 00d1 488B45D0 		movq	-48(%rbp), %rax
 1847 00d5 488B4008 		movq	8(%rax), %rax
 1848              		.loc 1 732 37
 1849 00d9 8B55DC   		movl	-36(%rbp), %edx
 1850              		.loc 1 732 56
 1851 00dc 83EA30   		subl	$48, %edx
 1852              		.loc 1 732 21
 1853 00df 89D2     		movl	%edx, %edx
 1854              		.loc 1 732 18
 1855 00e1 4801C2   		addq	%rax, %rdx
 1856 00e4 488B45D0 		movq	-48(%rbp), %rax
 1857 00e8 48895008 		movq	%rdx, 8(%rax)
 733:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 734:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1858              		.loc 1 734 1
 1859 00ec 90       		nop
 1860 00ed 488B45F8 		movq	-8(%rbp), %rax
 1861 00f1 64483304 		xorq	%fs:40, %rax
 1861      25280000 
 1861      00
 1862 00fa 7405     		je	.L131
 1863 00fc E8000000 		call	__stack_chk_fail@PLT
 1863      00
 1864              	.L131:
 1865 0101 C9       		leave
 1866              	.LCFI53:
 1867              		.cfi_def_cfa 7, 8
 1868 0102 C3       		ret
 1869              		.cfi_endproc
 1870              	.LFE23:
 1872              		.section	.text.SecDecodeNumberHex,"ax",@progbits
 1874              	SecDecodeNumberHex:
 1875              	.LFB24:
 735:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 736:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 737:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 738:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse Hex character to integer for 32bit .
 739:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 740:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumberHex(SecInt ch, SecScanSpec *spec)
 741:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1876              		.loc 1 741 1
 1877              		.cfi_startproc
GAS LISTING /tmp/ccLrrfHE.s 			page 51


 1878 0000 F30F1EFA 		endbr64
 1879 0004 55       		pushq	%rbp
 1880              	.LCFI54:
 1881              		.cfi_def_cfa_offset 16
 1882              		.cfi_offset 6, -16
 1883 0005 4889E5   		movq	%rsp, %rbp
 1884              	.LCFI55:
 1885              		.cfi_def_cfa_register 6
 1886 0008 4883EC20 		subq	$32, %rsp
 1887 000c 897DEC   		movl	%edi, -20(%rbp)
 1888 000f 488975E0 		movq	%rsi, -32(%rbp)
 1889              		.loc 1 741 1
 1890 0013 64488B04 		movq	%fs:40, %rax
 1890      25280000 
 1890      00
 1891 001c 488945F8 		movq	%rax, -8(%rbp)
 1892 0020 31C0     		xorl	%eax, %eax
 742:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 743:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SECUREC_LONG_HEX_BEYOND_MAX(spec->number)) {
 1893              		.loc 1 743 9
 1894 0022 488B45E0 		movq	-32(%rbp), %rax
 1895 0026 488B4008 		movq	8(%rax), %rax
 1896 002a 48C1E83C 		shrq	$60, %rax
 1897              		.loc 1 743 8
 1898 002e 4885C0   		testq	%rax, %rax
 1899 0031 740B     		je	.L133
 744:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
 1900              		.loc 1 744 25
 1901 0033 488B45E0 		movq	-32(%rbp), %rax
 1902 0037 C7401C01 		movl	$1, 28(%rax)
 1902      000000
 1903              	.L133:
 745:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 746:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 747:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number = SECUREC_MUL_SIXTEEN(spec->number);
 1904              		.loc 1 747 20
 1905 003e 488B45E0 		movq	-32(%rbp), %rax
 1906 0042 488B4008 		movq	8(%rax), %rax
 1907 0046 48C1E004 		salq	$4, %rax
 1908 004a 4889C2   		movq	%rax, %rdx
 1909              		.loc 1 747 18
 1910 004d 488B45E0 		movq	-32(%rbp), %rax
 1911 0051 48895008 		movq	%rdx, 8(%rax)
 748:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number += (unsigned long)(unsigned int)SecHexValueOfChar(ch);
 1912              		.loc 1 748 50
 1913 0055 8B45EC   		movl	-20(%rbp), %eax
 1914 0058 89C7     		movl	%eax, %edi
 1915 005a E8000000 		call	SecHexValueOfChar
 1915      00
 1916              		.loc 1 748 21
 1917 005f 89C2     		movl	%eax, %edx
 1918              		.loc 1 748 18
 1919 0061 488B45E0 		movq	-32(%rbp), %rax
 1920 0065 488B4008 		movq	8(%rax), %rax
 1921 0069 4801C2   		addq	%rax, %rdx
 1922 006c 488B45E0 		movq	-32(%rbp), %rax
 1923 0070 48895008 		movq	%rdx, 8(%rax)
GAS LISTING /tmp/ccLrrfHE.s 			page 52


 749:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1924              		.loc 1 749 1
 1925 0074 90       		nop
 1926 0075 488B45F8 		movq	-8(%rbp), %rax
 1927 0079 64483304 		xorq	%fs:40, %rax
 1927      25280000 
 1927      00
 1928 0082 7405     		je	.L134
 1929 0084 E8000000 		call	__stack_chk_fail@PLT
 1929      00
 1930              	.L134:
 1931 0089 C9       		leave
 1932              	.LCFI56:
 1933              		.cfi_def_cfa 7, 8
 1934 008a C3       		ret
 1935              		.cfi_endproc
 1936              	.LFE24:
 1938              		.section	.text.SecDecodeNumberOctal,"ax",@progbits
 1940              	SecDecodeNumberOctal:
 1941              	.LFB25:
 750:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 751:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 752:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 753:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse Octal character to integer for 32bit .
 754:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 755:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumberOctal(SecInt ch, SecScanSpec *spec)
 756:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 1942              		.loc 1 756 1
 1943              		.cfi_startproc
 1944 0000 F30F1EFA 		endbr64
 1945 0004 55       		pushq	%rbp
 1946              	.LCFI57:
 1947              		.cfi_def_cfa_offset 16
 1948              		.cfi_offset 6, -16
 1949 0005 4889E5   		movq	%rsp, %rbp
 1950              	.LCFI58:
 1951              		.cfi_def_cfa_register 6
 1952 0008 4883EC20 		subq	$32, %rsp
 1953 000c 897DEC   		movl	%edi, -20(%rbp)
 1954 000f 488975E0 		movq	%rsi, -32(%rbp)
 1955              		.loc 1 756 1
 1956 0013 64488B04 		movq	%fs:40, %rax
 1956      25280000 
 1956      00
 1957 001c 488945F8 		movq	%rax, -8(%rbp)
 1958 0020 31C0     		xorl	%eax, %eax
 757:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 758:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SECUREC_LONG_OCTAL_BEYOND_MAX(spec->number)) {
 1959              		.loc 1 758 9
 1960 0022 488B45E0 		movq	-32(%rbp), %rax
 1961 0026 488B4008 		movq	8(%rax), %rax
 1962 002a 48C1E83D 		shrq	$61, %rax
 1963              		.loc 1 758 8
 1964 002e 4885C0   		testq	%rax, %rax
 1965 0031 740B     		je	.L136
 759:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
 1966              		.loc 1 759 25
GAS LISTING /tmp/ccLrrfHE.s 			page 53


 1967 0033 488B45E0 		movq	-32(%rbp), %rax
 1968 0037 C7401C01 		movl	$1, 28(%rax)
 1968      000000
 1969              	.L136:
 760:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 761:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 762:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number = SECUREC_MUL_EIGHT(spec->number);
 1970              		.loc 1 762 20
 1971 003e 488B45E0 		movq	-32(%rbp), %rax
 1972 0042 488B4008 		movq	8(%rax), %rax
 1973 0046 488D14C5 		leaq	0(,%rax,8), %rdx
 1973      00000000 
 1974              		.loc 1 762 18
 1975 004e 488B45E0 		movq	-32(%rbp), %rax
 1976 0052 48895008 		movq	%rdx, 8(%rax)
 763:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number += (unsigned long)((SecUnsignedInt)ch - SECUREC_CHAR('0'));
 1977              		.loc 1 763 18
 1978 0056 488B45E0 		movq	-32(%rbp), %rax
 1979 005a 488B4008 		movq	8(%rax), %rax
 1980              		.loc 1 763 37
 1981 005e 8B55EC   		movl	-20(%rbp), %edx
 1982              		.loc 1 763 56
 1983 0061 83EA30   		subl	$48, %edx
 1984              		.loc 1 763 21
 1985 0064 89D2     		movl	%edx, %edx
 1986              		.loc 1 763 18
 1987 0066 4801C2   		addq	%rax, %rdx
 1988 0069 488B45E0 		movq	-32(%rbp), %rax
 1989 006d 48895008 		movq	%rdx, 8(%rax)
 764:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 1990              		.loc 1 764 1
 1991 0071 90       		nop
 1992 0072 488B45F8 		movq	-8(%rbp), %rax
 1993 0076 64483304 		xorq	%fs:40, %rax
 1993      25280000 
 1993      00
 1994 007f 7405     		je	.L137
 1995 0081 E8000000 		call	__stack_chk_fail@PLT
 1995      00
 1996              	.L137:
 1997 0086 C9       		leave
 1998              	.LCFI59:
 1999              		.cfi_def_cfa 7, 8
 2000 0087 C3       		ret
 2001              		.cfi_endproc
 2002              	.LFE25:
 2004              		.section	.text.SecFinishNumberNegativeOther,"ax",@progbits
 2006              	SecFinishNumberNegativeOther:
 2007              	.LFB26:
 765:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 766:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 767:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 768:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Compatible with integer negative values other than int */
 769:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumberNegativeOther(int comChr, int numberWidth, SecScanSpec *spec)
 770:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2008              		.loc 1 770 1
 2009              		.cfi_startproc
GAS LISTING /tmp/ccLrrfHE.s 			page 54


 2010 0000 F30F1EFA 		endbr64
 2011 0004 55       		pushq	%rbp
 2012              	.LCFI60:
 2013              		.cfi_def_cfa_offset 16
 2014              		.cfi_offset 6, -16
 2015 0005 4889E5   		movq	%rsp, %rbp
 2016              	.LCFI61:
 2017              		.cfi_def_cfa_register 6
 2018 0008 4883EC20 		subq	$32, %rsp
 2019 000c 897DEC   		movl	%edi, -20(%rbp)
 2020 000f 8975E8   		movl	%esi, -24(%rbp)
 2021 0012 488955E0 		movq	%rdx, -32(%rbp)
 2022              		.loc 1 770 1
 2023 0016 64488B04 		movq	%fs:40, %rax
 2023      25280000 
 2023      00
 2024 001f 488945F8 		movq	%rax, -8(%rbp)
 2025 0023 31C0     		xorl	%eax, %eax
 771:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((comChr == SECUREC_CHAR('d')) || (comChr == SECUREC_CHAR('i'))) {
 2026              		.loc 1 771 8
 2027 0025 837DEC64 		cmpl	$100, -20(%rbp)
 2028 0029 7406     		je	.L139
 2029              		.loc 1 771 39 discriminator 1
 2030 002b 837DEC69 		cmpl	$105, -20(%rbp)
 2031 002f 757A     		jne	.L140
 2032              	.L139:
 772:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->number > (unsigned long)(1ULL << (SECUREC_LONG_BIT_NUM - 1))) {
 2033              		.loc 1 772 17
 2034 0031 488B45E0 		movq	-32(%rbp), %rax
 2035 0035 488B4008 		movq	8(%rax), %rax
 2036              		.loc 1 772 12
 2037 0039 48BA0000 		movabsq	$-9223372036854775808, %rdx
 2037      00000000 
 2037      0080
 2038 0043 4839D0   		cmpq	%rdx, %rax
 2039 0046 7614     		jbe	.L141
 773:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = (unsigned long)(1ULL << (SECUREC_LONG_BIT_NUM - 1));
 2040              		.loc 1 773 26
 2041 0048 488B45E0 		movq	-32(%rbp), %rax
 2042 004c 48B90000 		movabsq	$-9223372036854775808, %rcx
 2042      00000000 
 2042      0080
 2043 0056 48894808 		movq	%rcx, 8(%rax)
 2044 005a EB16     		jmp	.L142
 2045              	.L141:
 774:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 775:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = (unsigned long)(-(long)spec->number);
 2046              		.loc 1 775 55
 2047 005c 488B45E0 		movq	-32(%rbp), %rax
 2048 0060 488B4008 		movq	8(%rax), %rax
 2049              		.loc 1 775 44
 2050 0064 48F7D8   		negq	%rax
 2051              		.loc 1 775 28
 2052 0067 4889C2   		movq	%rax, %rdx
 2053              		.loc 1 775 26
 2054 006a 488B45E0 		movq	-32(%rbp), %rax
 2055 006e 48895008 		movq	%rdx, 8(%rax)
GAS LISTING /tmp/ccLrrfHE.s 			page 55


 2056              	.L142:
 776:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 777:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2057              		.loc 1 777 17
 2058 0072 488B45E0 		movq	-32(%rbp), %rax
 2059 0076 8B401C   		movl	28(%rax), %eax
 2060              		.loc 1 777 12
 2061 0079 85C0     		testl	%eax, %eax
 2062 007b 745D     		je	.L147
 778:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (numberWidth < SECUREC_NUM_WIDTH_INT) {
 2063              		.loc 1 778 16
 2064 007d 837DE800 		cmpl	$0, -24(%rbp)
 2065 0081 7F0E     		jg	.L144
 779:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = 0;
 2066              		.loc 1 779 30
 2067 0083 488B45E0 		movq	-32(%rbp), %rax
 2068 0087 48C74008 		movq	$0, 8(%rax)
 2068      00000000 
 777:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (numberWidth < SECUREC_NUM_WIDTH_INT) {
 2069              		.loc 1 777 12
 2070 008f EB49     		jmp	.L147
 2071              	.L144:
 780:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else if (numberWidth == SECUREC_NUM_WIDTH_LONG) {
 2072              		.loc 1 780 23
 2073 0091 837DE802 		cmpl	$2, -24(%rbp)
 2074 0095 7543     		jne	.L147
 781:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)));
 2075              		.loc 1 781 30
 2076 0097 488B45E0 		movq	-32(%rbp), %rax
 2077 009b 48BE0000 		movabsq	$-9223372036854775808, %rsi
 2077      00000000 
 2077      0080
 2078 00a5 48897008 		movq	%rsi, 8(%rax)
 777:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (numberWidth < SECUREC_NUM_WIDTH_INT) {
 2079              		.loc 1 777 12
 2080 00a9 EB2F     		jmp	.L147
 2081              	.L140:
 782:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 783:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 784:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else { /* o, u, x, X, p */
 785:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->number = (unsigned long)(-(long)spec->number);
 2082              		.loc 1 785 51
 2083 00ab 488B45E0 		movq	-32(%rbp), %rax
 2084 00af 488B4008 		movq	8(%rax), %rax
 2085              		.loc 1 785 40
 2086 00b3 48F7D8   		negq	%rax
 2087              		.loc 1 785 24
 2088 00b6 4889C2   		movq	%rax, %rdx
 2089              		.loc 1 785 22
 2090 00b9 488B45E0 		movq	-32(%rbp), %rax
 2091 00bd 48895008 		movq	%rdx, 8(%rax)
 786:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2092              		.loc 1 786 17
 2093 00c1 488B45E0 		movq	-32(%rbp), %rax
 2094 00c5 8B401C   		movl	28(%rax), %eax
 2095              		.loc 1 786 12
 2096 00c8 85C0     		testl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 56


 2097 00ca 740F     		je	.L148
 787:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2098              		.loc 1 787 26
 2099 00cc 488B45E0 		movq	-32(%rbp), %rax
 2100 00d0 48C74008 		movq	$-1, 8(%rax)
 2100      FFFFFFFF 
 788:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 789:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 790:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2101              		.loc 1 790 1
 2102 00d8 EB01     		jmp	.L148
 2103              	.L147:
 777:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (numberWidth < SECUREC_NUM_WIDTH_INT) {
 2104              		.loc 1 777 12
 2105 00da 90       		nop
 2106              	.L148:
 2107              		.loc 1 790 1
 2108 00db 90       		nop
 2109 00dc 488B45F8 		movq	-8(%rbp), %rax
 2110 00e0 64483304 		xorq	%fs:40, %rax
 2110      25280000 
 2110      00
 2111 00e9 7405     		je	.L146
 2112 00eb E8000000 		call	__stack_chk_fail@PLT
 2112      00
 2113              	.L146:
 2114 00f0 C9       		leave
 2115              	.LCFI62:
 2116              		.cfi_def_cfa 7, 8
 2117 00f1 C3       		ret
 2118              		.cfi_endproc
 2119              	.LFE26:
 2121              		.section	.text.SecFinishNumberNegativeInt,"ax",@progbits
 2123              	SecFinishNumberNegativeInt:
 2124              	.LFB27:
 791:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Compatible processing of integer negative numbers */
 792:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumberNegativeInt(int comChr, SecScanSpec *spec)
 793:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2125              		.loc 1 793 1
 2126              		.cfi_startproc
 2127 0000 F30F1EFA 		endbr64
 2128 0004 55       		pushq	%rbp
 2129              	.LCFI63:
 2130              		.cfi_def_cfa_offset 16
 2131              		.cfi_offset 6, -16
 2132 0005 4889E5   		movq	%rsp, %rbp
 2133              	.LCFI64:
 2134              		.cfi_def_cfa_register 6
 2135 0008 4883EC20 		subq	$32, %rsp
 2136 000c 897DEC   		movl	%edi, -20(%rbp)
 2137 000f 488975E0 		movq	%rsi, -32(%rbp)
 2138              		.loc 1 793 1
 2139 0013 64488B04 		movq	%fs:40, %rax
 2139      25280000 
 2139      00
 2140 001c 488945F8 		movq	%rax, -8(%rbp)
 2141 0020 31C0     		xorl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 57


 794:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((comChr == SECUREC_CHAR('d')) || (comChr == SECUREC_CHAR('i'))) {
 2142              		.loc 1 794 8
 2143 0022 837DEC64 		cmpl	$100, -20(%rbp)
 2144 0026 7406     		je	.L150
 2145              		.loc 1 794 39 discriminator 1
 2146 0028 837DEC69 		cmpl	$105, -20(%rbp)
 2147 002c 756E     		jne	.L151
 2148              	.L150:
 795:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 796:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLongBitEqual(SECUREC_LP64_BIT_WIDTH)) {
 2149              		.loc 1 796 13
 2150 002e BF400000 		movl	$64, %edi
 2150      00
 2151 0033 E8000000 		call	SecIsLongBitEqual
 2151      00
 2152              		.loc 1 796 12
 2153 0038 85C0     		testl	%eax, %eax
 2154 003a 7439     		je	.L152
 797:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if ((spec->number > SECUREC_MIN_64BITS_NEG_VALUE)) {
 2155              		.loc 1 797 22
 2156 003c 488B45E0 		movq	-32(%rbp), %rax
 2157 0040 488B4008 		movq	8(%rax), %rax
 2158              		.loc 1 797 16
 2159 0044 48BA0000 		movabsq	$-9223372036854775808, %rdx
 2159      00000000 
 2159      0080
 2160 004e 4839D0   		cmpq	%rdx, %rax
 2161 0051 760E     		jbe	.L153
 798:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = 0;
 2162              		.loc 1 798 30
 2163 0053 488B45E0 		movq	-32(%rbp), %rax
 2164 0057 48C74008 		movq	$0, 8(%rax)
 2164      00000000 
 2165 005f EB14     		jmp	.L152
 2166              	.L153:
 799:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
 800:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = (unsigned int)(-(int)spec->number);
 2167              		.loc 1 800 57
 2168 0061 488B45E0 		movq	-32(%rbp), %rax
 2169 0065 488B4008 		movq	8(%rax), %rax
 2170              		.loc 1 800 47
 2171 0069 F7D8     		negl	%eax
 2172              		.loc 1 800 32
 2173 006b 89C2     		movl	%eax, %edx
 2174              		.loc 1 800 30
 2175 006d 488B45E0 		movq	-32(%rbp), %rax
 2176 0071 48895008 		movq	%rdx, 8(%rax)
 2177              	.L152:
 801:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 802:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 803:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 804:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLongBitEqual(SECUREC_LP32_BIT_WIDTH)) {
 805:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if ((spec->number > SECUREC_MIN_32BITS_NEG_VALUE)) {
 806:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = SECUREC_MIN_32BITS_NEG_VALUE;
 807:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
 808:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = (unsigned int)(-(int)spec->number);
 809:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
GAS LISTING /tmp/ccLrrfHE.s 			page 58


 810:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 811:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 812:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2178              		.loc 1 812 17
 2179 0075 488B45E0 		movq	-32(%rbp), %rax
 2180 0079 8B401C   		movl	28(%rax), %eax
 2181              		.loc 1 812 12
 2182 007c 85C0     		testl	%eax, %eax
 2183 007e 746F     		je	.L159
 813:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 814:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (SecIsLongBitEqual(SECUREC_LP64_BIT_WIDTH)) {
 2184              		.loc 1 814 17
 2185 0080 BF400000 		movl	$64, %edi
 2185      00
 2186 0085 E8000000 		call	SecIsLongBitEqual
 2186      00
 2187              		.loc 1 814 16
 2188 008a 85C0     		testl	%eax, %eax
 2189 008c 7461     		je	.L159
 815:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = 0;
 2190              		.loc 1 815 30
 2191 008e 488B45E0 		movq	-32(%rbp), %rax
 2192 0092 48C74008 		movq	$0, 8(%rax)
 2192      00000000 
 812:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 2193              		.loc 1 812 12
 2194 009a EB53     		jmp	.L159
 2195              	.L151:
 816:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 817:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 818:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (SecIsLongBitEqual(SECUREC_LP32_BIT_WIDTH)) {
 819:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = SECUREC_MIN_32BITS_NEG_VALUE;
 820:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 821:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 822:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 823:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {            /* o, u, x, X ,p */
 824:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 825:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->number > SECUREC_MAX_32BITS_VALUE_INC) {
 2196              		.loc 1 825 17
 2197 009c 488B45E0 		movq	-32(%rbp), %rax
 2198 00a0 488B4008 		movq	8(%rax), %rax
 2199              		.loc 1 825 12
 2200 00a4 48BA0000 		movabsq	$4294967296, %rdx
 2200      00000100 
 2200      0000
 2201 00ae 4839D0   		cmpq	%rdx, %rax
 2202 00b1 760F     		jbe	.L156
 826:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = SECUREC_MAX_32BITS_VALUE;
 2203              		.loc 1 826 26
 2204 00b3 488B45E0 		movq	-32(%rbp), %rax
 2205 00b7 B9FFFFFF 		movl	$4294967295, %ecx
 2205      FF
 2206 00bc 48894808 		movq	%rcx, 8(%rax)
 2207 00c0 EB14     		jmp	.L157
 2208              	.L156:
 827:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 828:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = (unsigned int)(-(int)spec->number);
GAS LISTING /tmp/ccLrrfHE.s 			page 59


 2209              		.loc 1 828 53
 2210 00c2 488B45E0 		movq	-32(%rbp), %rax
 2211 00c6 488B4008 		movq	8(%rax), %rax
 2212              		.loc 1 828 43
 2213 00ca F7D8     		negl	%eax
 2214              		.loc 1 828 28
 2215 00cc 89C2     		movl	%eax, %edx
 2216              		.loc 1 828 26
 2217 00ce 488B45E0 		movq	-32(%rbp), %rax
 2218 00d2 48895008 		movq	%rdx, 8(%rax)
 2219              	.L157:
 829:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 830:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 831:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->number = (unsigned int)(-(int)spec->number);
 832:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 833:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2220              		.loc 1 833 17
 2221 00d6 488B45E0 		movq	-32(%rbp), %rax
 2222 00da 8B401C   		movl	28(%rax), %eax
 2223              		.loc 1 833 12
 2224 00dd 85C0     		testl	%eax, %eax
 2225 00df 740F     		je	.L160
 834:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2226              		.loc 1 834 26
 2227 00e1 488B45E0 		movq	-32(%rbp), %rax
 2228 00e5 48C74008 		movq	$-1, 8(%rax)
 2228      FFFFFFFF 
 835:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 836:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 837:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2229              		.loc 1 837 1
 2230 00ed EB01     		jmp	.L160
 2231              	.L159:
 812:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 2232              		.loc 1 812 12
 2233 00ef 90       		nop
 2234              	.L160:
 2235              		.loc 1 837 1
 2236 00f0 90       		nop
 2237 00f1 488B45F8 		movq	-8(%rbp), %rax
 2238 00f5 64483304 		xorq	%fs:40, %rax
 2238      25280000 
 2238      00
 2239 00fe 7405     		je	.L158
 2240 0100 E8000000 		call	__stack_chk_fail@PLT
 2240      00
 2241              	.L158:
 2242 0105 C9       		leave
 2243              	.LCFI65:
 2244              		.cfi_def_cfa 7, 8
 2245 0106 C3       		ret
 2246              		.cfi_endproc
 2247              	.LFE27:
 2249              		.section	.text.SecFinishNumberPositiveOther,"ax",@progbits
 2251              	SecFinishNumberPositiveOther:
 2252              	.LFB28:
 838:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
GAS LISTING /tmp/ccLrrfHE.s 			page 60


 839:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Compatible with integer positive values other than int */
 840:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumberPositiveOther(int comChr, int numberWidth, SecScanSpec *spec)
 841:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2253              		.loc 1 841 1
 2254              		.cfi_startproc
 2255 0000 F30F1EFA 		endbr64
 2256 0004 55       		pushq	%rbp
 2257              	.LCFI66:
 2258              		.cfi_def_cfa_offset 16
 2259              		.cfi_offset 6, -16
 2260 0005 4889E5   		movq	%rsp, %rbp
 2261              	.LCFI67:
 2262              		.cfi_def_cfa_register 6
 2263 0008 4883EC20 		subq	$32, %rsp
 2264 000c 897DEC   		movl	%edi, -20(%rbp)
 2265 000f 8975E8   		movl	%esi, -24(%rbp)
 2266 0012 488955E0 		movq	%rdx, -32(%rbp)
 2267              		.loc 1 841 1
 2268 0016 64488B04 		movq	%fs:40, %rax
 2268      25280000 
 2268      00
 2269 001f 488945F8 		movq	%rax, -8(%rbp)
 2270 0023 31C0     		xorl	%eax, %eax
 842:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (comChr == SECUREC_CHAR('d') || comChr == SECUREC_CHAR('i')) {
 2271              		.loc 1 842 8
 2272 0025 837DEC64 		cmpl	$100, -20(%rbp)
 2273 0029 7406     		je	.L162
 2274              		.loc 1 842 37 discriminator 1
 2275 002b 837DEC69 		cmpl	$105, -20(%rbp)
 2276 002f 7561     		jne	.L163
 2277              	.L162:
 843:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->number > ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)) - 1)) {
 2278              		.loc 1 843 17
 2279 0031 488B45E0 		movq	-32(%rbp), %rax
 2280 0035 488B4008 		movq	8(%rax), %rax
 2281              		.loc 1 843 12
 2282 0039 4885C0   		testq	%rax, %rax
 2283 003c 7912     		jns	.L164
 844:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)) - 1);
 2284              		.loc 1 844 26
 2285 003e 488B45E0 		movq	-32(%rbp), %rax
 2286 0042 48B9FFFF 		movabsq	$9223372036854775807, %rcx
 2286      FFFFFFFF 
 2286      FF7F
 2287 004c 48894808 		movq	%rcx, 8(%rax)
 2288              	.L164:
 845:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 846:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((spec->beyondMax != 0 && numberWidth < SECUREC_NUM_WIDTH_INT)) {
 2289              		.loc 1 846 18
 2290 0050 488B45E0 		movq	-32(%rbp), %rax
 2291 0054 8B401C   		movl	28(%rax), %eax
 2292              		.loc 1 846 12
 2293 0057 85C0     		testl	%eax, %eax
 2294 0059 7412     		je	.L165
 2295              		.loc 1 846 35 discriminator 1
 2296 005b 837DE800 		cmpl	$0, -24(%rbp)
 2297 005f 7F0C     		jg	.L165
GAS LISTING /tmp/ccLrrfHE.s 			page 61


 847:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2298              		.loc 1 847 26
 2299 0061 488B45E0 		movq	-32(%rbp), %rax
 2300 0065 48C74008 		movq	$-1, 8(%rax)
 2300      FFFFFFFF 
 2301              	.L165:
 848:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 849:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0 && numberWidth == SECUREC_NUM_WIDTH_LONG) {
 2302              		.loc 1 849 17
 2303 006d 488B45E0 		movq	-32(%rbp), %rax
 2304 0071 8B401C   		movl	28(%rax), %eax
 2305              		.loc 1 849 12
 2306 0074 85C0     		testl	%eax, %eax
 2307 0076 7433     		je	.L169
 2308              		.loc 1 849 34 discriminator 1
 2309 0078 837DE802 		cmpl	$2, -24(%rbp)
 2310 007c 752D     		jne	.L169
 850:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)) - 1);
 2311              		.loc 1 850 26
 2312 007e 488B45E0 		movq	-32(%rbp), %rax
 2313 0082 48BAFFFF 		movabsq	$9223372036854775807, %rdx
 2313      FFFFFFFF 
 2313      FF7F
 2314 008c 48895008 		movq	%rdx, 8(%rax)
 849:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)) - 1);
 2315              		.loc 1 849 12
 2316 0090 EB19     		jmp	.L169
 2317              	.L163:
 851:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 852:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 853:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2318              		.loc 1 853 17
 2319 0092 488B45E0 		movq	-32(%rbp), %rax
 2320 0096 8B401C   		movl	28(%rax), %eax
 2321              		.loc 1 853 12
 2322 0099 85C0     		testl	%eax, %eax
 2323 009b 740F     		je	.L170
 854:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2324              		.loc 1 854 26
 2325 009d 488B45E0 		movq	-32(%rbp), %rax
 2326 00a1 48C74008 		movq	$-1, 8(%rax)
 2326      FFFFFFFF 
 855:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 856:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 857:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2327              		.loc 1 857 1
 2328 00a9 EB01     		jmp	.L170
 2329              	.L169:
 849:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = ((unsigned long)(1UL << (SECUREC_LONG_BIT_NUM - 1)) - 1);
 2330              		.loc 1 849 12
 2331 00ab 90       		nop
 2332              	.L170:
 2333              		.loc 1 857 1
 2334 00ac 90       		nop
 2335 00ad 488B45F8 		movq	-8(%rbp), %rax
 2336 00b1 64483304 		xorq	%fs:40, %rax
 2336      25280000 
GAS LISTING /tmp/ccLrrfHE.s 			page 62


 2336      00
 2337 00ba 7405     		je	.L168
 2338 00bc E8000000 		call	__stack_chk_fail@PLT
 2338      00
 2339              	.L168:
 2340 00c1 C9       		leave
 2341              	.LCFI68:
 2342              		.cfi_def_cfa 7, 8
 2343 00c2 C3       		ret
 2344              		.cfi_endproc
 2345              	.LFE28:
 2347              		.section	.text.SecFinishNumberPositiveInt,"ax",@progbits
 2349              	SecFinishNumberPositiveInt:
 2350              	.LFB29:
 858:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 859:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Compatible processing of integer positive numbers */
 860:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumberPositiveInt(int comChr, SecScanSpec *spec)
 861:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2351              		.loc 1 861 1
 2352              		.cfi_startproc
 2353 0000 F30F1EFA 		endbr64
 2354 0004 55       		pushq	%rbp
 2355              	.LCFI69:
 2356              		.cfi_def_cfa_offset 16
 2357              		.cfi_offset 6, -16
 2358 0005 4889E5   		movq	%rsp, %rbp
 2359              	.LCFI70:
 2360              		.cfi_def_cfa_register 6
 2361 0008 4883EC20 		subq	$32, %rsp
 2362 000c 897DEC   		movl	%edi, -20(%rbp)
 2363 000f 488975E0 		movq	%rsi, -32(%rbp)
 2364              		.loc 1 861 1
 2365 0013 64488B04 		movq	%fs:40, %rax
 2365      25280000 
 2365      00
 2366 001c 488945F8 		movq	%rax, -8(%rbp)
 2367 0020 31C0     		xorl	%eax, %eax
 862:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((comChr == SECUREC_CHAR('d')) || (comChr == SECUREC_CHAR('i'))) {
 2368              		.loc 1 862 8
 2369 0022 837DEC64 		cmpl	$100, -20(%rbp)
 2370 0026 7406     		je	.L172
 2371              		.loc 1 862 39 discriminator 1
 2372 0028 837DEC69 		cmpl	$105, -20(%rbp)
 2373 002c 754E     		jne	.L173
 2374              	.L172:
 863:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
 864:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLongBitEqual(SECUREC_LP64_BIT_WIDTH)) {
 2375              		.loc 1 864 13
 2376 002e BF400000 		movl	$64, %edi
 2376      00
 2377 0033 E8000000 		call	SecIsLongBitEqual
 2377      00
 2378              		.loc 1 864 12
 2379 0038 85C0     		testl	%eax, %eax
 2380 003a 7419     		je	.L174
 865:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number > SECUREC_MAX_64BITS_POS_VALUE) {
 2381              		.loc 1 865 21
GAS LISTING /tmp/ccLrrfHE.s 			page 63


 2382 003c 488B45E0 		movq	-32(%rbp), %rax
 2383 0040 488B4008 		movq	8(%rax), %rax
 2384              		.loc 1 865 16
 2385 0044 4885C0   		testq	%rax, %rax
 2386 0047 790C     		jns	.L174
 866:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2387              		.loc 1 866 30
 2388 0049 488B45E0 		movq	-32(%rbp), %rax
 2389 004d 48C74008 		movq	$-1, 8(%rax)
 2389      FFFFFFFF 
 2390              	.L174:
 867:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 868:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 869:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0 && SecIsLongBitEqual(SECUREC_LP64_BIT_WIDTH)) {
 2391              		.loc 1 869 17
 2392 0055 488B45E0 		movq	-32(%rbp), %rax
 2393 0059 8B401C   		movl	28(%rax), %eax
 2394              		.loc 1 869 12
 2395 005c 85C0     		testl	%eax, %eax
 2396 005e 7436     		je	.L178
 2397              		.loc 1 869 37 discriminator 1
 2398 0060 BF400000 		movl	$64, %edi
 2398      00
 2399 0065 E8000000 		call	SecIsLongBitEqual
 2399      00
 2400              		.loc 1 869 34 discriminator 1
 2401 006a 85C0     		testl	%eax, %eax
 2402 006c 7428     		je	.L178
 870:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2403              		.loc 1 870 26
 2404 006e 488B45E0 		movq	-32(%rbp), %rax
 2405 0072 48C74008 		movq	$-1, 8(%rax)
 2405      FFFFFFFF 
 869:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2406              		.loc 1 869 12
 2407 007a EB1A     		jmp	.L178
 2408              	.L173:
 871:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 872:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
 873:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLongBitEqual(SECUREC_LP32_BIT_WIDTH)) {
 874:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number > SECUREC_MAX_32BITS_POS_VALUE) {
 875:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number = SECUREC_MAX_32BITS_POS_VALUE;
 876:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 877:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 878:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0 && SecIsLongBitEqual(SECUREC_LP32_BIT_WIDTH)) {
 879:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = SECUREC_MAX_32BITS_POS_VALUE;
 880:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 881:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 882:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {            /* o,u,x,X,p */
 883:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->beyondMax != 0) {
 2409              		.loc 1 883 17
 2410 007c 488B45E0 		movq	-32(%rbp), %rax
 2411 0080 8B401C   		movl	28(%rax), %eax
 2412              		.loc 1 883 12
 2413 0083 85C0     		testl	%eax, %eax
 2414 0085 7410     		je	.L179
 884:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = SECUREC_MAX_32BITS_VALUE;
GAS LISTING /tmp/ccLrrfHE.s 			page 64


 2415              		.loc 1 884 26
 2416 0087 488B45E0 		movq	-32(%rbp), %rax
 2417 008b BAFFFFFF 		movl	$4294967295, %edx
 2417      FF
 2418 0090 48895008 		movq	%rdx, 8(%rax)
 885:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 886:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 887:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2419              		.loc 1 887 1
 2420 0094 EB01     		jmp	.L179
 2421              	.L178:
 869:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number |= (unsigned long)SECUREC_MAX_64BITS_VALUE;
 2422              		.loc 1 869 12
 2423 0096 90       		nop
 2424              	.L179:
 2425              		.loc 1 887 1
 2426 0097 90       		nop
 2427 0098 488B45F8 		movq	-8(%rbp), %rax
 2428 009c 64483304 		xorq	%fs:40, %rax
 2428      25280000 
 2428      00
 2429 00a5 7405     		je	.L177
 2430 00a7 E8000000 		call	__stack_chk_fail@PLT
 2430      00
 2431              	.L177:
 2432 00ac C9       		leave
 2433              	.LCFI71:
 2434              		.cfi_def_cfa 7, 8
 2435 00ad C3       		ret
 2436              		.cfi_endproc
 2437              	.LFE29:
 2439              		.section	.text.SecDecodeNumber64Decimal,"ax",@progbits
 2441              	SecDecodeNumber64Decimal:
 2442              	.LFB30:
 888:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 889:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 890:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 891:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 892:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 893:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse decimal character to integer for 64bit .
 894:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 895:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumber64Decimal(SecInt ch, SecScanSpec *spec)
 896:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2443              		.loc 1 896 1
 2444              		.cfi_startproc
 2445 0000 F30F1EFA 		endbr64
 2446 0004 55       		pushq	%rbp
 2447              	.LCFI72:
 2448              		.cfi_def_cfa_offset 16
 2449              		.cfi_offset 6, -16
 2450 0005 4889E5   		movq	%rsp, %rbp
 2451              	.LCFI73:
 2452              		.cfi_def_cfa_register 6
 2453 0008 4883EC20 		subq	$32, %rsp
 2454 000c 897DEC   		movl	%edi, -20(%rbp)
 2455 000f 488975E0 		movq	%rsi, -32(%rbp)
 2456              		.loc 1 896 1
GAS LISTING /tmp/ccLrrfHE.s 			page 65


 2457 0013 64488B04 		movq	%fs:40, %rax
 2457      25280000 
 2457      00
 2458 001c 488945F8 		movq	%rax, -8(%rbp)
 2459 0020 31C0     		xorl	%eax, %eax
 897:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 898:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->number64 > SECUREC_MAX_64BITS_VALUE_DIV_TEN) {
 2460              		.loc 1 898 13
 2461 0022 488B45E0 		movq	-32(%rbp), %rax
 2462 0026 488B00   		movq	(%rax), %rax
 2463              		.loc 1 898 8
 2464 0029 48BA9999 		movabsq	$1844674407370955161, %rdx
 2464      99999999 
 2464      9919
 2465 0033 4839D0   		cmpq	%rdx, %rax
 2466 0036 760B     		jbe	.L181
 899:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
 2467              		.loc 1 899 25
 2468 0038 488B45E0 		movq	-32(%rbp), %rax
 2469 003c C7401C01 		movl	$1, 28(%rax)
 2469      000000
 2470              	.L181:
 900:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 901:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 902:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 = SECUREC_MUL_TEN(spec->number64);
 2471              		.loc 1 902 22
 2472 0043 488B45E0 		movq	-32(%rbp), %rax
 2473 0047 488B00   		movq	(%rax), %rax
 2474 004a 488D1485 		leaq	0(,%rax,4), %rdx
 2474      00000000 
 2475 0052 488B45E0 		movq	-32(%rbp), %rax
 2476 0056 488B00   		movq	(%rax), %rax
 2477 0059 4801D0   		addq	%rdx, %rax
 2478 005c 488D1400 		leaq	(%rax,%rax), %rdx
 2479              		.loc 1 902 20
 2480 0060 488B45E0 		movq	-32(%rbp), %rax
 2481 0064 488910   		movq	%rdx, (%rax)
 903:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 904:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->number64 == SECUREC_MAX_64BITS_VALUE_CUT_LAST_DIGIT) {
 2482              		.loc 1 904 13
 2483 0067 488B45E0 		movq	-32(%rbp), %rax
 2484 006b 488B00   		movq	(%rax), %rax
 2485              		.loc 1 904 8
 2486 006e 4883F8FA 		cmpq	$-6, %rax
 2487 0072 7527     		jne	.L182
 2488              	.LBB9:
 905:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUnsignedInt64 number64As = (SecUnsignedInt64)SECUREC_MAX_64BITS_VALUE - spec->number64;
 2489              		.loc 1 905 88
 2490 0074 488B45E0 		movq	-32(%rbp), %rax
 2491 0078 488B00   		movq	(%rax), %rax
 2492              		.loc 1 905 26
 2493 007b 48F7D0   		notq	%rax
 2494 007e 488945F0 		movq	%rax, -16(%rbp)
 906:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (number64As < (SecUnsignedInt64)((SecUnsignedInt)ch - SECUREC_CHAR('0'))) {
 2495              		.loc 1 906 45
 2496 0082 8B45EC   		movl	-20(%rbp), %eax
 2497              		.loc 1 906 64
GAS LISTING /tmp/ccLrrfHE.s 			page 66


 2498 0085 83E830   		subl	$48, %eax
 2499              		.loc 1 906 26
 2500 0088 89C0     		movl	%eax, %eax
 2501              		.loc 1 906 12
 2502 008a 483945F0 		cmpq	%rax, -16(%rbp)
 2503 008e 730B     		jnb	.L182
 907:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->beyondMax = 1;
 2504              		.loc 1 907 29
 2505 0090 488B45E0 		movq	-32(%rbp), %rax
 2506 0094 C7401C01 		movl	$1, 28(%rax)
 2506      000000
 2507              	.L182:
 2508              	.LBE9:
 908:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 909:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 910:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 911:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 += (SecUnsignedInt64)((SecUnsignedInt)ch - SECUREC_CHAR('0'));
 2509              		.loc 1 911 20
 2510 009b 488B45E0 		movq	-32(%rbp), %rax
 2511 009f 488B00   		movq	(%rax), %rax
 2512              		.loc 1 911 42
 2513 00a2 8B55EC   		movl	-20(%rbp), %edx
 2514              		.loc 1 911 61
 2515 00a5 83EA30   		subl	$48, %edx
 2516              		.loc 1 911 23
 2517 00a8 89D2     		movl	%edx, %edx
 2518              		.loc 1 911 20
 2519 00aa 4801C2   		addq	%rax, %rdx
 2520 00ad 488B45E0 		movq	-32(%rbp), %rax
 2521 00b1 488910   		movq	%rdx, (%rax)
 912:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2522              		.loc 1 912 1
 2523 00b4 90       		nop
 2524 00b5 488B45F8 		movq	-8(%rbp), %rax
 2525 00b9 64483304 		xorq	%fs:40, %rax
 2525      25280000 
 2525      00
 2526 00c2 7405     		je	.L183
 2527 00c4 E8000000 		call	__stack_chk_fail@PLT
 2527      00
 2528              	.L183:
 2529 00c9 C9       		leave
 2530              	.LCFI74:
 2531              		.cfi_def_cfa 7, 8
 2532 00ca C3       		ret
 2533              		.cfi_endproc
 2534              	.LFE30:
 2536              		.section	.text.SecDecodeNumber64Hex,"ax",@progbits
 2538              	SecDecodeNumber64Hex:
 2539              	.LFB31:
 913:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 914:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 915:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse Hex character to integer for 64bit .
 916:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 917:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumber64Hex(SecInt ch, SecScanSpec *spec)
 918:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2540              		.loc 1 918 1
GAS LISTING /tmp/ccLrrfHE.s 			page 67


 2541              		.cfi_startproc
 2542 0000 F30F1EFA 		endbr64
 2543 0004 55       		pushq	%rbp
 2544              	.LCFI75:
 2545              		.cfi_def_cfa_offset 16
 2546              		.cfi_offset 6, -16
 2547 0005 4889E5   		movq	%rsp, %rbp
 2548              	.LCFI76:
 2549              		.cfi_def_cfa_register 6
 2550 0008 4883EC20 		subq	$32, %rsp
 2551 000c 897DEC   		movl	%edi, -20(%rbp)
 2552 000f 488975E0 		movq	%rsi, -32(%rbp)
 2553              		.loc 1 918 1
 2554 0013 64488B04 		movq	%fs:40, %rax
 2554      25280000 
 2554      00
 2555 001c 488945F8 		movq	%rax, -8(%rbp)
 2556 0020 31C0     		xorl	%eax, %eax
 919:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 920:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SECUREC_QWORD_HEX_BEYOND_MAX(spec->number64)) {
 2557              		.loc 1 920 9
 2558 0022 488B45E0 		movq	-32(%rbp), %rax
 2559 0026 488B00   		movq	(%rax), %rax
 2560 0029 48C1E83C 		shrq	$60, %rax
 2561              		.loc 1 920 8
 2562 002d 4885C0   		testq	%rax, %rax
 2563 0030 740B     		je	.L185
 921:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
 2564              		.loc 1 921 25
 2565 0032 488B45E0 		movq	-32(%rbp), %rax
 2566 0036 C7401C01 		movl	$1, 28(%rax)
 2566      000000
 2567              	.L185:
 922:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 923:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 924:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 = SECUREC_MUL_SIXTEEN(spec->number64);
 2568              		.loc 1 924 22
 2569 003d 488B45E0 		movq	-32(%rbp), %rax
 2570 0041 488B00   		movq	(%rax), %rax
 2571 0044 48C1E004 		salq	$4, %rax
 2572 0048 4889C2   		movq	%rax, %rdx
 2573              		.loc 1 924 20
 2574 004b 488B45E0 		movq	-32(%rbp), %rax
 2575 004f 488910   		movq	%rdx, (%rax)
 925:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 += (SecUnsignedInt64)(unsigned int)SecHexValueOfChar(ch);
 2576              		.loc 1 925 55
 2577 0052 8B45EC   		movl	-20(%rbp), %eax
 2578 0055 89C7     		movl	%eax, %edi
 2579 0057 E8000000 		call	SecHexValueOfChar
 2579      00
 2580              		.loc 1 925 23
 2581 005c 89C2     		movl	%eax, %edx
 2582              		.loc 1 925 20
 2583 005e 488B45E0 		movq	-32(%rbp), %rax
 2584 0062 488B00   		movq	(%rax), %rax
 2585 0065 4801C2   		addq	%rax, %rdx
 2586 0068 488B45E0 		movq	-32(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 68


 2587 006c 488910   		movq	%rdx, (%rax)
 926:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 927:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2588              		.loc 1 927 1
 2589 006f 90       		nop
 2590 0070 488B45F8 		movq	-8(%rbp), %rax
 2591 0074 64483304 		xorq	%fs:40, %rax
 2591      25280000 
 2591      00
 2592 007d 7405     		je	.L186
 2593 007f E8000000 		call	__stack_chk_fail@PLT
 2593      00
 2594              	.L186:
 2595 0084 C9       		leave
 2596              	.LCFI77:
 2597              		.cfi_def_cfa 7, 8
 2598 0085 C3       		ret
 2599              		.cfi_endproc
 2600              	.LFE31:
 2602              		.section	.text.SecDecodeNumber64Octal,"ax",@progbits
 2604              	SecDecodeNumber64Octal:
 2605              	.LFB32:
 928:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 929:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 930:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse Octal character to integer for 64bit .
 931:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 932:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecDecodeNumber64Octal(SecInt ch, SecScanSpec *spec)
 933:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2606              		.loc 1 933 1
 2607              		.cfi_startproc
 2608 0000 F30F1EFA 		endbr64
 2609 0004 55       		pushq	%rbp
 2610              	.LCFI78:
 2611              		.cfi_def_cfa_offset 16
 2612              		.cfi_offset 6, -16
 2613 0005 4889E5   		movq	%rsp, %rbp
 2614              	.LCFI79:
 2615              		.cfi_def_cfa_register 6
 2616 0008 4883EC20 		subq	$32, %rsp
 2617 000c 897DEC   		movl	%edi, -20(%rbp)
 2618 000f 488975E0 		movq	%rsi, -32(%rbp)
 2619              		.loc 1 933 1
 2620 0013 64488B04 		movq	%fs:40, %rax
 2620      25280000 
 2620      00
 2621 001c 488945F8 		movq	%rax, -8(%rbp)
 2622 0020 31C0     		xorl	%eax, %eax
 934:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 935:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SECUREC_QWORD_OCTAL_BEYOND_MAX(spec->number64)) {
 2623              		.loc 1 935 9
 2624 0022 488B45E0 		movq	-32(%rbp), %rax
 2625 0026 488B00   		movq	(%rax), %rax
 2626 0029 48C1E83D 		shrq	$61, %rax
 2627              		.loc 1 935 8
 2628 002d 4885C0   		testq	%rax, %rax
 2629 0030 740B     		je	.L188
 936:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->beyondMax = 1;
GAS LISTING /tmp/ccLrrfHE.s 			page 69


 2630              		.loc 1 936 25
 2631 0032 488B45E0 		movq	-32(%rbp), %rax
 2632 0036 C7401C01 		movl	$1, 28(%rax)
 2632      000000
 2633              	.L188:
 937:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 938:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 939:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 = SECUREC_MUL_EIGHT(spec->number64);
 2634              		.loc 1 939 22
 2635 003d 488B45E0 		movq	-32(%rbp), %rax
 2636 0041 488B00   		movq	(%rax), %rax
 2637 0044 488D14C5 		leaq	0(,%rax,8), %rdx
 2637      00000000 
 2638              		.loc 1 939 20
 2639 004c 488B45E0 		movq	-32(%rbp), %rax
 2640 0050 488910   		movq	%rdx, (%rax)
 940:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->number64 += (SecUnsignedInt64)((SecUnsignedInt)ch - SECUREC_CHAR('0'));
 2641              		.loc 1 940 20
 2642 0053 488B45E0 		movq	-32(%rbp), %rax
 2643 0057 488B00   		movq	(%rax), %rax
 2644              		.loc 1 940 42
 2645 005a 8B55EC   		movl	-20(%rbp), %edx
 2646              		.loc 1 940 61
 2647 005d 83EA30   		subl	$48, %edx
 2648              		.loc 1 940 23
 2649 0060 89D2     		movl	%edx, %edx
 2650              		.loc 1 940 20
 2651 0062 4801C2   		addq	%rax, %rdx
 2652 0065 488B45E0 		movq	-32(%rbp), %rax
 2653 0069 488910   		movq	%rdx, (%rax)
 941:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2654              		.loc 1 941 1
 2655 006c 90       		nop
 2656 006d 488B45F8 		movq	-8(%rbp), %rax
 2657 0071 64483304 		xorq	%fs:40, %rax
 2657      25280000 
 2657      00
 2658 007a 7405     		je	.L189
 2659 007c E8000000 		call	__stack_chk_fail@PLT
 2659      00
 2660              	.L189:
 2661 0081 C9       		leave
 2662              	.LCFI80:
 2663              		.cfi_def_cfa 7, 8
 2664 0082 C3       		ret
 2665              		.cfi_endproc
 2666              	.LFE32:
 2668              		.section	.data.rel.local.g_secDecodeNumberHex,"aw"
 2669              		.align 16
 2672              	g_secDecodeNumberHex:
 2673 0000 00000000 		.quad	SecDecodeNumberHex
 2673      00000000 
 2674 0008 00000000 		.quad	SecDecodeNumber64Hex
 2674      00000000 
 2675              		.section	.data.rel.local.g_secDecodeNumberOctal,"aw"
 2676              		.align 16
 2679              	g_secDecodeNumberOctal:
GAS LISTING /tmp/ccLrrfHE.s 			page 70


 2680 0000 00000000 		.quad	SecDecodeNumberOctal
 2680      00000000 
 2681 0008 00000000 		.quad	SecDecodeNumber64Octal
 2681      00000000 
 2682              		.section	.data.rel.local.g_secDecodeNumberDecimal,"aw"
 2683              		.align 16
 2686              	g_secDecodeNumberDecimal:
 2687 0000 00000000 		.quad	SecDecodeNumberDecimal
 2687      00000000 
 2688 0008 00000000 		.quad	SecDecodeNumber64Decimal
 2688      00000000 
 2689              		.section	.text.SecDecodeNumber,"ax",@progbits
 2691              	SecDecodeNumber:
 2692              	.LFB33:
 942:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 943:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECUREC_DECODE_NUMBER_FUNC_NUM 2
 944:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* Function name cannot add address symbol, causing 546 alarm */
 945:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void (*g_secDecodeNumberHex[SECUREC_DECODE_NUMBER_FUNC_NUM])(SecInt ch, SecScanSpec *spec) =
 946:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     { SecDecodeNumberHex, SecDecodeNumber64Hex };
 947:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void (*g_secDecodeNumberOctal[SECUREC_DECODE_NUMBER_FUNC_NUM])(SecInt ch, SecScanSpec *spec)
 948:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     { SecDecodeNumberOctal, SecDecodeNumber64Octal };
 949:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void (*g_secDecodeNumberDecimal[SECUREC_DECODE_NUMBER_FUNC_NUM])(SecInt ch, SecScanSpec *spe
 950:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     { SecDecodeNumberDecimal, SecDecodeNumber64Decimal };
 951:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 952:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 953:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Parse 64-bit integer formatted input, return 0 when ch is a number.
 954:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 955:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecDecodeNumber(SecInt ch, SecScanSpec *spec)
 956:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2693              		.loc 1 956 1
 2694              		.cfi_startproc
 2695 0000 F30F1EFA 		endbr64
 2696 0004 55       		pushq	%rbp
 2697              	.LCFI81:
 2698              		.cfi_def_cfa_offset 16
 2699              		.cfi_offset 6, -16
 2700 0005 4889E5   		movq	%rsp, %rbp
 2701              	.LCFI82:
 2702              		.cfi_def_cfa_register 6
 2703 0008 4883EC20 		subq	$32, %rsp
 2704 000c 897DEC   		movl	%edi, -20(%rbp)
 2705 000f 488975E0 		movq	%rsi, -32(%rbp)
 2706              		.loc 1 956 1
 2707 0013 64488B04 		movq	%fs:40, %rax
 2707      25280000 
 2707      00
 2708 001c 488945F8 		movq	%rax, -8(%rbp)
 2709 0020 31C0     		xorl	%eax, %eax
 957:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->comChr == SECUREC_CHAR('x') || spec->comChr == SECUREC_CHAR('p')) {
 2710              		.loc 1 957 13
 2711 0022 488B45E0 		movq	-32(%rbp), %rax
 2712 0026 8B4038   		movl	56(%rax), %eax
 2713              		.loc 1 957 8
 2714 0029 83F878   		cmpl	$120, %eax
 2715 002c 740C     		je	.L191
 2716              		.loc 1 957 50 discriminator 1
 2717 002e 488B45E0 		movq	-32(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 71


 2718 0032 8B4038   		movl	56(%rax), %eax
 2719              		.loc 1 957 43 discriminator 1
 2720 0035 83F870   		cmpl	$112, %eax
 2721 0038 7561     		jne	.L192
 2722              	.L191:
 958:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SECUREC_IS_XDIGIT(ch)) {
 2723              		.loc 1 958 13
 2724 003a E8000000 		call	__ctype_b_loc@PLT
 2724      00
 2725 003f 488B00   		movq	(%rax), %rax
 2726 0042 8B55EC   		movl	-20(%rbp), %edx
 2727 0045 0FB6D2   		movzbl	%dl, %edx
 2728 0048 4801D2   		addq	%rdx, %rdx
 2729 004b 4801D0   		addq	%rdx, %rax
 2730 004e 0FB700   		movzwl	(%rax), %eax
 2731 0051 0FB7C0   		movzwl	%ax, %eax
 2732 0054 25001000 		andl	$4096, %eax
 2732      00
 2733              		.loc 1 958 12
 2734 0059 85C0     		testl	%eax, %eax
 2735 005b 7434     		je	.L193
 959:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             (*g_secDecodeNumberHex[spec->isInt64Arg])(ch, spec);
 2736              		.loc 1 959 40
 2737 005d 488B45E0 		movq	-32(%rbp), %rax
 2738 0061 8B4014   		movl	20(%rax), %eax
 2739              		.loc 1 959 14
 2740 0064 4898     		cltq
 2741 0066 488D14C5 		leaq	0(,%rax,8), %rdx
 2741      00000000 
 2742 006e 488D0500 		leaq	g_secDecodeNumberHex(%rip), %rax
 2742      000000
 2743 0075 488B0C02 		movq	(%rdx,%rax), %rcx
 2744 0079 488B55E0 		movq	-32(%rbp), %rdx
 2745 007d 8B45EC   		movl	-20(%rbp), %eax
 2746 0080 4889D6   		movq	%rdx, %rsi
 2747 0083 89C7     		movl	%eax, %edi
 2748 0085 FFD1     		call	*%rcx
 2749              	.LVL0:
 960:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 961:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 962:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 963:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return 0;
 2750              		.loc 1 963 16
 2751 0087 B8000000 		movl	$0, %eax
 2751      00
 2752 008c E9A80000 		jmp	.L195
 2752      00
 2753              	.L193:
 961:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 2754              		.loc 1 961 20
 2755 0091 B8FFFFFF 		movl	$-1, %eax
 2755      FF
 2756 0096 E99E0000 		jmp	.L195
 2756      00
 2757              	.L192:
 964:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 965:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (!(SECUREC_IS_DIGIT(ch))) {
GAS LISTING /tmp/ccLrrfHE.s 			page 72


 2758              		.loc 1 965 11
 2759 009b E8000000 		call	__ctype_b_loc@PLT
 2759      00
 2760 00a0 488B00   		movq	(%rax), %rax
 2761 00a3 8B55EC   		movl	-20(%rbp), %edx
 2762 00a6 0FB6D2   		movzbl	%dl, %edx
 2763 00a9 4801D2   		addq	%rdx, %rdx
 2764 00ac 4801D0   		addq	%rdx, %rax
 2765 00af 0FB700   		movzwl	(%rax), %eax
 2766 00b2 0FB7C0   		movzwl	%ax, %eax
 2767 00b5 25000800 		andl	$2048, %eax
 2767      00
 2768              		.loc 1 965 8
 2769 00ba 85C0     		testl	%eax, %eax
 2770 00bc 7507     		jne	.L196
 966:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 2771              		.loc 1 966 16
 2772 00be B8FFFFFF 		movl	$-1, %eax
 2772      FF
 2773 00c3 EB74     		jmp	.L195
 2774              	.L196:
 967:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 968:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->comChr == SECUREC_CHAR('o')) {
 2775              		.loc 1 968 13
 2776 00c5 488B45E0 		movq	-32(%rbp), %rax
 2777 00c9 8B4038   		movl	56(%rax), %eax
 2778              		.loc 1 968 8
 2779 00cc 83F86F   		cmpl	$111, %eax
 2780 00cf 7539     		jne	.L197
 969:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (ch < SECUREC_CHAR('8')) {
 2781              		.loc 1 969 12
 2782 00d1 837DEC37 		cmpl	$55, -20(%rbp)
 2783 00d5 7F2C     		jg	.L198
 970:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             (*g_secDecodeNumberOctal[spec->isInt64Arg])(ch, spec);
 2784              		.loc 1 970 42
 2785 00d7 488B45E0 		movq	-32(%rbp), %rax
 2786 00db 8B4014   		movl	20(%rax), %eax
 2787              		.loc 1 970 14
 2788 00de 4898     		cltq
 2789 00e0 488D14C5 		leaq	0(,%rax,8), %rdx
 2789      00000000 
 2790 00e8 488D0500 		leaq	g_secDecodeNumberOctal(%rip), %rax
 2790      000000
 2791 00ef 488B0C02 		movq	(%rdx,%rax), %rcx
 2792 00f3 488B55E0 		movq	-32(%rbp), %rdx
 2793 00f7 8B45EC   		movl	-20(%rbp), %eax
 2794 00fa 4889D6   		movq	%rdx, %rsi
 2795 00fd 89C7     		movl	%eax, %edi
 2796 00ff FFD1     		call	*%rcx
 2797              	.LVL1:
 2798 0101 EB31     		jmp	.L199
 2799              	.L198:
 971:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 972:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 2800              		.loc 1 972 20
 2801 0103 B8FFFFFF 		movl	$-1, %eax
 2801      FF
GAS LISTING /tmp/ccLrrfHE.s 			page 73


 2802 0108 EB2F     		jmp	.L195
 2803              	.L197:
 973:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 974:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else { /* comChr is 'd' */
 975:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (*g_secDecodeNumberDecimal[spec->isInt64Arg])(ch, spec);
 2804              		.loc 1 975 40
 2805 010a 488B45E0 		movq	-32(%rbp), %rax
 2806 010e 8B4014   		movl	20(%rax), %eax
 2807              		.loc 1 975 10
 2808 0111 4898     		cltq
 2809 0113 488D14C5 		leaq	0(,%rax,8), %rdx
 2809      00000000 
 2810 011b 488D0500 		leaq	g_secDecodeNumberDecimal(%rip), %rax
 2810      000000
 2811 0122 488B0C02 		movq	(%rdx,%rax), %rcx
 2812 0126 488B55E0 		movq	-32(%rbp), %rdx
 2813 012a 8B45EC   		movl	-20(%rbp), %eax
 2814 012d 4889D6   		movq	%rdx, %rsi
 2815 0130 89C7     		movl	%eax, %edi
 2816 0132 FFD1     		call	*%rcx
 2817              	.LVL2:
 2818              	.L199:
 976:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
 977:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 2819              		.loc 1 977 12
 2820 0134 B8000000 		movl	$0, %eax
 2820      00
 2821              	.L195:
 978:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2822              		.loc 1 978 1
 2823 0139 488B75F8 		movq	-8(%rbp), %rsi
 2824 013d 64483334 		xorq	%fs:40, %rsi
 2824      25280000 
 2824      00
 2825 0146 7405     		je	.L200
 2826 0148 E8000000 		call	__stack_chk_fail@PLT
 2826      00
 2827              	.L200:
 2828 014d C9       		leave
 2829              	.LCFI83:
 2830              		.cfi_def_cfa 7, 8
 2831 014e C3       		ret
 2832              		.cfi_endproc
 2833              	.LFE33:
 2835              		.section	.text.SecFinishNumber,"ax",@progbits
 2837              	SecFinishNumber:
 2838              	.LFB34:
 979:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 980:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
 981:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
 982:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Complete the final 32-bit integer formatted input
 983:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
 984:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumber(SecScanSpec *spec)
 985:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2839              		.loc 1 985 1
 2840              		.cfi_startproc
 2841 0000 F30F1EFA 		endbr64
GAS LISTING /tmp/ccLrrfHE.s 			page 74


 2842 0004 55       		pushq	%rbp
 2843              	.LCFI84:
 2844              		.cfi_def_cfa_offset 16
 2845              		.cfi_offset 6, -16
 2846 0005 4889E5   		movq	%rsp, %rbp
 2847              	.LCFI85:
 2848              		.cfi_def_cfa_register 6
 2849 0008 4883EC20 		subq	$32, %rsp
 2850 000c 48897DE8 		movq	%rdi, -24(%rbp)
 2851              		.loc 1 985 1
 2852 0010 64488B04 		movq	%fs:40, %rax
 2852      25280000 
 2852      00
 2853 0019 488945F8 		movq	%rax, -8(%rbp)
 2854 001d 31C0     		xorl	%eax, %eax
 986:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
 987:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->negative != 0) {
 2855              		.loc 1 987 13
 2856 001f 488B45E8 		movq	-24(%rbp), %rax
 2857 0023 8B4018   		movl	24(%rax), %eax
 2858              		.loc 1 987 8
 2859 0026 85C0     		testl	%eax, %eax
 2860 0028 7440     		je	.L202
 988:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->numberWidth == SECUREC_NUM_WIDTH_INT) {
 2861              		.loc 1 988 17
 2862 002a 488B45E8 		movq	-24(%rbp), %rax
 2863 002e 8B4010   		movl	16(%rax), %eax
 2864              		.loc 1 988 12
 2865 0031 83F801   		cmpl	$1, %eax
 2866 0034 7517     		jne	.L203
 989:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberNegativeInt(spec->oriComChr, spec);
 2867              		.loc 1 989 13
 2868 0036 488B45E8 		movq	-24(%rbp), %rax
 2869 003a 8B403C   		movl	60(%rax), %eax
 2870 003d 488B55E8 		movq	-24(%rbp), %rdx
 2871 0041 4889D6   		movq	%rdx, %rsi
 2872 0044 89C7     		movl	%eax, %edi
 2873 0046 E8000000 		call	SecFinishNumberNegativeInt
 2873      00
 990:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 991:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberNegativeOther(spec->oriComChr, spec->numberWidth, spec);
 992:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 993:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
 994:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->numberWidth == SECUREC_NUM_WIDTH_INT) {
 995:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberPositiveInt(spec->oriComChr, spec);
 996:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 997:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberPositiveOther(spec->oriComChr, spec->numberWidth, spec);
 998:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 999:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1000:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1001:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->negative != 0) {
1002:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(__hpux)
1003:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->oriComChr != SECUREC_CHAR('p')) {
1004:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number = (unsigned long)(-(long)spec->number);
1005:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1006:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1007:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->number = (unsigned long)(-(long)spec->number);
GAS LISTING /tmp/ccLrrfHE.s 			page 75


1008:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1009:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1010:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1011:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 2874              		.loc 1 1011 5
 2875 004b EB5C     		jmp	.L201
 2876              	.L203:
 991:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 2877              		.loc 1 991 13
 2878 004d 488B45E8 		movq	-24(%rbp), %rax
 2879 0051 8B4810   		movl	16(%rax), %ecx
 2880 0054 488B45E8 		movq	-24(%rbp), %rax
 2881 0058 8B403C   		movl	60(%rax), %eax
 2882 005b 488B55E8 		movq	-24(%rbp), %rdx
 2883 005f 89CE     		movl	%ecx, %esi
 2884 0061 89C7     		movl	%eax, %edi
 2885 0063 E8000000 		call	SecFinishNumberNegativeOther
 2885      00
 2886              		.loc 1 1011 5
 2887 0068 EB3F     		jmp	.L201
 2888              	.L202:
 994:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberPositiveInt(spec->oriComChr, spec);
 2889              		.loc 1 994 17
 2890 006a 488B45E8 		movq	-24(%rbp), %rax
 2891 006e 8B4010   		movl	16(%rax), %eax
 994:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecFinishNumberPositiveInt(spec->oriComChr, spec);
 2892              		.loc 1 994 12
 2893 0071 83F801   		cmpl	$1, %eax
 2894 0074 7517     		jne	.L205
 995:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
 2895              		.loc 1 995 13
 2896 0076 488B45E8 		movq	-24(%rbp), %rax
 2897 007a 8B403C   		movl	60(%rax), %eax
 2898 007d 488B55E8 		movq	-24(%rbp), %rdx
 2899 0081 4889D6   		movq	%rdx, %rsi
 2900 0084 89C7     		movl	%eax, %edi
 2901 0086 E8000000 		call	SecFinishNumberPositiveInt
 2901      00
 2902              		.loc 1 1011 5
 2903 008b EB1C     		jmp	.L201
 2904              	.L205:
 997:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
 2905              		.loc 1 997 13
 2906 008d 488B45E8 		movq	-24(%rbp), %rax
 2907 0091 8B4810   		movl	16(%rax), %ecx
 2908 0094 488B45E8 		movq	-24(%rbp), %rax
 2909 0098 8B403C   		movl	60(%rax), %eax
 2910 009b 488B55E8 		movq	-24(%rbp), %rdx
 2911 009f 89CE     		movl	%ecx, %esi
 2912 00a1 89C7     		movl	%eax, %edi
 2913 00a3 E8000000 		call	SecFinishNumberPositiveOther
 2913      00
 2914              		.loc 1 1011 5
 2915 00a8 90       		nop
 2916              	.L201:
1012:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 2917              		.loc 1 1012 1
GAS LISTING /tmp/ccLrrfHE.s 			page 76


 2918 00a9 488B45F8 		movq	-8(%rbp), %rax
 2919 00ad 64483304 		xorq	%fs:40, %rax
 2919      25280000 
 2919      00
 2920 00b6 7405     		je	.L207
 2921 00b8 E8000000 		call	__stack_chk_fail@PLT
 2921      00
 2922              	.L207:
 2923 00bd C9       		leave
 2924              	.LCFI86:
 2925              		.cfi_def_cfa 7, 8
 2926 00be C3       		ret
 2927              		.cfi_endproc
 2928              	.LFE34:
 2930              		.section	.text.SecFinishNumber64,"ax",@progbits
 2932              	SecFinishNumber64:
 2933              	.LFB35:
1013:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1014:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1015:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Complete the final 64-bit integer formatted input
1016:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1017:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFinishNumber64(SecScanSpec *spec)
1018:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 2934              		.loc 1 1018 1
 2935              		.cfi_startproc
 2936 0000 F30F1EFA 		endbr64
 2937 0004 55       		pushq	%rbp
 2938              	.LCFI87:
 2939              		.cfi_def_cfa_offset 16
 2940              		.cfi_offset 6, -16
 2941 0005 4889E5   		movq	%rsp, %rbp
 2942              	.LCFI88:
 2943              		.cfi_def_cfa_register 6
 2944 0008 4883EC20 		subq	$32, %rsp
 2945 000c 48897DE8 		movq	%rdi, -24(%rbp)
 2946              		.loc 1 1018 1
 2947 0010 64488B04 		movq	%fs:40, %rax
 2947      25280000 
 2947      00
 2948 0019 488945F8 		movq	%rax, -8(%rbp)
 2949 001d 31C0     		xorl	%eax, %eax
1019:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_LINUX_FORMAT) && !(defined(SECUREC_ON_UNIX)))
1020:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->negative != 0) {
 2950              		.loc 1 1020 13
 2951 001f 488B45E8 		movq	-24(%rbp), %rax
 2952 0023 8B4018   		movl	24(%rax), %eax
 2953              		.loc 1 1020 8
 2954 0026 85C0     		testl	%eax, %eax
 2955 0028 0F84A600 		je	.L209
 2955      0000
1021:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->oriComChr == (SECUREC_CHAR('d')) || (spec->oriComChr == SECUREC_CHAR('i'))) {
 2956              		.loc 1 1021 17
 2957 002e 488B45E8 		movq	-24(%rbp), %rax
 2958 0032 8B403C   		movl	60(%rax), %eax
 2959              		.loc 1 1021 12
 2960 0035 83F864   		cmpl	$100, %eax
 2961 0038 740C     		je	.L210
GAS LISTING /tmp/ccLrrfHE.s 			page 77


 2962              		.loc 1 1021 60 discriminator 1
 2963 003a 488B45E8 		movq	-24(%rbp), %rax
 2964 003e 8B403C   		movl	60(%rax), %eax
 2965              		.loc 1 1021 52 discriminator 1
 2966 0041 83F869   		cmpl	$105, %eax
 2967 0044 7562     		jne	.L211
 2968              	.L210:
1022:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MIN_64BITS_NEG_VALUE) {
 2969              		.loc 1 1022 21
 2970 0046 488B45E8 		movq	-24(%rbp), %rax
 2971 004a 488B00   		movq	(%rax), %rax
 2972              		.loc 1 1022 16
 2973 004d 48BA0000 		movabsq	$-9223372036854775808, %rdx
 2973      00000000 
 2973      0080
 2974 0057 4839D0   		cmpq	%rdx, %rax
 2975 005a 7613     		jbe	.L212
1023:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MIN_64BITS_NEG_VALUE;
 2976              		.loc 1 1023 32
 2977 005c 488B45E8 		movq	-24(%rbp), %rax
 2978 0060 48B90000 		movabsq	$-9223372036854775808, %rcx
 2978      00000000 
 2978      0080
 2979 006a 488908   		movq	%rcx, (%rax)
 2980 006d EB14     		jmp	.L213
 2981              	.L212:
1024:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
1025:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = (SecUnsignedInt64)(-(SecInt64)spec->number64);
 2982              		.loc 1 1025 68
 2983 006f 488B45E8 		movq	-24(%rbp), %rax
 2984 0073 488B00   		movq	(%rax), %rax
 2985              		.loc 1 1025 53
 2986 0076 48F7D8   		negq	%rax
 2987              		.loc 1 1025 34
 2988 0079 4889C2   		movq	%rax, %rdx
 2989              		.loc 1 1025 32
 2990 007c 488B45E8 		movq	-24(%rbp), %rax
 2991 0080 488910   		movq	%rdx, (%rax)
 2992              	.L213:
1026:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1027:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->beyondMax != 0) {
 2993              		.loc 1 1027 21
 2994 0083 488B45E8 		movq	-24(%rbp), %rax
 2995 0087 8B401C   		movl	28(%rax), %eax
 2996              		.loc 1 1027 16
 2997 008a 85C0     		testl	%eax, %eax
 2998 008c 0F84AB00 		je	.L216
 2998      0000
1028:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MIN_64BITS_NEG_VALUE;
 2999              		.loc 1 1028 32
 3000 0092 488B45E8 		movq	-24(%rbp), %rax
 3001 0096 48BE0000 		movabsq	$-9223372036854775808, %rsi
 3001      00000000 
 3001      0080
 3002 00a0 488930   		movq	%rsi, (%rax)
1027:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MIN_64BITS_NEG_VALUE;
 3003              		.loc 1 1027 16
GAS LISTING /tmp/ccLrrfHE.s 			page 78


 3004 00a3 E9950000 		jmp	.L216
 3004      00
 3005              	.L211:
1029:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1030:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {                /* o, u, x, X, p */
1031:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number64 = (SecUnsignedInt64)(-(SecInt64)spec->number64);
 3006              		.loc 1 1031 64
 3007 00a8 488B45E8 		movq	-24(%rbp), %rax
 3008 00ac 488B00   		movq	(%rax), %rax
 3009              		.loc 1 1031 49
 3010 00af 48F7D8   		negq	%rax
 3011              		.loc 1 1031 30
 3012 00b2 4889C2   		movq	%rax, %rdx
 3013              		.loc 1 1031 28
 3014 00b5 488B45E8 		movq	-24(%rbp), %rax
 3015 00b9 488910   		movq	%rdx, (%rax)
1032:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->beyondMax != 0) {
 3016              		.loc 1 1032 21
 3017 00bc 488B45E8 		movq	-24(%rbp), %rax
 3018 00c0 8B401C   		movl	28(%rax), %eax
 3019              		.loc 1 1032 16
 3020 00c3 85C0     		testl	%eax, %eax
 3021 00c5 7477     		je	.L223
1033:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_VALUE;
 3022              		.loc 1 1033 32
 3023 00c7 488B45E8 		movq	-24(%rbp), %rax
 3024 00cb 48C700FF 		movq	$-1, (%rax)
 3024      FFFFFF
1034:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1035:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1036:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
1037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((spec->oriComChr == SECUREC_CHAR('d')) || (spec->oriComChr == SECUREC_CHAR('i'))) {
1038:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MAX_64BITS_POS_VALUE) {
1039:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
1040:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->beyondMax != 0) {
1042:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
1043:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1044:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1045:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->beyondMax != 0) {
1046:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_VALUE;
1047:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1048:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1049:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1050:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1051:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->negative != 0) {
1052:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(__hpux)
1053:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->oriComChr != SECUREC_CHAR('p')) {
1054:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->number64 = (SecUnsignedInt64)(-(SecInt64)spec->number64);
1055:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1056:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1057:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->number64 = (SecUnsignedInt64)(-(SecInt64)spec->number64);
1058:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1059:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1060:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1061:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 3025              		.loc 1 1061 5
GAS LISTING /tmp/ccLrrfHE.s 			page 79


 3026 00d2 EB6A     		jmp	.L223
 3027              	.L209:
1037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MAX_64BITS_POS_VALUE) {
 3028              		.loc 1 1037 18
 3029 00d4 488B45E8 		movq	-24(%rbp), %rax
 3030 00d8 8B403C   		movl	60(%rax), %eax
1037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MAX_64BITS_POS_VALUE) {
 3031              		.loc 1 1037 12
 3032 00db 83F864   		cmpl	$100, %eax
 3033 00de 740C     		je	.L217
1037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MAX_64BITS_POS_VALUE) {
 3034              		.loc 1 1037 60 discriminator 1
 3035 00e0 488B45E8 		movq	-24(%rbp), %rax
 3036 00e4 8B403C   		movl	60(%rax), %eax
1037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->number64 > SECUREC_MAX_64BITS_POS_VALUE) {
 3037              		.loc 1 1037 52 discriminator 1
 3038 00e7 83F869   		cmpl	$105, %eax
 3039 00ea 753B     		jne	.L218
 3040              	.L217:
1038:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
 3041              		.loc 1 1038 21
 3042 00ec 488B45E8 		movq	-24(%rbp), %rax
 3043 00f0 488B00   		movq	(%rax), %rax
1038:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
 3044              		.loc 1 1038 16
 3045 00f3 4885C0   		testq	%rax, %rax
 3046 00f6 7911     		jns	.L219
1039:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 3047              		.loc 1 1039 32
 3048 00f8 488B45E8 		movq	-24(%rbp), %rax
 3049 00fc 48BFFFFF 		movabsq	$9223372036854775807, %rdi
 3049      FFFFFFFF 
 3049      FF7F
 3050 0106 488938   		movq	%rdi, (%rax)
 3051              	.L219:
1041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
 3052              		.loc 1 1041 21
 3053 0109 488B45E8 		movq	-24(%rbp), %rax
 3054 010d 8B401C   		movl	28(%rax), %eax
1041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
 3055              		.loc 1 1041 16
 3056 0110 85C0     		testl	%eax, %eax
 3057 0112 7429     		je	.L216
1042:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 3058              		.loc 1 1042 32
 3059 0114 488B45E8 		movq	-24(%rbp), %rax
 3060 0118 48B9FFFF 		movabsq	$9223372036854775807, %rcx
 3060      FFFFFFFF 
 3060      FF7F
 3061 0122 488908   		movq	%rcx, (%rax)
1041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_POS_VALUE;
 3062              		.loc 1 1041 16
 3063 0125 EB16     		jmp	.L216
 3064              	.L218:
1045:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_VALUE;
 3065              		.loc 1 1045 21
 3066 0127 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 80


 3067 012b 8B401C   		movl	28(%rax), %eax
1045:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->number64 = SECUREC_MAX_64BITS_VALUE;
 3068              		.loc 1 1045 16
 3069 012e 85C0     		testl	%eax, %eax
 3070 0130 740C     		je	.L223
1046:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
 3071              		.loc 1 1046 32
 3072 0132 488B45E8 		movq	-24(%rbp), %rax
 3073 0136 48C700FF 		movq	$-1, (%rax)
 3073      FFFFFF
 3074              	.L216:
 3075              		.loc 1 1061 5 discriminator 2
 3076 013d 90       		nop
 3077              	.L223:
 3078              		.loc 1 1061 5 is_stmt 0
 3079 013e 90       		nop
1062:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3080              		.loc 1 1062 1 is_stmt 1
 3081 013f 488B45F8 		movq	-8(%rbp), %rax
 3082 0143 64483304 		xorq	%fs:40, %rax
 3082      25280000 
 3082      00
 3083 014c 7405     		je	.L222
 3084 014e E8000000 		call	__stack_chk_fail@PLT
 3084      00
 3085              	.L222:
 3086 0153 C9       		leave
 3087              	.LCFI89:
 3088              		.cfi_def_cfa 7, 8
 3089 0154 C3       		ret
 3090              		.cfi_endproc
 3091              	.LFE35:
 3093              		.section	.data.rel.local.g_secFinishNumber,"aw"
 3094              		.align 16
 3097              	g_secFinishNumber:
 3098 0000 00000000 		.quad	SecFinishNumber
 3098      00000000 
 3099 0008 00000000 		.quad	SecFinishNumber64
 3099      00000000 
 3100              		.section	.text.SecSeekStream,"ax",@progbits
 3102              	SecSeekStream:
 3103              	.LFB36:
1063:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void (*g_secFinishNumber[SECUREC_DECODE_NUMBER_FUNC_NUM])(SecScanSpec *spec) = \
1064:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     { SecFinishNumber, SecFinishNumber64 };
1065:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1066:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
1067:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1068:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1069:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Adjust the pointer position of the file stream
1070:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1071:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecSeekStream(SecFileStream *stream)
1072:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3104              		.loc 1 1072 1
 3105              		.cfi_startproc
 3106 0000 F30F1EFA 		endbr64
 3107 0004 55       		pushq	%rbp
 3108              	.LCFI90:
GAS LISTING /tmp/ccLrrfHE.s 			page 81


 3109              		.cfi_def_cfa_offset 16
 3110              		.cfi_offset 6, -16
 3111 0005 4889E5   		movq	%rsp, %rbp
 3112              	.LCFI91:
 3113              		.cfi_def_cfa_register 6
 3114 0008 4883EC20 		subq	$32, %rsp
 3115 000c 48897DE8 		movq	%rdi, -24(%rbp)
 3116              		.loc 1 1072 1
 3117 0010 64488B04 		movq	%fs:40, %rax
 3117      25280000 
 3117      00
 3118 0019 488945F8 		movq	%rax, -8(%rbp)
 3119 001d 31C0     		xorl	%eax, %eax
1073:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((stream->count == 0) && feof(stream->pf)) {
 3120              		.loc 1 1073 16
 3121 001f 488B45E8 		movq	-24(%rbp), %rax
 3122 0023 8B4004   		movl	4(%rax), %eax
 3123              		.loc 1 1073 8
 3124 0026 85C0     		testl	%eax, %eax
 3125 0028 7521     		jne	.L225
 3126              		.loc 1 1073 33 discriminator 1
 3127 002a 488B45E8 		movq	-24(%rbp), %rax
 3128 002e 488B4018 		movq	24(%rax), %rax
 3129 0032 4889C7   		movq	%rax, %rdi
 3130 0035 E8000000 		call	feof@PLT
 3130      00
 3131              		.loc 1 1073 30 discriminator 1
 3132 003a 85C0     		testl	%eax, %eax
 3133 003c 740D     		je	.L225
1074:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* file pointer at the end of file, don't need to seek back */
1075:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->base[0] = '\0';
 3134              		.loc 1 1075 15
 3135 003e 488B45E8 		movq	-24(%rbp), %rax
 3136 0042 488B4010 		movq	16(%rax), %rax
 3137              		.loc 1 1075 25
 3138 0046 C60000   		movb	$0, (%rax)
1076:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 3139              		.loc 1 1076 9
 3140 0049 EB7B     		jmp	.L224
 3141              	.L225:
1077:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1078:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* LSD seek to original position, bug fix 2014 1 21 */
1079:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (fseek(stream->pf, stream->oriFilePos, SEEK_SET)) {
 3142              		.loc 1 1079 9
 3143 004b 488B45E8 		movq	-24(%rbp), %rax
 3144 004f 488B4820 		movq	32(%rax), %rcx
 3145 0053 488B45E8 		movq	-24(%rbp), %rax
 3146 0057 488B4018 		movq	24(%rax), %rax
 3147 005b BA000000 		movl	$0, %edx
 3147      00
 3148 0060 4889CE   		movq	%rcx, %rsi
 3149 0063 4889C7   		movq	%rax, %rdi
 3150 0066 E8000000 		call	fseek@PLT
 3150      00
 3151              		.loc 1 1079 8
 3152 006b 85C0     		testl	%eax, %eax
 3153 006d 740E     		je	.L227
GAS LISTING /tmp/ccLrrfHE.s 			page 82


1080:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* seek failed, ignore it */
1081:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->oriFilePos = 0;
 3154              		.loc 1 1081 28
 3155 006f 488B45E8 		movq	-24(%rbp), %rax
 3156 0073 48C74020 		movq	$0, 32(%rax)
 3156      00000000 
1082:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return;
 3157              		.loc 1 1082 9
 3158 007b EB49     		jmp	.L224
 3159              	.L227:
1083:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1084:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1085:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream->fileRealRead > 0) { /* LSD bug fix. when file reach to EOF, don't seek back */
 3160              		.loc 1 1085 15
 3161 007d 488B45E8 		movq	-24(%rbp), %rax
 3162 0081 8B4028   		movl	40(%rax), %eax
 3163              		.loc 1 1085 8
 3164 0084 85C0     		testl	%eax, %eax
 3165 0086 7E3D     		jle	.L230
1086:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_WIN_FORMAT))
1087:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         int loops;
1088:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         for (loops = 0; loops < (stream->fileRealRead / SECUREC_BUFFERED_BLOK_SIZE); ++loops) {
1089:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (fread(stream->base, (size_t)1, (size_t)SECUREC_BUFFERED_BLOK_SIZE,
1090:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 stream->pf) != SECUREC_BUFFERED_BLOK_SIZE) {
1091:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
1092:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1093:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1094:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((stream->fileRealRead % SECUREC_BUFFERED_BLOK_SIZE) != 0) {
1095:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             size_t ret = fread(stream->base, (size_t)((unsigned int)stream->fileRealRead % SECUREC_
1096:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                                (size_t)1, stream->pf);
1097:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if ((ret == 1 || ret == 0) && (ftell(stream->pf) < stream->oriFilePos + stream->fileRea
1098:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 (void)fseek(stream->pf, stream->oriFilePos + stream->fileRealRead, SEEK_SET);
1099:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1100:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1101:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1102:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1103:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* in linux like system */
1104:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (fseek(stream->pf, stream->oriFilePos + stream->fileRealRead, SEEK_SET)) {
 3166              		.loc 1 1104 37
 3167 0088 488B45E8 		movq	-24(%rbp), %rax
 3168 008c 488B5020 		movq	32(%rax), %rdx
 3169              		.loc 1 1104 58
 3170 0090 488B45E8 		movq	-24(%rbp), %rax
 3171 0094 8B4028   		movl	40(%rax), %eax
 3172 0097 4898     		cltq
 3173              		.loc 1 1104 13
 3174 0099 488D0C02 		leaq	(%rdx,%rax), %rcx
 3175 009d 488B45E8 		movq	-24(%rbp), %rax
 3176 00a1 488B4018 		movq	24(%rax), %rax
 3177 00a5 BA000000 		movl	$0, %edx
 3177      00
 3178 00aa 4889CE   		movq	%rcx, %rsi
 3179 00ad 4889C7   		movq	%rax, %rdi
 3180 00b0 E8000000 		call	fseek@PLT
 3180      00
 3181              		.loc 1 1104 12
 3182 00b5 85C0     		testl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 83


 3183 00b7 740C     		je	.L230
1105:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* seek failed, ignore it */
1106:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->oriFilePos = 0;
 3184              		.loc 1 1106 32
 3185 00b9 488B45E8 		movq	-24(%rbp), %rax
 3186 00bd 48C74020 		movq	$0, 32(%rax)
 3186      00000000 
 3187              	.L230:
1107:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1108:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1109:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1110:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1111:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 3188              		.loc 1 1111 5
 3189 00c5 90       		nop
 3190              	.L224:
1112:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3191              		.loc 1 1112 1
 3192 00c6 488B45F8 		movq	-8(%rbp), %rax
 3193 00ca 64483304 		xorq	%fs:40, %rax
 3193      25280000 
 3193      00
 3194 00d3 7405     		je	.L229
 3195 00d5 E8000000 		call	__stack_chk_fail@PLT
 3195      00
 3196              	.L229:
 3197 00da C9       		leave
 3198              	.LCFI92:
 3199              		.cfi_def_cfa 7, 8
 3200 00db C3       		ret
 3201              		.cfi_endproc
 3202              	.LFE36:
 3204              		.section	.text.SecAdjustStream,"ax",@progbits
 3206              	SecAdjustStream:
 3207              	.LFB37:
1113:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1114:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1115:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Adjust the pointer position of the file stream and free memory
1116:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1117:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecAdjustStream(SecFileStream *stream)
1118:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3208              		.loc 1 1118 1
 3209              		.cfi_startproc
 3210 0000 F30F1EFA 		endbr64
 3211 0004 55       		pushq	%rbp
 3212              	.LCFI93:
 3213              		.cfi_def_cfa_offset 16
 3214              		.cfi_offset 6, -16
 3215 0005 4889E5   		movq	%rsp, %rbp
 3216              	.LCFI94:
 3217              		.cfi_def_cfa_register 6
 3218 0008 4883EC20 		subq	$32, %rsp
 3219 000c 48897DE8 		movq	%rdi, -24(%rbp)
 3220              		.loc 1 1118 1
 3221 0010 64488B04 		movq	%fs:40, %rax
 3221      25280000 
 3221      00
GAS LISTING /tmp/ccLrrfHE.s 			page 84


 3222 0019 488945F8 		movq	%rax, -8(%rbp)
 3223 001d 31C0     		xorl	%eax, %eax
1119:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream != NULL && (stream->flag & SECUREC_FILE_STREAM_FLAG) && stream->base != NULL) {
 3224              		.loc 1 1119 8
 3225 001f 48837DE8 		cmpq	$0, -24(%rbp)
 3225      00
 3226 0024 7443     		je	.L235
 3227              		.loc 1 1119 34 discriminator 1
 3228 0026 488B45E8 		movq	-24(%rbp), %rax
 3229 002a 8B00     		movl	(%rax), %eax
 3230              		.loc 1 1119 41 discriminator 1
 3231 002c 83E002   		andl	$2, %eax
 3232              		.loc 1 1119 24 discriminator 1
 3233 002f 85C0     		testl	%eax, %eax
 3234 0031 7436     		je	.L235
 3235              		.loc 1 1119 78 discriminator 2
 3236 0033 488B45E8 		movq	-24(%rbp), %rax
 3237 0037 488B4010 		movq	16(%rax), %rax
 3238              		.loc 1 1119 69 discriminator 2
 3239 003b 4885C0   		testq	%rax, %rax
 3240 003e 7429     		je	.L235
1120:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecSeekStream(stream);
 3241              		.loc 1 1120 9
 3242 0040 488B45E8 		movq	-24(%rbp), %rax
 3243 0044 4889C7   		movq	%rax, %rdi
 3244 0047 E8000000 		call	SecSeekStream
 3244      00
1121:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_FREE(stream->base);
 3245              		.loc 1 1121 9
 3246 004c 488B45E8 		movq	-24(%rbp), %rax
 3247 0050 488B4010 		movq	16(%rax), %rax
 3248 0054 4889C7   		movq	%rax, %rdi
 3249 0057 E8000000 		call	free@PLT
 3249      00
1122:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->base = NULL;
 3250              		.loc 1 1122 22
 3251 005c 488B45E8 		movq	-24(%rbp), %rax
 3252 0060 48C74010 		movq	$0, 16(%rax)
 3252      00000000 
1123:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1124:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return;
 3253              		.loc 1 1124 5
 3254 0068 90       		nop
 3255              	.L235:
 3256 0069 90       		nop
1125:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3257              		.loc 1 1125 1
 3258 006a 488B45F8 		movq	-8(%rbp), %rax
 3259 006e 64483304 		xorq	%fs:40, %rax
 3259      25280000 
 3259      00
 3260 0077 7405     		je	.L234
 3261 0079 E8000000 		call	__stack_chk_fail@PLT
 3261      00
 3262              	.L234:
 3263 007e C9       		leave
 3264              	.LCFI95:
GAS LISTING /tmp/ccLrrfHE.s 			page 85


 3265              		.cfi_def_cfa 7, 8
 3266 007f C3       		ret
 3267              		.cfi_endproc
 3268              	.LFE37:
 3270              		.section	.text.SecSkipSpaceFormat,"ax",@progbits
 3272              	SecSkipSpaceFormat:
 3273              	.LFB38:
1126:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1127:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1128:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecSkipSpaceFormat(const SecUnsignedChar **format)
1129:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3274              		.loc 1 1129 1
 3275              		.cfi_startproc
 3276 0000 F30F1EFA 		endbr64
 3277 0004 55       		pushq	%rbp
 3278              	.LCFI96:
 3279              		.cfi_def_cfa_offset 16
 3280              		.cfi_offset 6, -16
 3281 0005 4889E5   		movq	%rsp, %rbp
 3282              	.LCFI97:
 3283              		.cfi_def_cfa_register 6
 3284 0008 4883EC20 		subq	$32, %rsp
 3285 000c 48897DE8 		movq	%rdi, -24(%rbp)
 3286              		.loc 1 1129 1
 3287 0010 64488B04 		movq	%fs:40, %rax
 3287      25280000 
 3287      00
 3288 0019 488945F8 		movq	%rax, -8(%rbp)
 3289 001d 31C0     		xorl	%eax, %eax
1130:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 3290              		.loc 1 1130 28
 3291 001f 488B45E8 		movq	-24(%rbp), %rax
 3292 0023 488B00   		movq	(%rax), %rax
 3293 0026 488945F0 		movq	%rax, -16(%rbp)
1131:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_SPACE(*fmt)) {
 3294              		.loc 1 1131 11
 3295 002a EB05     		jmp	.L237
 3296              	.L238:
1132:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 3297              		.loc 1 1132 9
 3298 002c 488345F0 		addq	$1, -16(%rbp)
 3298      01
 3299              	.L237:
1131:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_SPACE(*fmt)) {
 3300              		.loc 1 1131 12
 3301 0031 E8000000 		call	__ctype_b_loc@PLT
 3301      00
 3302 0036 488B10   		movq	(%rax), %rdx
 3303 0039 488B45F0 		movq	-16(%rbp), %rax
 3304 003d 0FB600   		movzbl	(%rax), %eax
 3305 0040 0FB6C0   		movzbl	%al, %eax
 3306 0043 4801C0   		addq	%rax, %rax
 3307 0046 4801D0   		addq	%rdx, %rax
 3308 0049 0FB700   		movzwl	(%rax), %eax
 3309 004c 0FB7C0   		movzwl	%ax, %eax
 3310 004f 25002000 		andl	$8192, %eax
 3310      00
GAS LISTING /tmp/ccLrrfHE.s 			page 86


1131:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_SPACE(*fmt)) {
 3311              		.loc 1 1131 11
 3312 0054 85C0     		testl	%eax, %eax
 3313 0056 75D4     		jne	.L238
1133:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1134:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 3314              		.loc 1 1134 13
 3315 0058 488B45E8 		movq	-24(%rbp), %rax
 3316 005c 488B55F0 		movq	-16(%rbp), %rdx
 3317 0060 488910   		movq	%rdx, (%rax)
1135:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3318              		.loc 1 1135 1
 3319 0063 90       		nop
 3320 0064 488B45F8 		movq	-8(%rbp), %rax
 3321 0068 64483304 		xorq	%fs:40, %rax
 3321      25280000 
 3321      00
 3322 0071 7405     		je	.L239
 3323 0073 E8000000 		call	__stack_chk_fail@PLT
 3323      00
 3324              	.L239:
 3325 0078 C9       		leave
 3326              	.LCFI98:
 3327              		.cfi_def_cfa 7, 8
 3328 0079 C3       		ret
 3329              		.cfi_endproc
 3330              	.LFE38:
 3332              		.section	.text.SecDecodeLeadByte,"ax",@progbits
 3334              	SecDecodeLeadByte:
 3335              	.LFB39:
1136:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef SECUREC_FOR_WCHAR
1137:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1138:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Handling multi-character characters
1139:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1140:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecDecodeLeadByte(SecInt ch, const SecUnsignedChar **format, SecFileStream *stream, int 
1141:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3336              		.loc 1 1141 1
 3337              		.cfi_startproc
 3338 0000 F30F1EFA 		endbr64
 3339 0004 55       		pushq	%rbp
 3340              	.LCFI99:
 3341              		.cfi_def_cfa_offset 16
 3342              		.cfi_offset 6, -16
 3343 0005 4889E5   		movq	%rsp, %rbp
 3344              	.LCFI100:
 3345              		.cfi_def_cfa_register 6
 3346 0008 4883EC50 		subq	$80, %rsp
 3347 000c 897DCC   		movl	%edi, -52(%rbp)
 3348 000f 488975C0 		movq	%rsi, -64(%rbp)
 3349 0013 488955B8 		movq	%rdx, -72(%rbp)
 3350 0017 48894DB0 		movq	%rcx, -80(%rbp)
 3351              		.loc 1 1141 1
 3352 001b 64488B04 		movq	%fs:40, %rax
 3352      25280000 
 3352      00
 3353 0024 488945F8 		movq	%rax, -8(%rbp)
 3354 0028 31C0     		xorl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 87


1142:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_HAVE_MBTOWC
1143:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     char temp[SECUREC_MULTI_BYTE_MAX_LEN];
1144:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 3355              		.loc 1 1144 28
 3356 002a 488B45C0 		movq	-64(%rbp), %rax
 3357 002e 488B00   		movq	(%rax), %rax
 3358 0031 488945E8 		movq	%rax, -24(%rbp)
1145:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     wchar_t tempWChar = L'\0';
 3359              		.loc 1 1145 13
 3360 0035 C745DC00 		movl	$0, -36(%rbp)
 3360      000000
1146:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int ch2 = SecGetChar(stream, counter);
 3361              		.loc 1 1146 15
 3362 003c 488B55B0 		movq	-80(%rbp), %rdx
 3363 0040 488B45B8 		movq	-72(%rbp), %rax
 3364 0044 4889D6   		movq	%rdx, %rsi
 3365 0047 4889C7   		movq	%rax, %rdi
 3366 004a E8000000 		call	SecGetChar
 3366      00
 3367 004f 8945E0   		movl	%eax, -32(%rbp)
1147:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*fmt == SECUREC_CHAR('\0') || (int)(*fmt) != (ch2)) {
 3368              		.loc 1 1147 9
 3369 0052 488B45E8 		movq	-24(%rbp), %rax
 3370 0056 0FB600   		movzbl	(%rax), %eax
 3371              		.loc 1 1147 8
 3372 0059 84C0     		testb	%al, %al
 3373 005b 740F     		je	.L241
 3374              		.loc 1 1147 45 discriminator 1
 3375 005d 488B45E8 		movq	-24(%rbp), %rax
 3376 0061 0FB600   		movzbl	(%rax), %eax
 3377              		.loc 1 1147 39 discriminator 1
 3378 0064 0FB6C0   		movzbl	%al, %eax
 3379              		.loc 1 1147 36 discriminator 1
 3380 0067 3945E0   		cmpl	%eax, -32(%rbp)
 3381 006a 7434     		je	.L242
 3382              	.L241:
1148:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* LSD in console mode, ungetc twice may cause problem */
1149:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUnGetChar(ch2, stream, counter);
 3383              		.loc 1 1149 9
 3384 006c 488B55B0 		movq	-80(%rbp), %rdx
 3385 0070 488B4DB8 		movq	-72(%rbp), %rcx
 3386 0074 8B45E0   		movl	-32(%rbp), %eax
 3387 0077 4889CE   		movq	%rcx, %rsi
 3388 007a 89C7     		movl	%eax, %edi
 3389 007c E8000000 		call	SecUnGetChar
 3389      00
1150:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUnGetChar(ch, stream, counter);
 3390              		.loc 1 1150 9
 3391 0081 488B55B0 		movq	-80(%rbp), %rdx
 3392 0085 488B4DB8 		movq	-72(%rbp), %rcx
 3393 0089 8B45CC   		movl	-52(%rbp), %eax
 3394 008c 4889CE   		movq	%rcx, %rsi
 3395 008f 89C7     		movl	%eax, %edi
 3396 0091 E8000000 		call	SecUnGetChar
 3396      00
1151:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 3397              		.loc 1 1151 16
GAS LISTING /tmp/ccLrrfHE.s 			page 88


 3398 0096 B8FFFFFF 		movl	$-1, %eax
 3398      FF
 3399 009b E9FD0000 		jmp	.L248
 3399      00
 3400              	.L242:
1152:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1153:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     ++fmt;
 3401              		.loc 1 1153 5
 3402 00a0 488345E8 		addq	$1, -24(%rbp)
 3402      01
1154:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (MB_CUR_MAX >= SECUREC_UTF8_BOM_HEADER_SIZE &&
 3403              		.loc 1 1154 9
 3404 00a5 E8000000 		call	__ctype_get_mb_cur_max@PLT
 3404      00
 3405              		.loc 1 1154 8
 3406 00aa 4883F802 		cmpq	$2, %rax
 3407 00ae 0F86CA00 		jbe	.L244
 3407      0000
1155:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (((unsigned char)ch & SECUREC_UTF8_LEAD_1ST) == SECUREC_UTF8_LEAD_1ST) &&
 3408              		.loc 1 1155 11 discriminator 1
 3409 00b4 8B45CC   		movl	-52(%rbp), %eax
 3410              		.loc 1 1155 29 discriminator 1
 3411 00b7 0FB6C0   		movzbl	%al, %eax
 3412 00ba 25E00000 		andl	$224, %eax
 3412      00
1154:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (MB_CUR_MAX >= SECUREC_UTF8_BOM_HEADER_SIZE &&
 3413              		.loc 1 1154 52 discriminator 1
 3414 00bf 3DE00000 		cmpl	$224, %eax
 3414      00
 3415 00c4 0F85B400 		jne	.L244
 3415      0000
1156:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (((unsigned char)ch2 & SECUREC_UTF8_LEAD_2ND) == SECUREC_UTF8_LEAD_2ND)) {
 3416              		.loc 1 1156 55
 3417 00ca 8B45E0   		movl	-32(%rbp), %eax
1155:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (((unsigned char)ch & SECUREC_UTF8_LEAD_1ST) == SECUREC_UTF8_LEAD_1ST) &&
 3418              		.loc 1 1155 80
 3419 00cd 84C0     		testb	%al, %al
 3420 00cf 0F89A900 		jns	.L244
 3420      0000
 3421              	.LBB10:
1157:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* this char is very likely to be a UTF-8 char */
1158:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         int ch3 = SecGetChar(stream, counter);
 3422              		.loc 1 1158 19
 3423 00d5 488B55B0 		movq	-80(%rbp), %rdx
 3424 00d9 488B45B8 		movq	-72(%rbp), %rax
 3425 00dd 4889D6   		movq	%rdx, %rsi
 3426 00e0 4889C7   		movq	%rax, %rdi
 3427 00e3 E8000000 		call	SecGetChar
 3427      00
 3428 00e8 8945E4   		movl	%eax, -28(%rbp)
1159:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[0] = (char)ch;
 3429              		.loc 1 1159 19
 3430 00eb 8B45CC   		movl	-52(%rbp), %eax
 3431              		.loc 1 1159 17
 3432 00ee 8845F2   		movb	%al, -14(%rbp)
1160:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[1] = (char)ch2; /* 1 index of second character */
 3433              		.loc 1 1160 19
GAS LISTING /tmp/ccLrrfHE.s 			page 89


 3434 00f1 8B45E0   		movl	-32(%rbp), %eax
 3435              		.loc 1 1160 17
 3436 00f4 8845F3   		movb	%al, -13(%rbp)
1161:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[2] = (char)ch3; /* 2 index of third character */
 3437              		.loc 1 1161 19
 3438 00f7 8B45E4   		movl	-28(%rbp), %eax
 3439              		.loc 1 1161 17
 3440 00fa 8845F4   		movb	%al, -12(%rbp)
1162:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[3] = '\0';      /* 3 of string terminator position */
 3441              		.loc 1 1162 17
 3442 00fd C645F500 		movb	$0, -11(%rbp)
1163:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1164:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (mbtowc(&tempWChar, temp, sizeof(temp)) > 0) {
 3443              		.loc 1 1164 13
 3444 0101 488D4DF2 		leaq	-14(%rbp), %rcx
 3445 0105 488D45DC 		leaq	-36(%rbp), %rax
 3446 0109 BA060000 		movl	$6, %edx
 3446      00
 3447 010e 4889CE   		movq	%rcx, %rsi
 3448 0111 4889C7   		movq	%rax, %rdi
 3449 0114 E8000000 		call	mbtowc@PLT
 3449      00
 3450              		.loc 1 1164 12
 3451 0119 85C0     		testl	%eax, %eax
 3452 011b 7E4C     		jle	.L245
1165:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* succeed */
1166:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (*fmt == SECUREC_CHAR('\0') || (int)(*fmt) != (int)ch3) {
 3453              		.loc 1 1166 17
 3454 011d 488B45E8 		movq	-24(%rbp), %rax
 3455 0121 0FB600   		movzbl	(%rax), %eax
 3456              		.loc 1 1166 16
 3457 0124 84C0     		testb	%al, %al
 3458 0126 740F     		je	.L246
 3459              		.loc 1 1166 53 discriminator 1
 3460 0128 488B45E8 		movq	-24(%rbp), %rax
 3461 012c 0FB600   		movzbl	(%rax), %eax
 3462              		.loc 1 1166 47 discriminator 1
 3463 012f 0FB6C0   		movzbl	%al, %eax
 3464              		.loc 1 1166 44 discriminator 1
 3465 0132 3945E4   		cmpl	%eax, -28(%rbp)
 3466 0135 741C     		je	.L247
 3467              	.L246:
1167:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SecUnGetChar(ch3, stream, counter);
 3468              		.loc 1 1167 17
 3469 0137 488B55B0 		movq	-80(%rbp), %rdx
 3470 013b 488B4DB8 		movq	-72(%rbp), %rcx
 3471 013f 8B45E4   		movl	-28(%rbp), %eax
 3472 0142 4889CE   		movq	%rcx, %rsi
 3473 0145 89C7     		movl	%eax, %edi
 3474 0147 E8000000 		call	SecUnGetChar
 3474      00
1168:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 3475              		.loc 1 1168 24
 3476 014c B8FFFFFF 		movl	$-1, %eax
 3476      FF
 3477 0151 EB4A     		jmp	.L248
 3478              	.L247:
GAS LISTING /tmp/ccLrrfHE.s 			page 90


1169:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1170:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++fmt;
 3479              		.loc 1 1170 13
 3480 0153 488345E8 		addq	$1, -24(%rbp)
 3480      01
1171:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             *counter = *counter - 1;
 3481              		.loc 1 1171 24
 3482 0158 488B45B0 		movq	-80(%rbp), %rax
 3483 015c 8B00     		movl	(%rax), %eax
 3484              		.loc 1 1171 33
 3485 015e 8D50FF   		leal	-1(%rax), %edx
 3486              		.loc 1 1171 22
 3487 0161 488B45B0 		movq	-80(%rbp), %rax
 3488 0165 8910     		movl	%edx, (%rax)
 3489 0167 EB15     		jmp	.L244
 3490              	.L245:
1172:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1173:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecUnGetChar(ch3, stream, counter);
 3491              		.loc 1 1173 13
 3492 0169 488B55B0 		movq	-80(%rbp), %rdx
 3493 016d 488B4DB8 		movq	-72(%rbp), %rcx
 3494 0171 8B45E4   		movl	-28(%rbp), %eax
 3495 0174 4889CE   		movq	%rcx, %rsi
 3496 0177 89C7     		movl	%eax, %edi
 3497 0179 E8000000 		call	SecUnGetChar
 3497      00
 3498              	.L244:
 3499              	.LBE10:
1174:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1175:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1176:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *counter = *counter - 1;    /* only count as one character read */
 3500              		.loc 1 1176 16
 3501 017e 488B45B0 		movq	-80(%rbp), %rax
 3502 0182 8B00     		movl	(%rax), %eax
 3503              		.loc 1 1176 25
 3504 0184 8D50FF   		leal	-1(%rax), %edx
 3505              		.loc 1 1176 14
 3506 0187 488B45B0 		movq	-80(%rbp), %rax
 3507 018b 8910     		movl	%edx, (%rax)
1177:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 3508              		.loc 1 1177 13
 3509 018d 488B45C0 		movq	-64(%rbp), %rax
 3510 0191 488B55E8 		movq	-24(%rbp), %rdx
 3511 0195 488910   		movq	%rdx, (%rax)
1178:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 3512              		.loc 1 1178 12
 3513 0198 B8000000 		movl	$0, %eax
 3513      00
 3514              	.L248:
1179:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1180:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnGetChar(ch, stream, counter);
1181:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (void)format;
1182:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return -1;
1183:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1184:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3515              		.loc 1 1184 1 discriminator 1
 3516 019d 488B75F8 		movq	-8(%rbp), %rsi
GAS LISTING /tmp/ccLrrfHE.s 			page 91


 3517 01a1 64483334 		xorq	%fs:40, %rsi
 3517      25280000 
 3517      00
 3518 01aa 7405     		je	.L249
 3519              		.loc 1 1184 1 is_stmt 0
 3520 01ac E8000000 		call	__stack_chk_fail@PLT
 3520      00
 3521              	.L249:
 3522 01b1 C9       		leave
 3523              	.LCFI101:
 3524              		.cfi_def_cfa 7, 8
 3525 01b2 C3       		ret
 3526              		.cfi_endproc
 3527              	.LFE39:
 3529              		.section	.text.SecSetupBracketTable,"ax",@progbits
 3531              	SecSetupBracketTable:
 3532              	.LFB40:
1185:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1186:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1187:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1188:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1189:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1190:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Resolving sequence of characters from %[ format
1191:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1192:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecSetupBracketTable(const SecUnsignedChar **format, SecBracketTable *bracketTable)
1193:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3533              		.loc 1 1193 1 is_stmt 1
 3534              		.cfi_startproc
 3535 0000 F30F1EFA 		endbr64
 3536 0004 55       		pushq	%rbp
 3537              	.LCFI102:
 3538              		.cfi_def_cfa_offset 16
 3539              		.cfi_offset 6, -16
 3540 0005 4889E5   		movq	%rsp, %rbp
 3541              	.LCFI103:
 3542              		.cfi_def_cfa_register 6
 3543 0008 4883EC60 		subq	$96, %rsp
 3544 000c 48897DA8 		movq	%rdi, -88(%rbp)
 3545 0010 488975A0 		movq	%rsi, -96(%rbp)
 3546              		.loc 1 1193 1
 3547 0014 64488B04 		movq	%fs:40, %rax
 3547      25280000 
 3547      00
 3548 001d 488945F8 		movq	%rax, -8(%rbp)
 3549 0021 31C0     		xorl	%eax, %eax
1194:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *fmt = *format;
 3550              		.loc 1 1194 28
 3551 0023 488B45A8 		movq	-88(%rbp), %rax
 3552 0027 488B00   		movq	(%rax), %rax
 3553 002a 488945F0 		movq	%rax, -16(%rbp)
1195:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnsignedChar prevChar = 0;
 3554              		.loc 1 1195 21
 3555 002e C645BD00 		movb	$0, -67(%rbp)
1196:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnsignedChar expCh;
1197:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnsignedChar last = 0;
 3556              		.loc 1 1197 21
 3557 0032 C645BF00 		movb	$0, -65(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 92


1198:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if !(defined(SECUREC_COMPATIBLE_WIN_FORMAT))
1199:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*fmt == SECUREC_CHAR('{')) {
 3558              		.loc 1 1199 9
 3559 0036 488B45F0 		movq	-16(%rbp), %rax
 3560 003a 0FB600   		movzbl	(%rax), %eax
 3561              		.loc 1 1199 8
 3562 003d 3C7B     		cmpb	$123, %al
 3563 003f 750A     		jne	.L251
1200:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 3564              		.loc 1 1200 16
 3565 0041 B8FFFFFF 		movl	$-1, %eax
 3565      FF
 3566 0046 E9440200 		jmp	.L252
 3566      00
 3567              	.L251:
1201:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1202:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1203:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* for building "table" data */
1204:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     ++fmt; /* skip [ */
 3568              		.loc 1 1204 5
 3569 004b 488345F0 		addq	$1, -16(%rbp)
 3569      01
1205:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     bracketTable->mask = 0;
 3570              		.loc 1 1205 24
 3571 0050 488B45A0 		movq	-96(%rbp), %rax
 3572 0054 C6402000 		movb	$0, 32(%rax)
1206:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*fmt == SECUREC_CHAR('^')) {
 3573              		.loc 1 1206 9
 3574 0058 488B45F0 		movq	-16(%rbp), %rax
 3575 005c 0FB600   		movzbl	(%rax), %eax
 3576              		.loc 1 1206 8
 3577 005f 3C5E     		cmpb	$94, %al
 3578 0061 750D     		jne	.L253
1207:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 3579              		.loc 1 1207 9
 3580 0063 488345F0 		addq	$1, -16(%rbp)
 3580      01
1208:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         bracketTable->mask = (unsigned char)0xff;
 3581              		.loc 1 1208 28
 3582 0068 488B45A0 		movq	-96(%rbp), %rax
 3583 006c C64020FF 		movb	$-1, 32(%rax)
 3584              	.L253:
1209:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1210:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (*fmt == SECUREC_CHAR(']')) {
 3585              		.loc 1 1210 9
 3586 0070 488B45F0 		movq	-16(%rbp), %rax
 3587 0074 0FB600   		movzbl	(%rax), %eax
 3588              		.loc 1 1210 8
 3589 0077 3C5D     		cmpb	$93, %al
 3590 0079 0F85E601 		jne	.L255
 3590      0000
1211:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         prevChar = SECUREC_CHAR(']');
 3591              		.loc 1 1211 18
 3592 007f C645BD5D 		movb	$93, -67(%rbp)
1212:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++fmt;
 3593              		.loc 1 1212 9
 3594 0083 488345F0 		addq	$1, -16(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 93


 3594      01
 3595              	.LBB11:
1213:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_BRACKET_SET_BIT(bracketTable->table, SECUREC_CHAR(']'));
 3596              		.loc 1 1213 9
 3597 0088 C745C00B 		movl	$11, -64(%rbp)
 3597      000000
 3598 008f C745C420 		movl	$32, -60(%rbp)
 3598      000000
 3599 0096 488B55A0 		movq	-96(%rbp), %rdx
 3600 009a 8B45C0   		movl	-64(%rbp), %eax
 3601 009d 0FB60402 		movzbl	(%rdx,%rax), %eax
 3602 00a1 8B55C4   		movl	-60(%rbp), %edx
 3603 00a4 09D0     		orl	%edx, %eax
 3604 00a6 89C1     		movl	%eax, %ecx
 3605 00a8 488B55A0 		movq	-96(%rbp), %rdx
 3606 00ac 8B45C0   		movl	-64(%rbp), %eax
 3607 00af 880C02   		movb	%cl, (%rdx,%rax)
 3608              	.LBE11:
1214:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (*fmt != SECUREC_CHAR('\0') && *fmt != SECUREC_CHAR(']')) {
 3609              		.loc 1 1215 11
 3610 00b2 E9AE0100 		jmp	.L255
 3610      00
 3611              	.L263:
1216:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         expCh = *fmt++;
 3612              		.loc 1 1216 21
 3613 00b7 488B45F0 		movq	-16(%rbp), %rax
 3614 00bb 488D5001 		leaq	1(%rax), %rdx
 3615 00bf 488955F0 		movq	%rdx, -16(%rbp)
 3616              		.loc 1 1216 15
 3617 00c3 0FB600   		movzbl	(%rax), %eax
 3618 00c6 8845BE   		movb	%al, -66(%rbp)
1217:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (expCh != SECUREC_CHAR('-') || prevChar == 0 || *fmt == SECUREC_CHAR(']')) {
 3619              		.loc 1 1217 12
 3620 00c9 807DBE2D 		cmpb	$45, -66(%rbp)
 3621 00cd 7511     		jne	.L256
 3622              		.loc 1 1217 40 discriminator 1
 3623 00cf 807DBD00 		cmpb	$0, -67(%rbp)
 3624 00d3 740B     		je	.L256
 3625              		.loc 1 1217 60 discriminator 2
 3626 00d5 488B45F0 		movq	-16(%rbp), %rax
 3627 00d9 0FB600   		movzbl	(%rax), %eax
 3628              		.loc 1 1217 57 discriminator 2
 3629 00dc 3C5D     		cmpb	$93, %al
 3630 00de 754D     		jne	.L257
 3631              	.L256:
1218:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* normal character */
1219:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             prevChar = expCh;
 3632              		.loc 1 1219 22
 3633 00e0 0FB645BE 		movzbl	-66(%rbp), %eax
 3634 00e4 8845BD   		movb	%al, -67(%rbp)
 3635              	.LBB12:
1220:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
 3636              		.loc 1 1220 13
 3637 00e7 0FB645BE 		movzbl	-66(%rbp), %eax
 3638 00eb C0E803   		shrb	$3, %al
 3639 00ee 0FB6C0   		movzbl	%al, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 94


 3640 00f1 8945E8   		movl	%eax, -24(%rbp)
 3641 00f4 0FB645BE 		movzbl	-66(%rbp), %eax
 3642 00f8 83E007   		andl	$7, %eax
 3643 00fb BA010000 		movl	$1, %edx
 3643      00
 3644 0100 89C1     		movl	%eax, %ecx
 3645 0102 D3E2     		sall	%cl, %edx
 3646 0104 89D0     		movl	%edx, %eax
 3647 0106 0FB6C0   		movzbl	%al, %eax
 3648 0109 8945EC   		movl	%eax, -20(%rbp)
 3649 010c 488B55A0 		movq	-96(%rbp), %rdx
 3650 0110 8B45E8   		movl	-24(%rbp), %eax
 3651 0113 0FB60402 		movzbl	(%rdx,%rax), %eax
 3652 0117 8B55EC   		movl	-20(%rbp), %edx
 3653 011a 09D0     		orl	%edx, %eax
 3654 011c 89C1     		movl	%eax, %ecx
 3655 011e 488B55A0 		movq	-96(%rbp), %rdx
 3656 0122 8B45E8   		movl	-24(%rbp), %eax
 3657 0125 880C02   		movb	%cl, (%rdx,%rax)
 3658              	.LBE12:
 3659 0128 E9380100 		jmp	.L255
 3659      00
 3660              	.L257:
1221:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1222:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* for %[a-z] */
1223:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             expCh = *fmt++;   /* get end of range */
 3661              		.loc 1 1223 25
 3662 012d 488B45F0 		movq	-16(%rbp), %rax
 3663 0131 488D5001 		leaq	1(%rax), %rdx
 3664 0135 488955F0 		movq	%rdx, -16(%rbp)
 3665              		.loc 1 1223 19
 3666 0139 0FB600   		movzbl	(%rax), %eax
 3667 013c 8845BE   		movb	%al, -66(%rbp)
1224:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (prevChar < expCh) { /* %[a-z] */
 3668              		.loc 1 1224 16
 3669 013f 0FB645BD 		movzbl	-67(%rbp), %eax
 3670 0143 3A45BE   		cmpb	-66(%rbp), %al
 3671 0146 7313     		jnb	.L258
1225:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 last = expCh;
 3672              		.loc 1 1225 22
 3673 0148 0FB645BE 		movzbl	-66(%rbp), %eax
 3674 014c 8845BF   		movb	%al, -65(%rbp)
1226:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
1227:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 prevChar = expCh;
1228:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_WIN_FORMAT))
1229:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* %[z-a] */
1230:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 last = prevChar;
1231:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1232:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1233:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, SECUREC_CHAR('-'));
1234:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
1235:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
1236:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1237:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1238:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* format %[a-\xff] last is 0xFF, condition (rnch <= last) cause dead loop */
1239:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             for (expCh = prevChar; expCh < last; ++expCh) {
 3675              		.loc 1 1239 24
GAS LISTING /tmp/ccLrrfHE.s 			page 95


 3676 014f 0FB645BD 		movzbl	-67(%rbp), %eax
 3677 0153 8845BE   		movb	%al, -66(%rbp)
 3678              		.loc 1 1239 13
 3679 0156 E9BC0000 		jmp	.L260
 3679      00
 3680              	.L258:
1227:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if (defined(SECUREC_COMPATIBLE_WIN_FORMAT))
 3681              		.loc 1 1227 26
 3682 015b 0FB645BE 		movzbl	-66(%rbp), %eax
 3683 015f 8845BD   		movb	%al, -67(%rbp)
 3684              	.LBB13:
1233:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
 3685              		.loc 1 1233 17
 3686 0162 C745C805 		movl	$5, -56(%rbp)
 3686      000000
 3687 0169 C745CC20 		movl	$32, -52(%rbp)
 3687      000000
 3688 0170 488B55A0 		movq	-96(%rbp), %rdx
 3689 0174 8B45C8   		movl	-56(%rbp), %eax
 3690 0177 0FB60402 		movzbl	(%rdx,%rax), %eax
 3691 017b 8B55CC   		movl	-52(%rbp), %edx
 3692 017e 09D0     		orl	%edx, %eax
 3693 0180 89C1     		movl	%eax, %ecx
 3694 0182 488B55A0 		movq	-96(%rbp), %rdx
 3695 0186 8B45C8   		movl	-56(%rbp), %eax
 3696 0189 880C02   		movb	%cl, (%rdx,%rax)
 3697              	.LBE13:
 3698              	.LBB14:
1234:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
 3699              		.loc 1 1234 17
 3700 018c 0FB645BE 		movzbl	-66(%rbp), %eax
 3701 0190 C0E803   		shrb	$3, %al
 3702 0193 0FB6C0   		movzbl	%al, %eax
 3703 0196 8945D0   		movl	%eax, -48(%rbp)
 3704 0199 0FB645BE 		movzbl	-66(%rbp), %eax
 3705 019d 83E007   		andl	$7, %eax
 3706 01a0 BA010000 		movl	$1, %edx
 3706      00
 3707 01a5 89C1     		movl	%eax, %ecx
 3708 01a7 D3E2     		sall	%cl, %edx
 3709 01a9 89D0     		movl	%edx, %eax
 3710 01ab 0FB6C0   		movzbl	%al, %eax
 3711 01ae 8945D4   		movl	%eax, -44(%rbp)
 3712 01b1 488B55A0 		movq	-96(%rbp), %rdx
 3713 01b5 8B45D0   		movl	-48(%rbp), %eax
 3714 01b8 0FB60402 		movzbl	(%rdx,%rax), %eax
 3715 01bc 8B55D4   		movl	-44(%rbp), %edx
 3716 01bf 09D0     		orl	%edx, %eax
 3717 01c1 89C1     		movl	%eax, %ecx
 3718 01c3 488B55A0 		movq	-96(%rbp), %rdx
 3719 01c7 8B45D0   		movl	-48(%rbp), %eax
 3720 01ca 880C02   		movb	%cl, (%rdx,%rax)
 3721              	.LBE14:
1235:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
 3722              		.loc 1 1235 17
 3723 01cd E9930000 		jmp	.L255
 3723      00
GAS LISTING /tmp/ccLrrfHE.s 			page 96


 3724              	.L261:
 3725              	.LBB15:
1240:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
 3726              		.loc 1 1240 17 discriminator 3
 3727 01d2 0FB645BE 		movzbl	-66(%rbp), %eax
 3728 01d6 C0E803   		shrb	$3, %al
 3729 01d9 0FB6C0   		movzbl	%al, %eax
 3730 01dc 8945E0   		movl	%eax, -32(%rbp)
 3731 01df 0FB645BE 		movzbl	-66(%rbp), %eax
 3732 01e3 83E007   		andl	$7, %eax
 3733 01e6 BA010000 		movl	$1, %edx
 3733      00
 3734 01eb 89C1     		movl	%eax, %ecx
 3735 01ed D3E2     		sall	%cl, %edx
 3736 01ef 89D0     		movl	%edx, %eax
 3737 01f1 0FB6C0   		movzbl	%al, %eax
 3738 01f4 8945E4   		movl	%eax, -28(%rbp)
 3739 01f7 488B55A0 		movq	-96(%rbp), %rdx
 3740 01fb 8B45E0   		movl	-32(%rbp), %eax
 3741 01fe 0FB60402 		movzbl	(%rdx,%rax), %eax
 3742 0202 8B55E4   		movl	-28(%rbp), %edx
 3743 0205 09D0     		orl	%edx, %eax
 3744 0207 89C1     		movl	%eax, %ecx
 3745 0209 488B55A0 		movq	-96(%rbp), %rdx
 3746 020d 8B45E0   		movl	-32(%rbp), %eax
 3747 0210 880C02   		movb	%cl, (%rdx,%rax)
 3748              	.LBE15:
1239:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
 3749              		.loc 1 1239 50 discriminator 3
 3750 0213 8045BE01 		addb	$1, -66(%rbp)
 3751              	.L260:
1239:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SECUREC_BRACKET_SET_BIT(bracketTable->table, expCh);
 3752              		.loc 1 1239 13 discriminator 1
 3753 0217 0FB645BE 		movzbl	-66(%rbp), %eax
 3754 021b 3A45BF   		cmpb	-65(%rbp), %al
 3755 021e 72B2     		jb	.L261
 3756              	.LBB16:
1241:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1242:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_BRACKET_SET_BIT(bracketTable->table, last);
 3757              		.loc 1 1242 13
 3758 0220 0FB645BF 		movzbl	-65(%rbp), %eax
 3759 0224 C0E803   		shrb	$3, %al
 3760 0227 0FB6C0   		movzbl	%al, %eax
 3761 022a 8945D8   		movl	%eax, -40(%rbp)
 3762 022d 0FB645BF 		movzbl	-65(%rbp), %eax
 3763 0231 83E007   		andl	$7, %eax
 3764 0234 BA010000 		movl	$1, %edx
 3764      00
 3765 0239 89C1     		movl	%eax, %ecx
 3766 023b D3E2     		sall	%cl, %edx
 3767 023d 89D0     		movl	%edx, %eax
 3768 023f 0FB6C0   		movzbl	%al, %eax
 3769 0242 8945DC   		movl	%eax, -36(%rbp)
 3770 0245 488B55A0 		movq	-96(%rbp), %rdx
 3771 0249 8B45D8   		movl	-40(%rbp), %eax
 3772 024c 0FB60402 		movzbl	(%rdx,%rax), %eax
 3773 0250 8B55DC   		movl	-36(%rbp), %edx
GAS LISTING /tmp/ccLrrfHE.s 			page 97


 3774 0253 09D0     		orl	%edx, %eax
 3775 0255 89C1     		movl	%eax, %ecx
 3776 0257 488B55A0 		movq	-96(%rbp), %rdx
 3777 025b 8B45D8   		movl	-40(%rbp), %eax
 3778 025e 880C02   		movb	%cl, (%rdx,%rax)
 3779              	.LBE16:
1243:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             prevChar = 0;
 3780              		.loc 1 1243 22
 3781 0261 C645BD00 		movb	$0, -67(%rbp)
 3782              	.L255:
1215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         expCh = *fmt++;
 3783              		.loc 1 1215 12
 3784 0265 488B45F0 		movq	-16(%rbp), %rax
 3785 0269 0FB600   		movzbl	(%rax), %eax
1215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         expCh = *fmt++;
 3786              		.loc 1 1215 11
 3787 026c 84C0     		testb	%al, %al
 3788 026e 740F     		je	.L262
1215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         expCh = *fmt++;
 3789              		.loc 1 1215 42 discriminator 1
 3790 0270 488B45F0 		movq	-16(%rbp), %rax
 3791 0274 0FB600   		movzbl	(%rax), %eax
1215:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         expCh = *fmt++;
 3792              		.loc 1 1215 39 discriminator 1
 3793 0277 3C5D     		cmpb	$93, %al
 3794 0279 0F8538FE 		jne	.L263
 3794      FFFF
 3795              	.L262:
1244:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1245:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1246:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *format = fmt;
 3796              		.loc 1 1246 13
 3797 027f 488B45A8 		movq	-88(%rbp), %rax
 3798 0283 488B55F0 		movq	-16(%rbp), %rdx
 3799 0287 488910   		movq	%rdx, (%rax)
1247:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 3800              		.loc 1 1247 12
 3801 028a B8000000 		movl	$0, %eax
 3801      00
 3802              	.L252:
1248:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3803              		.loc 1 1248 1
 3804 028f 488B75F8 		movq	-8(%rbp), %rsi
 3805 0293 64483334 		xorq	%fs:40, %rsi
 3805      25280000 
 3805      00
 3806 029c 7405     		je	.L264
 3807 029e E8000000 		call	__stack_chk_fail@PLT
 3807      00
 3808              	.L264:
 3809 02a3 C9       		leave
 3810              	.LCFI104:
 3811              		.cfi_def_cfa 7, 8
 3812 02a4 C3       		ret
 3813              		.cfi_endproc
 3814              	.LFE40:
 3816              		.section	.text.SecInputForChar,"ax",@progbits
GAS LISTING /tmp/ccLrrfHE.s 			page 98


 3818              	SecInputForChar:
 3819              	.LFB41:
1249:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1250:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1251:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1252:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputForWchar(SecInt ch, SecScanSpec *spec)
1253:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
1254:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     void *endPtr = spec->argPtr;
1255:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->isWChar > 0) {
1256:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(wchar_t UNALIGNED *)endPtr = (wchar_t)ch;
1257:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         endPtr = (wchar_t *)endPtr + 1;
1258:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         --spec->arrayWidth;
1259:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
1260:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_HAVE_WCTOMB
1261:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         int temp;
1262:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         char tmpBuf[SECUREC_MB_LEN + 1];
1263:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_MASK_MSVC_CRT_WARNING temp = wctomb(tmpBuf, (wchar_t)ch);
1264:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_END_MASK_MSVC_CRT_WARNING
1265:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (temp <= 0 || ((size_t)(unsigned int)temp) > sizeof(tmpBuf)) {
1266:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* if wctomb  error, then ignore character */
1267:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return 0;
1268:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1269:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (((size_t)(unsigned int)temp) > spec->arrayWidth) {
1270:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
1271:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1272:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (memcpy_s(endPtr, spec->arrayWidth, tmpBuf, (size_t)(unsigned int)temp) != EOK) {
1273:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
1274:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1275:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         endPtr = (char *)endPtr + temp;
1276:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->arrayWidth -= (size_t)(unsigned int)temp;
1277:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1278:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
1279:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1280:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1281:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->argPtr = endPtr;
1282:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
1283:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
1284:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1285:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1286:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1287:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef SECUREC_FOR_WCHAR
1288:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputForChar(SecInt ch, SecScanSpec *spec, SecFileStream *stream, int *charCount)
1289:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3820              		.loc 1 1289 1
 3821              		.cfi_startproc
 3822 0000 F30F1EFA 		endbr64
 3823 0004 55       		pushq	%rbp
 3824              	.LCFI105:
 3825              		.cfi_def_cfa_offset 16
 3826              		.cfi_offset 6, -16
 3827 0005 4889E5   		movq	%rsp, %rbp
 3828              	.LCFI106:
 3829              		.cfi_def_cfa_register 6
 3830 0008 4883EC50 		subq	$80, %rsp
 3831 000c 897DCC   		movl	%edi, -52(%rbp)
 3832 000f 488975C0 		movq	%rsi, -64(%rbp)
 3833 0013 488955B8 		movq	%rdx, -72(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 99


 3834 0017 48894DB0 		movq	%rcx, -80(%rbp)
 3835              		.loc 1 1289 1
 3836 001b 64488B04 		movq	%fs:40, %rax
 3836      25280000 
 3836      00
 3837 0024 488945F8 		movq	%rax, -8(%rbp)
 3838 0028 31C0     		xorl	%eax, %eax
1290:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     void *endPtr = spec->argPtr;
 3839              		.loc 1 1290 11
 3840 002a 488B45C0 		movq	-64(%rbp), %rax
 3841 002e 488B4020 		movq	32(%rax), %rax
 3842 0032 488945E8 		movq	%rax, -24(%rbp)
1291:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->isWChar > 0) {
 3843              		.loc 1 1291 13
 3844 0036 488B45C0 		movq	-64(%rbp), %rax
 3845 003a 0FB64040 		movzbl	64(%rax), %eax
 3846              		.loc 1 1291 8
 3847 003e 84C0     		testb	%al, %al
 3848 0040 0F8EEA00 		jle	.L266
 3848      0000
 3849              	.LBB17:
1292:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         wchar_t tempWChar = L'?';   /* set default char as ? */
 3850              		.loc 1 1292 17
 3851 0046 C745DC3F 		movl	$63, -36(%rbp)
 3851      000000
1293:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_HAVE_MBTOWC
1294:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         char temp[SECUREC_MULTI_BYTE_MAX_LEN + 1];
1295:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[0] = (char)ch;
 3852              		.loc 1 1295 19
 3853 004d 8B45CC   		movl	-52(%rbp), %eax
 3854              		.loc 1 1295 17
 3855 0050 8845F1   		movb	%al, -15(%rbp)
1296:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         temp[1] = '\0';
 3856              		.loc 1 1296 17
 3857 0053 C645F200 		movb	$0, -14(%rbp)
1297:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_COMPATIBLE_WIN_FORMAT)
1298:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLeadByte(ch)) {
1299:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             temp[1] = (char)SecGetChar(stream, charCount);
1300:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             temp[2] = '\0'; /* 2 of string terminator position */
1301:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1302:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (mbtowc(&tempWChar, temp, sizeof(temp)) <= 0) {
1303:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* no string termination error for tool */
1304:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             tempWChar = L'?';
1305:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1306:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1307:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecIsLeadByte(ch)) {
 3858              		.loc 1 1307 13
 3859 0057 8B45CC   		movl	-52(%rbp), %eax
 3860 005a 89C7     		movl	%eax, %edi
 3861 005c E8000000 		call	SecIsLeadByte
 3861      00
 3862              		.loc 1 1307 12
 3863 0061 85C0     		testl	%eax, %eax
 3864 0063 0F848000 		je	.L267
 3864      0000
 3865              	.LBB18:
1308:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             int convRes = 0;
GAS LISTING /tmp/ccLrrfHE.s 			page 100


 3866              		.loc 1 1308 17
 3867 0069 C745E000 		movl	$0, -32(%rbp)
 3867      000000
1309:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             int di = 1;
 3868              		.loc 1 1309 17
 3869 0070 C745E401 		movl	$1, -28(%rbp)
 3869      000000
1310:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* in Linux like system, the string is encoded in UTF-8 */
1311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             while (convRes <= 0 && di < (int)MB_CUR_MAX && di < SECUREC_MULTI_BYTE_MAX_LEN) {
 3870              		.loc 1 1311 19
 3871 0077 EB4B     		jmp	.L268
 3872              	.L270:
1312:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di++] = (char)SecGetChar(stream, charCount);
 3873              		.loc 1 1312 36
 3874 0079 488B55B0 		movq	-80(%rbp), %rdx
 3875 007d 488B45B8 		movq	-72(%rbp), %rax
 3876 0081 4889D6   		movq	%rdx, %rsi
 3877 0084 4889C7   		movq	%rax, %rdi
 3878 0087 E8000000 		call	SecGetChar
 3878      00
 3879 008c 89C1     		movl	%eax, %ecx
 3880              		.loc 1 1312 24
 3881 008e 8B45E4   		movl	-28(%rbp), %eax
 3882 0091 8D5001   		leal	1(%rax), %edx
 3883 0094 8955E4   		movl	%edx, -28(%rbp)
 3884              		.loc 1 1312 30
 3885 0097 89CA     		movl	%ecx, %edx
 3886              		.loc 1 1312 28
 3887 0099 4898     		cltq
 3888 009b 885405F1 		movb	%dl, -15(%rbp,%rax)
1313:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di] = '\0';
 3889              		.loc 1 1313 26
 3890 009f 8B45E4   		movl	-28(%rbp), %eax
 3891 00a2 4898     		cltq
 3892 00a4 C64405F1 		movb	$0, -15(%rbp,%rax)
 3892      00
1314:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 convRes = mbtowc(&tempWChar, temp, sizeof(temp));
 3893              		.loc 1 1314 27
 3894 00a9 488D4DF1 		leaq	-15(%rbp), %rcx
 3895 00ad 488D45DC 		leaq	-36(%rbp), %rax
 3896 00b1 BA070000 		movl	$7, %edx
 3896      00
 3897 00b6 4889CE   		movq	%rcx, %rsi
 3898 00b9 4889C7   		movq	%rax, %rdi
 3899 00bc E8000000 		call	mbtowc@PLT
 3899      00
 3900 00c1 8945E0   		movl	%eax, -32(%rbp)
 3901              	.L268:
1311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di++] = (char)SecGetChar(stream, charCount);
 3902              		.loc 1 1311 19
 3903 00c4 837DE000 		cmpl	$0, -32(%rbp)
 3904 00c8 7F10     		jg	.L269
1311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di++] = (char)SecGetChar(stream, charCount);
 3905              		.loc 1 1311 46 discriminator 1
 3906 00ca E8000000 		call	__ctype_get_mb_cur_max@PLT
 3906      00
1311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di++] = (char)SecGetChar(stream, charCount);
GAS LISTING /tmp/ccLrrfHE.s 			page 101


 3907              		.loc 1 1311 33 discriminator 1
 3908 00cf 3945E4   		cmpl	%eax, -28(%rbp)
 3909 00d2 7D06     		jge	.L269
1311:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 temp[di++] = (char)SecGetChar(stream, charCount);
 3910              		.loc 1 1311 57 discriminator 2
 3911 00d4 837DE405 		cmpl	$5, -28(%rbp)
 3912 00d8 7E9F     		jle	.L270
 3913              	.L269:
1315:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1316:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (convRes <= 0) {
 3914              		.loc 1 1316 16
 3915 00da 837DE000 		cmpl	$0, -32(%rbp)
 3916 00de 7F2C     		jg	.L271
1317:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 tempWChar = L'?';
 3917              		.loc 1 1317 27
 3918 00e0 C745DC3F 		movl	$63, -36(%rbp)
 3918      000000
 3919 00e7 EB23     		jmp	.L271
 3920              	.L267:
 3921              	.LBE18:
1318:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1319:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1320:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (mbtowc(&tempWChar, temp, sizeof(temp)) <= 0) {
 3922              		.loc 1 1320 17
 3923 00e9 488D4DF1 		leaq	-15(%rbp), %rcx
 3924 00ed 488D45DC 		leaq	-36(%rbp), %rax
 3925 00f1 BA070000 		movl	$7, %edx
 3925      00
 3926 00f6 4889CE   		movq	%rcx, %rsi
 3927 00f9 4889C7   		movq	%rax, %rdi
 3928 00fc E8000000 		call	mbtowc@PLT
 3928      00
 3929              		.loc 1 1320 16
 3930 0101 85C0     		testl	%eax, %eax
 3931 0103 7F07     		jg	.L271
1321:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* no string termination error for tool */
1322:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 tempWChar = L'?';
 3932              		.loc 1 1322 27
 3933 0105 C745DC3F 		movl	$63, -36(%rbp)
 3933      000000
 3934              	.L271:
1323:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1324:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1325:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1326:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif /* SECUREC_HAVE_MBTOWC */
1327:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(wchar_t UNALIGNED *)endPtr = tempWChar;
 3935              		.loc 1 1327 38 discriminator 1
 3936 010c 8B55DC   		movl	-36(%rbp), %edx
 3937 010f 488B45E8 		movq	-24(%rbp), %rax
 3938 0113 8910     		movl	%edx, (%rax)
1328:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* just copy L'?' if mbtowc fails, errno is set by mbtowc */
1329:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         endPtr = (wchar_t *)endPtr + 1;
 3939              		.loc 1 1329 16 discriminator 1
 3940 0115 488345E8 		addq	$4, -24(%rbp)
 3940      04
1330:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         --spec->arrayWidth;
 3941              		.loc 1 1330 15 discriminator 1
GAS LISTING /tmp/ccLrrfHE.s 			page 102


 3942 011a 488B45C0 		movq	-64(%rbp), %rax
 3943 011e 488B4028 		movq	40(%rax), %rax
 3944              		.loc 1 1330 9 discriminator 1
 3945 0122 488D50FF 		leaq	-1(%rax), %rdx
 3946 0126 488B45C0 		movq	-64(%rbp), %rax
 3947 012a 48895028 		movq	%rdx, 40(%rax)
 3948              	.LBE17:
 3949 012e EB24     		jmp	.L272
 3950              	.L266:
1331:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)charCount;
1332:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)stream;
1333:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
1334:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *(char *)endPtr = (char)ch;
 3951              		.loc 1 1334 27
 3952 0130 8B45CC   		movl	-52(%rbp), %eax
 3953 0133 89C2     		movl	%eax, %edx
 3954              		.loc 1 1334 25
 3955 0135 488B45E8 		movq	-24(%rbp), %rax
 3956 0139 8810     		movb	%dl, (%rax)
1335:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         endPtr = (char *)endPtr + 1;
 3957              		.loc 1 1335 16
 3958 013b 488345E8 		addq	$1, -24(%rbp)
 3958      01
1336:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         --spec->arrayWidth;
 3959              		.loc 1 1336 15
 3960 0140 488B45C0 		movq	-64(%rbp), %rax
 3961 0144 488B4028 		movq	40(%rax), %rax
 3962              		.loc 1 1336 9
 3963 0148 488D50FF 		leaq	-1(%rax), %rdx
 3964 014c 488B45C0 		movq	-64(%rbp), %rax
 3965 0150 48895028 		movq	%rdx, 40(%rax)
 3966              	.L272:
1337:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1338:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     spec->argPtr = endPtr;
 3967              		.loc 1 1338 18
 3968 0154 488B45C0 		movq	-64(%rbp), %rax
 3969 0158 488B55E8 		movq	-24(%rbp), %rdx
 3970 015c 48895020 		movq	%rdx, 32(%rax)
1339:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 3971              		.loc 1 1339 12
 3972 0160 B8000000 		movl	$0, %eax
 3972      00
1340:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 3973              		.loc 1 1340 1
 3974 0165 488B75F8 		movq	-8(%rbp), %rsi
 3975 0169 64483334 		xorq	%fs:40, %rsi
 3975      25280000 
 3975      00
 3976 0172 7405     		je	.L274
 3977 0174 E8000000 		call	__stack_chk_fail@PLT
 3977      00
 3978              	.L274:
 3979 0179 C9       		leave
 3980              	.LCFI107:
 3981              		.cfi_def_cfa 7, 8
 3982 017a C3       		ret
 3983              		.cfi_endproc
GAS LISTING /tmp/ccLrrfHE.s 			page 103


 3984              	.LFE41:
 3986              		.section	.text.SecInitFloatSpec,"ax",@progbits
 3988              	SecInitFloatSpec:
 3989              	.LFB42:
1341:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1342:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1343:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1344:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
1345:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1346:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /* no not use localeconv()->decimal_pointif  onlay support  '.' */
1347:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #define SECURE_IS_FLOAT_DECIMAL(ch) ((ch) == SECUREC_CHAR('.'))
1348:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1349:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * init SecFloatSpec befor parse format
1350:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1351:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecInitFloatSpec(SecFloatSpec *floatSpec)
1352:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 3990              		.loc 1 1352 1
 3991              		.cfi_startproc
 3992 0000 F30F1EFA 		endbr64
 3993 0004 55       		pushq	%rbp
 3994              	.LCFI108:
 3995              		.cfi_def_cfa_offset 16
 3996              		.cfi_offset 6, -16
 3997 0005 4889E5   		movq	%rsp, %rbp
 3998              	.LCFI109:
 3999              		.cfi_def_cfa_register 6
 4000 0008 4883EC20 		subq	$32, %rsp
 4001 000c 48897DE8 		movq	%rdi, -24(%rbp)
 4002              		.loc 1 1352 1
 4003 0010 64488B04 		movq	%fs:40, %rax
 4003      25280000 
 4003      00
 4004 0019 488945F8 		movq	%rax, -8(%rbp)
 4005 001d 31C0     		xorl	%eax, %eax
1353:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStr = floatSpec->buffer;
 4006              		.loc 1 1353 27
 4007 001f 488B45E8 		movq	-24(%rbp), %rax
 4008 0023 488D5010 		leaq	16(%rax), %rdx
 4009              		.loc 1 1353 25
 4010 0027 488B45E8 		movq	-24(%rbp), %rax
 4011 002b 48899070 		movq	%rdx, 368(%rax)
 4011      010000
1354:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->allocatedFloatStr = NULL;
 4012              		.loc 1 1354 34
 4013 0032 488B45E8 		movq	-24(%rbp), %rax
 4014 0036 48C78078 		movq	$0, 376(%rax)
 4014      01000000 
 4014      000000
1355:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStrSize = sizeof(floatSpec->buffer) / sizeof(floatSpec->buffer[0]);
 4015              		.loc 1 1355 29
 4016 0041 488B45E8 		movq	-24(%rbp), %rax
 4017 0045 48C7005E 		movq	$350, (%rax)
 4017      010000
1356:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStr = floatSpec->buffer;
 4018              		.loc 1 1356 27
 4019 004c 488B45E8 		movq	-24(%rbp), %rax
 4020 0050 488D5010 		leaq	16(%rax), %rdx
GAS LISTING /tmp/ccLrrfHE.s 			page 104


 4021              		.loc 1 1356 25
 4022 0054 488B45E8 		movq	-24(%rbp), %rax
 4023 0058 48899070 		movq	%rdx, 368(%rax)
 4023      010000
1357:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStrUsedLen = 0;
 4024              		.loc 1 1357 32
 4025 005f 488B45E8 		movq	-24(%rbp), %rax
 4026 0063 48C74008 		movq	$0, 8(%rax)
 4026      00000000 
1358:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4027              		.loc 1 1358 1
 4028 006b 90       		nop
 4029 006c 488B45F8 		movq	-8(%rbp), %rax
 4030 0070 64483304 		xorq	%fs:40, %rax
 4030      25280000 
 4030      00
 4031 0079 7405     		je	.L276
 4032 007b E8000000 		call	__stack_chk_fail@PLT
 4032      00
 4033              	.L276:
 4034 0080 C9       		leave
 4035              	.LCFI110:
 4036              		.cfi_def_cfa 7, 8
 4037 0081 C3       		ret
 4038              		.cfi_endproc
 4039              	.LFE42:
 4041              		.section	.text.SecClearFloatSpec,"ax",@progbits
 4043              	SecClearFloatSpec:
 4044              	.LFB43:
1359:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1360:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecClearFloatSpec(SecFloatSpec *floatSpec, int *doneCount)
1361:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4045              		.loc 1 1361 1
 4046              		.cfi_startproc
 4047 0000 F30F1EFA 		endbr64
 4048 0004 55       		pushq	%rbp
 4049              	.LCFI111:
 4050              		.cfi_def_cfa_offset 16
 4051              		.cfi_offset 6, -16
 4052 0005 4889E5   		movq	%rsp, %rbp
 4053              	.LCFI112:
 4054              		.cfi_def_cfa_register 6
 4055 0008 4883EC20 		subq	$32, %rsp
 4056 000c 48897DE8 		movq	%rdi, -24(%rbp)
 4057 0010 488975E0 		movq	%rsi, -32(%rbp)
 4058              		.loc 1 1361 1
 4059 0014 64488B04 		movq	%fs:40, %rax
 4059      25280000 
 4059      00
 4060 001d 488945F8 		movq	%rax, -8(%rbp)
 4061 0021 31C0     		xorl	%eax, %eax
1362:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****      /* LSD 2014.3.6 add, clear the stack data */
1363:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (memset_s(floatSpec->buffer, sizeof(floatSpec->buffer), 0,
 4062              		.loc 1 1363 27
 4063 0023 488B45E8 		movq	-24(%rbp), %rax
 4064 0027 4883C010 		addq	$16, %rax
 4065              		.loc 1 1363 9
GAS LISTING /tmp/ccLrrfHE.s 			page 105


 4066 002b B95E0100 		movl	$350, %ecx
 4066      00
 4067 0030 BA000000 		movl	$0, %edx
 4067      00
 4068 0035 BE5E0100 		movl	$350, %esi
 4068      00
 4069 003a 4889C7   		movq	%rax, %rdi
 4070 003d E8000000 		call	memset_s@PLT
 4070      00
 4071              		.loc 1 1363 8
 4072 0042 85C0     		testl	%eax, %eax
 4073 0044 740A     		je	.L278
1364:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         sizeof(floatSpec->buffer)) != EOK) {
1365:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *doneCount = 0;  /* This is a dead code, just to meet the coding requirements */
 4074              		.loc 1 1365 20
 4075 0046 488B45E0 		movq	-32(%rbp), %rax
 4076 004a C7000000 		movl	$0, (%rax)
 4076      0000
 4077              	.L278:
1366:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1367:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (floatSpec->allocatedFloatStr != NULL) {
 4078              		.loc 1 1367 18
 4079 0050 488B45E8 		movq	-24(%rbp), %rax
 4080 0054 488B8078 		movq	376(%rax), %rax
 4080      010000
 4081              		.loc 1 1367 8
 4082 005b 4885C0   		testq	%rax, %rax
 4083 005e 7468     		je	.L282
1368:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* pFloatStr can be alloced in SecUpdateFloatString function, clear and free it */
1369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (memset_s(floatSpec->allocatedFloatStr, floatSpec->floatStrSize * sizeof(SecChar), 0,
1370:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize * sizeof(SecChar)) != EOK) {
 4084              		.loc 1 1370 22
 4085 0060 488B45E8 		movq	-24(%rbp), %rax
 4086 0064 488B10   		movq	(%rax), %rdx
1369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize * sizeof(SecChar)) != EOK) {
 4087              		.loc 1 1369 61
 4088 0067 488B45E8 		movq	-24(%rbp), %rax
 4089 006b 488B30   		movq	(%rax), %rsi
1369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize * sizeof(SecChar)) != EOK) {
 4090              		.loc 1 1369 31
 4091 006e 488B45E8 		movq	-24(%rbp), %rax
 4092 0072 488B8078 		movq	376(%rax), %rax
 4092      010000
1369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize * sizeof(SecChar)) != EOK) {
 4093              		.loc 1 1369 13
 4094 0079 4889D1   		movq	%rdx, %rcx
 4095 007c BA000000 		movl	$0, %edx
 4095      00
 4096 0081 4889C7   		movq	%rax, %rdi
 4097 0084 E8000000 		call	memset_s@PLT
 4097      00
1369:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             floatSpec->floatStrSize * sizeof(SecChar)) != EOK) {
 4098              		.loc 1 1369 12
 4099 0089 85C0     		testl	%eax, %eax
 4100 008b 740A     		je	.L280
1371:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             *doneCount = 0; /* This is a dead code, just to meet the coding requirements */
 4101              		.loc 1 1371 24
GAS LISTING /tmp/ccLrrfHE.s 			page 106


 4102 008d 488B45E0 		movq	-32(%rbp), %rax
 4103 0091 C7000000 		movl	$0, (%rax)
 4103      0000
 4104              	.L280:
1372:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1373:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_FREE(floatSpec->allocatedFloatStr);
 4105              		.loc 1 1373 9
 4106 0097 488B45E8 		movq	-24(%rbp), %rax
 4107 009b 488B8078 		movq	376(%rax), %rax
 4107      010000
 4108 00a2 4889C7   		movq	%rax, %rdi
 4109 00a5 E8000000 		call	free@PLT
 4109      00
1374:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->allocatedFloatStr = NULL;
 4110              		.loc 1 1374 38
 4111 00aa 488B45E8 		movq	-24(%rbp), %rax
 4112 00ae 48C78078 		movq	$0, 376(%rax)
 4112      01000000 
 4112      000000
1375:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->floatStr = NULL;
 4113              		.loc 1 1375 29
 4114 00b9 488B45E8 		movq	-24(%rbp), %rax
 4115 00bd 48C78070 		movq	$0, 368(%rax)
 4115      01000000 
 4115      000000
 4116              	.L282:
1376:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1377:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4117              		.loc 1 1377 1
 4118 00c8 90       		nop
 4119 00c9 488B45F8 		movq	-8(%rbp), %rax
 4120 00cd 64483304 		xorq	%fs:40, %rax
 4120      25280000 
 4120      00
 4121 00d6 7405     		je	.L281
 4122 00d8 E8000000 		call	__stack_chk_fail@PLT
 4122      00
 4123              	.L281:
 4124 00dd C9       		leave
 4125              	.LCFI113:
 4126              		.cfi_def_cfa 7, 8
 4127 00de C3       		ret
 4128              		.cfi_endproc
 4129              	.LFE43:
 4131              		.section	.text.SecInputFloatE,"ax",@progbits
 4133              	SecInputFloatE:
 4134              	.LFB44:
1378:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1379:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1380:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1381:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * scan value of exponent.
1382:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1383:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1384:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputFloatE(SecFileStream *stream, SecScanSpec *spec, SecFloatSpec *floatSpec, int *c
1385:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4135              		.loc 1 1385 1
 4136              		.cfi_startproc
GAS LISTING /tmp/ccLrrfHE.s 			page 107


 4137 0000 F30F1EFA 		endbr64
 4138 0004 55       		pushq	%rbp
 4139              	.LCFI114:
 4140              		.cfi_def_cfa_offset 16
 4141              		.cfi_offset 6, -16
 4142 0005 4889E5   		movq	%rsp, %rbp
 4143              	.LCFI115:
 4144              		.cfi_def_cfa_register 6
 4145 0008 4883EC30 		subq	$48, %rsp
 4146 000c 48897DE8 		movq	%rdi, -24(%rbp)
 4147 0010 488975E0 		movq	%rsi, -32(%rbp)
 4148 0014 488955D8 		movq	%rdx, -40(%rbp)
 4149 0018 48894DD0 		movq	%rcx, -48(%rbp)
 4150              		.loc 1 1385 1
 4151 001c 64488B04 		movq	%fs:40, %rax
 4151      25280000 
 4151      00
 4152 0025 488945F8 		movq	%rax, -8(%rbp)
 4153 0029 31C0     		xorl	%eax, %eax
1386:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = SecGetChar(stream, charCount);
 4154              		.loc 1 1386 17
 4155 002b 488B55D0 		movq	-48(%rbp), %rdx
 4156 002f 488B45E8 		movq	-24(%rbp), %rax
 4157 0033 4889D6   		movq	%rdx, %rsi
 4158 0036 4889C7   		movq	%rax, %rdi
 4159 0039 E8000000 		call	SecGetChar
 4159      00
 4160 003e 8945F4   		movl	%eax, -12(%rbp)
1387:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch == SECUREC_CHAR('+') || ch == SECUREC_CHAR('-')) {
 4161              		.loc 1 1387 8
 4162 0041 837DF42B 		cmpl	$43, -12(%rbp)
 4163 0045 740A     		je	.L284
 4164              		.loc 1 1387 33 discriminator 1
 4165 0047 837DF42D 		cmpl	$45, -12(%rbp)
 4166 004b 0F858E00 		jne	.L288
 4166      0000
 4167              	.L284:
1388:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (ch == SECUREC_CHAR('-') && SecUpdateFloatString((SecChar)'-', floatSpec) != 0) {
 4168              		.loc 1 1388 12
 4169 0051 837DF42D 		cmpl	$45, -12(%rbp)
 4170 0055 751F     		jne	.L286
 4171              		.loc 1 1388 40 discriminator 1
 4172 0057 488B45D8 		movq	-40(%rbp), %rax
 4173 005b 4889C6   		movq	%rax, %rsi
 4174 005e BF2D0000 		movl	$45, %edi
 4174      00
 4175 0063 E8000000 		call	SecUpdateFloatString
 4175      00
 4176              		.loc 1 1388 37 discriminator 1
 4177 0068 85C0     		testl	%eax, %eax
 4178 006a 740A     		je	.L286
1389:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4179              		.loc 1 1389 20
 4180 006c B8FFFFFF 		movl	$-1, %eax
 4180      FF
 4181 0071 E9A60000 		jmp	.L287
 4181      00
GAS LISTING /tmp/ccLrrfHE.s 			page 108


 4182              	.L286:
1390:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1391:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->width != 0) {
 4183              		.loc 1 1391 17
 4184 0076 488B45E0 		movq	-32(%rbp), %rax
 4185 007a 8B4030   		movl	48(%rax), %eax
 4186              		.loc 1 1391 12
 4187 007d 85C0     		testl	%eax, %eax
 4188 007f 745E     		je	.L288
1392:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SecGetChar(stream, charCount);
 4189              		.loc 1 1392 18
 4190 0081 488B55D0 		movq	-48(%rbp), %rdx
 4191 0085 488B45E8 		movq	-24(%rbp), %rax
 4192 0089 4889D6   		movq	%rdx, %rsi
 4193 008c 4889C7   		movq	%rax, %rdi
 4194 008f E8000000 		call	SecGetChar
 4194      00
 4195 0094 8945F4   		movl	%eax, -12(%rbp)
1393:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             --spec->width;
 4196              		.loc 1 1393 19
 4197 0097 488B45E0 		movq	-32(%rbp), %rax
 4198 009b 8B4030   		movl	48(%rax), %eax
 4199              		.loc 1 1393 13
 4200 009e 8D50FF   		leal	-1(%rax), %edx
 4201 00a1 488B45E0 		movq	-32(%rbp), %rax
 4202 00a5 895030   		movl	%edx, 48(%rax)
1394:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1395:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1396:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_DIGIT(ch) && spec->width-- != 0) {
 4203              		.loc 1 1397 11
 4204 00a8 EB35     		jmp	.L288
 4205              	.L291:
1398:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4206              		.loc 1 1398 34
 4207 00aa 8B45F4   		movl	-12(%rbp), %eax
 4208              		.loc 1 1398 13
 4209 00ad 0FBEC0   		movsbl	%al, %eax
 4210 00b0 488B55D8 		movq	-40(%rbp), %rdx
 4211 00b4 4889D6   		movq	%rdx, %rsi
 4212 00b7 89C7     		movl	%eax, %edi
 4213 00b9 E8000000 		call	SecUpdateFloatString
 4213      00
 4214              		.loc 1 1398 12
 4215 00be 85C0     		testl	%eax, %eax
 4216 00c0 7407     		je	.L289
1399:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4217              		.loc 1 1399 20
 4218 00c2 B8FFFFFF 		movl	$-1, %eax
 4218      FF
 4219 00c7 EB53     		jmp	.L287
 4220              	.L289:
1400:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1401:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4221              		.loc 1 1401 14
 4222 00c9 488B55D0 		movq	-48(%rbp), %rdx
 4223 00cd 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 109


 4224 00d1 4889D6   		movq	%rdx, %rsi
 4225 00d4 4889C7   		movq	%rax, %rdi
 4226 00d7 E8000000 		call	SecGetChar
 4226      00
 4227 00dc 8945F4   		movl	%eax, -12(%rbp)
 4228              	.L288:
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4229              		.loc 1 1397 12
 4230 00df E8000000 		call	__ctype_b_loc@PLT
 4230      00
 4231 00e4 488B00   		movq	(%rax), %rax
 4232 00e7 8B55F4   		movl	-12(%rbp), %edx
 4233 00ea 0FB6D2   		movzbl	%dl, %edx
 4234 00ed 4801D2   		addq	%rdx, %rdx
 4235 00f0 4801D0   		addq	%rdx, %rax
 4236 00f3 0FB700   		movzwl	(%rax), %eax
 4237 00f6 0FB7C0   		movzwl	%ax, %eax
 4238 00f9 25000800 		andl	$2048, %eax
 4238      00
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4239              		.loc 1 1397 11
 4240 00fe 85C0     		testl	%eax, %eax
 4241 0100 7415     		je	.L290
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4242              		.loc 1 1397 40 discriminator 1
 4243 0102 488B45E0 		movq	-32(%rbp), %rax
 4244 0106 8B4030   		movl	48(%rax), %eax
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4245              		.loc 1 1397 47 discriminator 1
 4246 0109 8D48FF   		leal	-1(%rax), %ecx
 4247 010c 488B55E0 		movq	-32(%rbp), %rdx
 4248 0110 894A30   		movl	%ecx, 48(%rdx)
1397:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4249              		.loc 1 1397 33 discriminator 1
 4250 0113 85C0     		testl	%eax, %eax
 4251 0115 7593     		jne	.L291
 4252              	.L290:
1402:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1403:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 4253              		.loc 1 1403 12
 4254 0117 B8000000 		movl	$0, %eax
 4254      00
 4255              	.L287:
1404:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4256              		.loc 1 1404 1
 4257 011c 488B4DF8 		movq	-8(%rbp), %rcx
 4258 0120 6448330C 		xorq	%fs:40, %rcx
 4258      25280000 
 4258      00
 4259 0129 7405     		je	.L292
 4260 012b E8000000 		call	__stack_chk_fail@PLT
 4260      00
 4261              	.L292:
 4262 0130 C9       		leave
 4263              	.LCFI116:
 4264              		.cfi_def_cfa 7, 8
 4265 0131 C3       		ret
GAS LISTING /tmp/ccLrrfHE.s 			page 110


 4266              		.cfi_endproc
 4267              	.LFE44:
 4269              		.section	.text.SecInputFloat,"ax",@progbits
 4271              	SecInputFloat:
 4272              	.LFB45:
1405:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1406:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1407:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * scan %f.
1408:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1409:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1410:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputFloat(SecFileStream *stream, SecScanSpec *spec, SecFloatSpec *floatSpec, int *ch
1411:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4273              		.loc 1 1411 1
 4274              		.cfi_startproc
 4275 0000 F30F1EFA 		endbr64
 4276 0004 55       		pushq	%rbp
 4277              	.LCFI117:
 4278              		.cfi_def_cfa_offset 16
 4279              		.cfi_offset 6, -16
 4280 0005 4889E5   		movq	%rsp, %rbp
 4281              	.LCFI118:
 4282              		.cfi_def_cfa_register 6
 4283 0008 4883EC30 		subq	$48, %rsp
 4284 000c 48897DE8 		movq	%rdi, -24(%rbp)
 4285 0010 488975E0 		movq	%rsi, -32(%rbp)
 4286 0014 488955D8 		movq	%rdx, -40(%rbp)
 4287 0018 48894DD0 		movq	%rcx, -48(%rbp)
 4288              		.loc 1 1411 1
 4289 001c 64488B04 		movq	%fs:40, %rax
 4289      25280000 
 4289      00
 4290 0025 488945F8 		movq	%rax, -8(%rbp)
 4291 0029 31C0     		xorl	%eax, %eax
1412:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int started = -1;
 4292              		.loc 1 1412 9
 4293 002b C745F0FF 		movl	$-1, -16(%rbp)
 4293      FFFFFF
1413:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = SecGetChar(stream, charCount);
 4294              		.loc 1 1413 17
 4295 0032 488B55D0 		movq	-48(%rbp), %rdx
 4296 0036 488B45E8 		movq	-24(%rbp), %rax
 4297 003a 4889D6   		movq	%rdx, %rsi
 4298 003d 4889C7   		movq	%rax, %rdi
 4299 0040 E8000000 		call	SecGetChar
 4299      00
 4300 0045 8945F4   		movl	%eax, -12(%rbp)
1414:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1415:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStrUsedLen = 0;
 4301              		.loc 1 1415 32
 4302 0048 488B45D8 		movq	-40(%rbp), %rax
 4303 004c 48C74008 		movq	$0, 8(%rax)
 4303      00000000 
1416:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch == SECUREC_CHAR('-')) {
 4304              		.loc 1 1416 8
 4305 0054 837DF42D 		cmpl	$45, -12(%rbp)
 4306 0058 754E     		jne	.L294
1417:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         floatSpec->floatStr[floatSpec->floatStrUsedLen++] = SECUREC_CHAR('-');
GAS LISTING /tmp/ccLrrfHE.s 			page 111


 4307              		.loc 1 1417 18
 4308 005a 488B45D8 		movq	-40(%rbp), %rax
 4309 005e 488BB070 		movq	368(%rax), %rsi
 4309      010000
 4310              		.loc 1 1417 38
 4311 0065 488B45D8 		movq	-40(%rbp), %rax
 4312 0069 488B4008 		movq	8(%rax), %rax
 4313              		.loc 1 1417 55
 4314 006d 488D4801 		leaq	1(%rax), %rcx
 4315 0071 488B55D8 		movq	-40(%rbp), %rdx
 4316 0075 48894A08 		movq	%rcx, 8(%rdx)
 4317              		.loc 1 1417 28
 4318 0079 4801F0   		addq	%rsi, %rax
 4319              		.loc 1 1417 59
 4320 007c C6002D   		movb	$45, (%rax)
1418:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         --spec->width;
 4321              		.loc 1 1418 15
 4322 007f 488B45E0 		movq	-32(%rbp), %rax
 4323 0083 8B4030   		movl	48(%rax), %eax
 4324              		.loc 1 1418 9
 4325 0086 8D50FF   		leal	-1(%rax), %edx
 4326 0089 488B45E0 		movq	-32(%rbp), %rax
 4327 008d 895030   		movl	%edx, 48(%rax)
1419:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4328              		.loc 1 1419 14
 4329 0090 488B55D0 		movq	-48(%rbp), %rdx
 4330 0094 488B45E8 		movq	-24(%rbp), %rax
 4331 0098 4889D6   		movq	%rdx, %rsi
 4332 009b 4889C7   		movq	%rax, %rdi
 4333 009e E8000000 		call	SecGetChar
 4333      00
 4334 00a3 8945F4   		movl	%eax, -12(%rbp)
 4335 00a6 EB2D     		jmp	.L295
 4336              	.L294:
1420:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if (ch == SECUREC_CHAR('+')) {
 4337              		.loc 1 1420 15
 4338 00a8 837DF42B 		cmpl	$43, -12(%rbp)
 4339 00ac 7527     		jne	.L295
1421:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         --spec->width;
 4340              		.loc 1 1421 15
 4341 00ae 488B45E0 		movq	-32(%rbp), %rax
 4342 00b2 8B4030   		movl	48(%rax), %eax
 4343              		.loc 1 1421 9
 4344 00b5 8D50FF   		leal	-1(%rax), %edx
 4345 00b8 488B45E0 		movq	-32(%rbp), %rax
 4346 00bc 895030   		movl	%edx, 48(%rax)
1422:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4347              		.loc 1 1422 14
 4348 00bf 488B55D0 		movq	-48(%rbp), %rdx
 4349 00c3 488B45E8 		movq	-24(%rbp), %rax
 4350 00c7 4889D6   		movq	%rdx, %rsi
 4351 00ca 4889C7   		movq	%rax, %rdi
 4352 00cd E8000000 		call	SecGetChar
 4352      00
 4353 00d2 8945F4   		movl	%eax, -12(%rbp)
 4354              	.L295:
1423:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
GAS LISTING /tmp/ccLrrfHE.s 			page 112


1424:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1425:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->widthSet == 0) {    /* must care width */
 4355              		.loc 1 1425 13
 4356 00d5 488B45E0 		movq	-32(%rbp), %rax
 4357 00d9 8B4034   		movl	52(%rax), %eax
 4358              		.loc 1 1425 8
 4359 00dc 85C0     		testl	%eax, %eax
 4360 00de 754C     		jne	.L297
1426:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->width = -1; /* -1 is unlimited */
 4361              		.loc 1 1426 21
 4362 00e0 488B45E0 		movq	-32(%rbp), %rax
 4363 00e4 C74030FF 		movl	$-1, 48(%rax)
 4363      FFFFFF
1427:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1428:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1429:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* now get integral part */
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (SECUREC_IS_DIGIT(ch) && spec->width-- != 0) {
 4364              		.loc 1 1430 11
 4365 00eb EB3F     		jmp	.L297
 4366              	.L301:
1431:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
 4367              		.loc 1 1431 17
 4368 00ed C745F000 		movl	$0, -16(%rbp)
 4368      000000
1432:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* ch must be '0' - '9' */
1433:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4369              		.loc 1 1433 34
 4370 00f4 8B45F4   		movl	-12(%rbp), %eax
 4371              		.loc 1 1433 13
 4372 00f7 0FBEC0   		movsbl	%al, %eax
 4373 00fa 488B55D8 		movq	-40(%rbp), %rdx
 4374 00fe 4889D6   		movq	%rdx, %rsi
 4375 0101 89C7     		movl	%eax, %edi
 4376 0103 E8000000 		call	SecUpdateFloatString
 4376      00
 4377              		.loc 1 1433 12
 4378 0108 85C0     		testl	%eax, %eax
 4379 010a 740A     		je	.L298
1434:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4380              		.loc 1 1434 20
 4381 010c B8FFFFFF 		movl	$-1, %eax
 4381      FF
 4382 0111 E9BA0100 		jmp	.L299
 4382      00
 4383              	.L298:
1435:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1436:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4384              		.loc 1 1436 14
 4385 0116 488B55D0 		movq	-48(%rbp), %rdx
 4386 011a 488B45E8 		movq	-24(%rbp), %rax
 4387 011e 4889D6   		movq	%rdx, %rsi
 4388 0121 4889C7   		movq	%rax, %rdi
 4389 0124 E8000000 		call	SecGetChar
 4389      00
 4390 0129 8945F4   		movl	%eax, -12(%rbp)
 4391              	.L297:
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
GAS LISTING /tmp/ccLrrfHE.s 			page 113


 4392              		.loc 1 1430 12
 4393 012c E8000000 		call	__ctype_b_loc@PLT
 4393      00
 4394 0131 488B00   		movq	(%rax), %rax
 4395 0134 8B55F4   		movl	-12(%rbp), %edx
 4396 0137 0FB6D2   		movzbl	%dl, %edx
 4397 013a 4801D2   		addq	%rdx, %rdx
 4398 013d 4801D0   		addq	%rdx, %rax
 4399 0140 0FB700   		movzwl	(%rax), %eax
 4400 0143 0FB7C0   		movzwl	%ax, %eax
 4401 0146 25000800 		andl	$2048, %eax
 4401      00
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
 4402              		.loc 1 1430 11
 4403 014b 85C0     		testl	%eax, %eax
 4404 014d 7415     		je	.L300
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
 4405              		.loc 1 1430 40 discriminator 1
 4406 014f 488B45E0 		movq	-32(%rbp), %rax
 4407 0153 8B4030   		movl	48(%rax), %eax
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
 4408              		.loc 1 1430 47 discriminator 1
 4409 0156 8D48FF   		leal	-1(%rax), %ecx
 4410 0159 488B55E0 		movq	-32(%rbp), %rdx
 4411 015d 894A30   		movl	%ecx, 48(%rdx)
1430:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         started = 0;
 4412              		.loc 1 1430 33 discriminator 1
 4413 0160 85C0     		testl	%eax, %eax
 4414 0162 7589     		jne	.L301
 4415              	.L300:
1437:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1438:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1439:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* now get fractional part */
1440:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (SECURE_IS_FLOAT_DECIMAL((SecChar)ch) && spec->width-- != 0) {
 4416              		.loc 1 1440 9
 4417 0164 8B45F4   		movl	-12(%rbp), %eax
 4418              		.loc 1 1440 8
 4419 0167 3C2E     		cmpb	$46, %al
 4420 0169 0F85CA00 		jne	.L302
 4420      0000
 4421              		.loc 1 1440 53 discriminator 1
 4422 016f 488B45E0 		movq	-32(%rbp), %rax
 4423 0173 8B4030   		movl	48(%rax), %eax
 4424              		.loc 1 1440 60 discriminator 1
 4425 0176 8D48FF   		leal	-1(%rax), %ecx
 4426 0179 488B55E0 		movq	-32(%rbp), %rdx
 4427 017d 894A30   		movl	%ecx, 48(%rdx)
 4428              		.loc 1 1440 46 discriminator 1
 4429 0180 85C0     		testl	%eax, %eax
 4430 0182 0F84B100 		je	.L302
 4430      0000
1441:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* now check for decimal */
1442:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4431              		.loc 1 1442 34
 4432 0188 8B45F4   		movl	-12(%rbp), %eax
 4433              		.loc 1 1442 13
 4434 018b 0FBEC0   		movsbl	%al, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 114


 4435 018e 488B55D8 		movq	-40(%rbp), %rdx
 4436 0192 4889D6   		movq	%rdx, %rsi
 4437 0195 89C7     		movl	%eax, %edi
 4438 0197 E8000000 		call	SecUpdateFloatString
 4438      00
 4439              		.loc 1 1442 12
 4440 019c 85C0     		testl	%eax, %eax
 4441 019e 740A     		je	.L303
1443:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4442              		.loc 1 1443 20
 4443 01a0 B8FFFFFF 		movl	$-1, %eax
 4443      FF
 4444 01a5 E9260100 		jmp	.L299
 4444      00
 4445              	.L303:
1444:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1445:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4446              		.loc 1 1445 14
 4447 01aa 488B55D0 		movq	-48(%rbp), %rdx
 4448 01ae 488B45E8 		movq	-24(%rbp), %rax
 4449 01b2 4889D6   		movq	%rdx, %rsi
 4450 01b5 4889C7   		movq	%rax, %rdi
 4451 01b8 E8000000 		call	SecGetChar
 4451      00
 4452 01bd 8945F4   		movl	%eax, -12(%rbp)
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         while (SECUREC_IS_DIGIT(ch) && spec->width-- != 0) {
 4453              		.loc 1 1446 15
 4454 01c0 EB3F     		jmp	.L304
 4455              	.L306:
1447:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4456              		.loc 1 1447 21
 4457 01c2 C745F000 		movl	$0, -16(%rbp)
 4457      000000
1448:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (SecUpdateFloatString((SecChar)ch, floatSpec) != 0) {
 4458              		.loc 1 1448 38
 4459 01c9 8B45F4   		movl	-12(%rbp), %eax
 4460              		.loc 1 1448 17
 4461 01cc 0FBEC0   		movsbl	%al, %eax
 4462 01cf 488B55D8 		movq	-40(%rbp), %rdx
 4463 01d3 4889D6   		movq	%rdx, %rsi
 4464 01d6 89C7     		movl	%eax, %edi
 4465 01d8 E8000000 		call	SecUpdateFloatString
 4465      00
 4466              		.loc 1 1448 16
 4467 01dd 85C0     		testl	%eax, %eax
 4468 01df 740A     		je	.L305
1449:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 4469              		.loc 1 1449 24
 4470 01e1 B8FFFFFF 		movl	$-1, %eax
 4470      FF
 4471 01e6 E9E50000 		jmp	.L299
 4471      00
 4472              	.L305:
1450:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1451:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SecGetChar(stream, charCount);
 4473              		.loc 1 1451 18
 4474 01eb 488B55D0 		movq	-48(%rbp), %rdx
GAS LISTING /tmp/ccLrrfHE.s 			page 115


 4475 01ef 488B45E8 		movq	-24(%rbp), %rax
 4476 01f3 4889D6   		movq	%rdx, %rsi
 4477 01f6 4889C7   		movq	%rax, %rdi
 4478 01f9 E8000000 		call	SecGetChar
 4478      00
 4479 01fe 8945F4   		movl	%eax, -12(%rbp)
 4480              	.L304:
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4481              		.loc 1 1446 16
 4482 0201 E8000000 		call	__ctype_b_loc@PLT
 4482      00
 4483 0206 488B00   		movq	(%rax), %rax
 4484 0209 8B55F4   		movl	-12(%rbp), %edx
 4485 020c 0FB6D2   		movzbl	%dl, %edx
 4486 020f 4801D2   		addq	%rdx, %rdx
 4487 0212 4801D0   		addq	%rdx, %rax
 4488 0215 0FB700   		movzwl	(%rax), %eax
 4489 0218 0FB7C0   		movzwl	%ax, %eax
 4490 021b 25000800 		andl	$2048, %eax
 4490      00
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4491              		.loc 1 1446 15
 4492 0220 85C0     		testl	%eax, %eax
 4493 0222 7415     		je	.L302
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4494              		.loc 1 1446 44 discriminator 1
 4495 0224 488B45E0 		movq	-32(%rbp), %rax
 4496 0228 8B4030   		movl	48(%rax), %eax
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4497              		.loc 1 1446 51 discriminator 1
 4498 022b 8D48FF   		leal	-1(%rax), %ecx
 4499 022e 488B55E0 		movq	-32(%rbp), %rdx
 4500 0232 894A30   		movl	%ecx, 48(%rdx)
1446:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4501              		.loc 1 1446 37 discriminator 1
 4502 0235 85C0     		testl	%eax, %eax
 4503 0237 7589     		jne	.L306
 4504              	.L302:
1452:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1453:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1454:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1455:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* now get exponent part */
1456:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (started == 0 && (ch == SECUREC_CHAR('e') || ch == SECUREC_CHAR('E')) && spec->width-- != 0)
 4505              		.loc 1 1456 8
 4506 0239 837DF000 		cmpl	$0, -16(%rbp)
 4507 023d 7560     		jne	.L307
 4508              		.loc 1 1456 22 discriminator 1
 4509 023f 837DF465 		cmpl	$101, -12(%rbp)
 4510 0243 7406     		je	.L308
 4511              		.loc 1 1456 50 discriminator 3
 4512 0245 837DF445 		cmpl	$69, -12(%rbp)
 4513 0249 7554     		jne	.L307
 4514              	.L308:
 4515              		.loc 1 1456 85 discriminator 4
 4516 024b 488B45E0 		movq	-32(%rbp), %rax
 4517 024f 8B4030   		movl	48(%rax), %eax
 4518              		.loc 1 1456 92 discriminator 4
GAS LISTING /tmp/ccLrrfHE.s 			page 116


 4519 0252 8D48FF   		leal	-1(%rax), %ecx
 4520 0255 488B55E0 		movq	-32(%rbp), %rdx
 4521 0259 894A30   		movl	%ecx, 48(%rdx)
 4522              		.loc 1 1456 78 discriminator 4
 4523 025c 85C0     		testl	%eax, %eax
 4524 025e 743F     		je	.L307
1457:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecUpdateFloatString((SecChar)'e', floatSpec) != 0) {
 4525              		.loc 1 1457 13
 4526 0260 488B45D8 		movq	-40(%rbp), %rax
 4527 0264 4889C6   		movq	%rax, %rsi
 4528 0267 BF650000 		movl	$101, %edi
 4528      00
 4529 026c E8000000 		call	SecUpdateFloatString
 4529      00
 4530              		.loc 1 1457 12
 4531 0271 85C0     		testl	%eax, %eax
 4532 0273 7407     		je	.L309
1458:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4533              		.loc 1 1458 20
 4534 0275 B8FFFFFF 		movl	$-1, %eax
 4534      FF
 4535 027a EB54     		jmp	.L299
 4536              	.L309:
1459:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1460:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecInputFloatE(stream, spec, floatSpec, charCount) != 0) {
 4537              		.loc 1 1460 13
 4538 027c 488B4DD0 		movq	-48(%rbp), %rcx
 4539 0280 488B55D8 		movq	-40(%rbp), %rdx
 4540 0284 488B75E0 		movq	-32(%rbp), %rsi
 4541 0288 488B45E8 		movq	-24(%rbp), %rax
 4542 028c 4889C7   		movq	%rax, %rdi
 4543 028f E8000000 		call	SecInputFloatE
 4543      00
 4544              		.loc 1 1460 12
 4545 0294 85C0     		testl	%eax, %eax
 4546 0296 7407     		je	.L307
1461:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4547              		.loc 1 1461 20
 4548 0298 B8FFFFFF 		movl	$-1, %eax
 4548      FF
 4549 029d EB31     		jmp	.L299
 4550              	.L307:
1462:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1463:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1464:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* un set the last character that is not a floating point number */
1465:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecUnGetChar(ch, stream, charCount);
 4551              		.loc 1 1465 5
 4552 029f 488B55D0 		movq	-48(%rbp), %rdx
 4553 02a3 488B4DE8 		movq	-24(%rbp), %rcx
 4554 02a7 8B45F4   		movl	-12(%rbp), %eax
 4555 02aa 4889CE   		movq	%rcx, %rsi
 4556 02ad 89C7     		movl	%eax, %edi
 4557 02af E8000000 		call	SecUnGetChar
 4557      00
1466:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* Make sure  have a string terminator, buffer is large enough */
1467:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     floatSpec->floatStr[floatSpec->floatStrUsedLen] = SECUREC_CHAR('\0');
 4558              		.loc 1 1467 14
GAS LISTING /tmp/ccLrrfHE.s 			page 117


 4559 02b4 488B45D8 		movq	-40(%rbp), %rax
 4560 02b8 488B9070 		movq	368(%rax), %rdx
 4560      010000
 4561              		.loc 1 1467 34
 4562 02bf 488B45D8 		movq	-40(%rbp), %rax
 4563 02c3 488B4008 		movq	8(%rax), %rax
 4564              		.loc 1 1467 24
 4565 02c7 4801D0   		addq	%rdx, %rax
 4566              		.loc 1 1467 53
 4567 02ca C60000   		movb	$0, (%rax)
1468:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return started;
 4568              		.loc 1 1468 12
 4569 02cd 8B45F0   		movl	-16(%rbp), %eax
 4570              	.L299:
1469:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1470:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4571              		.loc 1 1470 1
 4572 02d0 488B7DF8 		movq	-8(%rbp), %rdi
 4573 02d4 6448333C 		xorq	%fs:40, %rdi
 4573      25280000 
 4573      00
 4574 02dd 7405     		je	.L310
 4575 02df E8000000 		call	__stack_chk_fail@PLT
 4575      00
 4576              	.L310:
 4577 02e4 C9       		leave
 4578              	.LCFI119:
 4579              		.cfi_def_cfa 7, 8
 4580 02e5 C3       		ret
 4581              		.cfi_endproc
 4582              	.LFE45:
 4584              		.section	.text.SecInputNumberDigital,"ax",@progbits
 4586              	SecInputNumberDigital:
 4587              	.LFB46:
1471:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1472:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1473:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1474:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * scan digital part of %d %i %o %u %x %p.
1475:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1476:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1477:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputNumberDigital(SecInt firstCh, SecFileStream *stream, SecScanSpec *spec, int *cha
1478:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4588              		.loc 1 1478 1
 4589              		.cfi_startproc
 4590 0000 F30F1EFA 		endbr64
 4591 0004 55       		pushq	%rbp
 4592              	.LCFI120:
 4593              		.cfi_def_cfa_offset 16
 4594              		.cfi_offset 6, -16
 4595 0005 4889E5   		movq	%rsp, %rbp
 4596              	.LCFI121:
 4597              		.cfi_def_cfa_register 6
 4598 0008 4883EC40 		subq	$64, %rsp
 4599 000c 897DDC   		movl	%edi, -36(%rbp)
 4600 000f 488975D0 		movq	%rsi, -48(%rbp)
 4601 0013 488955C8 		movq	%rdx, -56(%rbp)
 4602 0017 48894DC0 		movq	%rcx, -64(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 118


 4603              		.loc 1 1478 1
 4604 001b 64488B04 		movq	%fs:40, %rax
 4604      25280000 
 4604      00
 4605 0024 488945F8 		movq	%rax, -8(%rbp)
 4606 0028 31C0     		xorl	%eax, %eax
1479:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = firstCh;
 4607              		.loc 1 1479 12
 4608 002a 8B45DC   		movl	-36(%rbp), %eax
 4609 002d 8945EC   		movl	%eax, -20(%rbp)
1480:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int loopFlag = 0;
 4610              		.loc 1 1480 9
 4611 0030 C745F000 		movl	$0, -16(%rbp)
 4611      000000
1481:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int started = -1;
 4612              		.loc 1 1481 9
 4613 0037 C745F4FF 		movl	$-1, -12(%rbp)
 4613      FFFFFF
1482:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (loopFlag == 0) {
 4614              		.loc 1 1482 11
 4615 003e EB7E     		jmp	.L312
 4616              	.L316:
1483:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* decode ch to number */
1484:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         loopFlag = SecDecodeNumber(ch, spec);
 4617              		.loc 1 1484 20
 4618 0040 488B55C8 		movq	-56(%rbp), %rdx
 4619 0044 8B45EC   		movl	-20(%rbp), %eax
 4620 0047 4889D6   		movq	%rdx, %rsi
 4621 004a 89C7     		movl	%eax, %edi
 4622 004c E8000000 		call	SecDecodeNumber
 4622      00
 4623 0051 8945F0   		movl	%eax, -16(%rbp)
1485:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (loopFlag == 0) {
 4624              		.loc 1 1485 12
 4625 0054 837DF000 		cmpl	$0, -16(%rbp)
 4626 0058 754F     		jne	.L313
1486:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             started = 0;
 4627              		.loc 1 1486 21
 4628 005a C745F400 		movl	$0, -12(%rbp)
 4628      000000
1487:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->widthSet != 0 && --spec->width == 0) {
 4629              		.loc 1 1487 21
 4630 0061 488B45C8 		movq	-56(%rbp), %rax
 4631 0065 8B4034   		movl	52(%rax), %eax
 4632              		.loc 1 1487 16
 4633 0068 85C0     		testl	%eax, %eax
 4634 006a 7425     		je	.L314
 4635              		.loc 1 1487 46 discriminator 1
 4636 006c 488B45C8 		movq	-56(%rbp), %rax
 4637 0070 8B4030   		movl	48(%rax), %eax
 4638              		.loc 1 1487 40 discriminator 1
 4639 0073 8D50FF   		leal	-1(%rax), %edx
 4640              		.loc 1 1487 37 discriminator 1
 4641 0076 488B45C8 		movq	-56(%rbp), %rax
 4642 007a 895030   		movl	%edx, 48(%rax)
 4643              		.loc 1 1487 46 discriminator 1
 4644 007d 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 119


 4645 0081 8B4030   		movl	48(%rax), %eax
 4646              		.loc 1 1487 37 discriminator 1
 4647 0084 85C0     		testl	%eax, %eax
 4648 0086 7509     		jne	.L314
1488:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 loopFlag = 1;
 4649              		.loc 1 1488 26
 4650 0088 C745F001 		movl	$1, -16(%rbp)
 4650      000000
 4651 008f EB2D     		jmp	.L312
 4652              	.L314:
1489:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
1490:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ch = SecGetChar(stream, charCount);
 4653              		.loc 1 1490 22
 4654 0091 488B55C0 		movq	-64(%rbp), %rdx
 4655 0095 488B45D0 		movq	-48(%rbp), %rax
 4656 0099 4889D6   		movq	%rdx, %rsi
 4657 009c 4889C7   		movq	%rax, %rdi
 4658 009f E8000000 		call	SecGetChar
 4658      00
 4659 00a4 8945EC   		movl	%eax, -20(%rbp)
 4660 00a7 EB15     		jmp	.L312
 4661              	.L313:
1491:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1492:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1493:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecUnGetChar(ch, stream, charCount);
 4662              		.loc 1 1493 13
 4663 00a9 488B55C0 		movq	-64(%rbp), %rdx
 4664 00ad 488B4DD0 		movq	-48(%rbp), %rcx
 4665 00b1 8B45EC   		movl	-20(%rbp), %eax
 4666 00b4 4889CE   		movq	%rcx, %rsi
 4667 00b7 89C7     		movl	%eax, %edi
 4668 00b9 E8000000 		call	SecUnGetChar
 4668      00
 4669              	.L312:
1482:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* decode ch to number */
 4670              		.loc 1 1482 11
 4671 00be 837DF000 		cmpl	$0, -16(%rbp)
 4672 00c2 0F8478FF 		je	.L316
 4672      FFFF
1494:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1495:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1496:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1497:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* Handling integer negative numbers and beyond max */
1498:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     (*g_secFinishNumber[spec->isInt64Arg])(spec);
 4673              		.loc 1 1498 29
 4674 00c8 488B45C8 		movq	-56(%rbp), %rax
 4675 00cc 8B4014   		movl	20(%rax), %eax
 4676              		.loc 1 1498 6
 4677 00cf 4898     		cltq
 4678 00d1 488D14C5 		leaq	0(,%rax,8), %rdx
 4678      00000000 
 4679 00d9 488D0500 		leaq	g_secFinishNumber(%rip), %rax
 4679      000000
 4680 00e0 488B1402 		movq	(%rdx,%rax), %rdx
 4681 00e4 488B45C8 		movq	-56(%rbp), %rax
 4682 00e8 4889C7   		movq	%rax, %rdi
 4683 00eb FFD2     		call	*%rdx
GAS LISTING /tmp/ccLrrfHE.s 			page 120


 4684              	.LVL3:
1499:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return started;
 4685              		.loc 1 1499 12
 4686 00ed 8B45F4   		movl	-12(%rbp), %eax
1500:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1501:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4687              		.loc 1 1501 1
 4688 00f0 488B4DF8 		movq	-8(%rbp), %rcx
 4689 00f4 6448330C 		xorq	%fs:40, %rcx
 4689      25280000 
 4689      00
 4690 00fd 7405     		je	.L318
 4691 00ff E8000000 		call	__stack_chk_fail@PLT
 4691      00
 4692              	.L318:
 4693 0104 C9       		leave
 4694              	.LCFI122:
 4695              		.cfi_def_cfa 7, 8
 4696 0105 C3       		ret
 4697              		.cfi_endproc
 4698              	.LFE46:
 4700              		.section	.text.SecInputNumber,"ax",@progbits
 4702              	SecInputNumber:
 4703              	.LFB47:
1502:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1503:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1504:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * scan %d %i %o %u %x %p.
1505:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1506:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1507:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputNumber(SecFileStream *stream, SecScanSpec *spec, int *charCount)
1508:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4704              		.loc 1 1508 1
 4705              		.cfi_startproc
 4706 0000 F30F1EFA 		endbr64
 4707 0004 55       		pushq	%rbp
 4708              	.LCFI123:
 4709              		.cfi_def_cfa_offset 16
 4710              		.cfi_offset 6, -16
 4711 0005 4889E5   		movq	%rsp, %rbp
 4712              	.LCFI124:
 4713              		.cfi_def_cfa_register 6
 4714 0008 4883EC30 		subq	$48, %rsp
 4715 000c 48897DE8 		movq	%rdi, -24(%rbp)
 4716 0010 488975E0 		movq	%rsi, -32(%rbp)
 4717 0014 488955D8 		movq	%rdx, -40(%rbp)
 4718              		.loc 1 1508 1
 4719 0018 64488B04 		movq	%fs:40, %rax
 4719      25280000 
 4719      00
 4720 0021 488945F8 		movq	%rax, -8(%rbp)
 4721 0025 31C0     		xorl	%eax, %eax
1509:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = SecGetChar(stream, charCount);
 4722              		.loc 1 1509 17
 4723 0027 488B55D8 		movq	-40(%rbp), %rdx
 4724 002b 488B45E8 		movq	-24(%rbp), %rax
 4725 002f 4889D6   		movq	%rdx, %rsi
 4726 0032 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccLrrfHE.s 			page 121


 4727 0035 E8000000 		call	SecGetChar
 4727      00
 4728 003a 8945F4   		movl	%eax, -12(%rbp)
1510:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1511:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch == SECUREC_CHAR('+') || ch == SECUREC_CHAR('-')) {
 4729              		.loc 1 1511 8
 4730 003d 837DF42B 		cmpl	$43, -12(%rbp)
 4731 0041 7406     		je	.L320
 4732              		.loc 1 1511 33 discriminator 1
 4733 0043 837DF42D 		cmpl	$45, -12(%rbp)
 4734 0047 7558     		jne	.L321
 4735              	.L320:
1512:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (ch == SECUREC_CHAR('-')) {
 4736              		.loc 1 1512 12
 4737 0049 837DF42D 		cmpl	$45, -12(%rbp)
 4738 004d 750B     		jne	.L322
1513:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->negative = 1;
 4739              		.loc 1 1513 28
 4740 004f 488B45E0 		movq	-32(%rbp), %rax
 4741 0053 C7401801 		movl	$1, 24(%rax)
 4741      000000
 4742              	.L322:
1514:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1515:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->widthSet != 0 && --spec->width == 0) {
 4743              		.loc 1 1515 17
 4744 005a 488B45E0 		movq	-32(%rbp), %rax
 4745 005e 8B4034   		movl	52(%rax), %eax
 4746              		.loc 1 1515 12
 4747 0061 85C0     		testl	%eax, %eax
 4748 0063 7426     		je	.L323
 4749              		.loc 1 1515 42 discriminator 1
 4750 0065 488B45E0 		movq	-32(%rbp), %rax
 4751 0069 8B4030   		movl	48(%rax), %eax
 4752              		.loc 1 1515 36 discriminator 1
 4753 006c 8D50FF   		leal	-1(%rax), %edx
 4754              		.loc 1 1515 33 discriminator 1
 4755 006f 488B45E0 		movq	-32(%rbp), %rax
 4756 0073 895030   		movl	%edx, 48(%rax)
 4757              		.loc 1 1515 42 discriminator 1
 4758 0076 488B45E0 		movq	-32(%rbp), %rax
 4759 007a 8B4030   		movl	48(%rax), %eax
 4760              		.loc 1 1515 33 discriminator 1
 4761 007d 85C0     		testl	%eax, %eax
 4762 007f 750A     		jne	.L323
1516:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
 4763              		.loc 1 1516 20
 4764 0081 B8FFFFFF 		movl	$-1, %eax
 4764      FF
 4765 0086 E9290100 		jmp	.L324
 4765      00
 4766              	.L323:
1517:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1518:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SecGetChar(stream, charCount);
 4767              		.loc 1 1518 18
 4768 008b 488B55D8 		movq	-40(%rbp), %rdx
 4769 008f 488B45E8 		movq	-24(%rbp), %rax
 4770 0093 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccLrrfHE.s 			page 122


 4771 0096 4889C7   		movq	%rax, %rdi
 4772 0099 E8000000 		call	SecGetChar
 4772      00
 4773 009e 8945F4   		movl	%eax, -12(%rbp)
 4774              	.L321:
1519:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1520:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1521:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1522:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->oriComChr == SECUREC_CHAR('i')) {
 4775              		.loc 1 1522 13
 4776 00a1 488B45E0 		movq	-32(%rbp), %rax
 4777 00a5 8B403C   		movl	60(%rax), %eax
 4778              		.loc 1 1522 8
 4779 00a8 83F869   		cmpl	$105, %eax
 4780 00ab 750B     		jne	.L325
1523:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* i could be d, o, or x, use d as default */
1524:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec->comChr = SECUREC_CHAR('d');
 4781              		.loc 1 1524 22
 4782 00ad 488B45E0 		movq	-32(%rbp), %rax
 4783 00b1 C7403864 		movl	$100, 56(%rax)
 4783      000000
 4784              	.L325:
1525:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1526:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1527:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->oriComChr == SECUREC_CHAR('x') || spec->oriComChr == SECUREC_CHAR('i')) {
 4785              		.loc 1 1527 13
 4786 00b8 488B45E0 		movq	-32(%rbp), %rax
 4787 00bc 8B403C   		movl	60(%rax), %eax
 4788              		.loc 1 1527 8
 4789 00bf 83F878   		cmpl	$120, %eax
 4790 00c2 7410     		je	.L326
 4791              		.loc 1 1527 53 discriminator 1
 4792 00c4 488B45E0 		movq	-32(%rbp), %rax
 4793 00c8 8B403C   		movl	60(%rax), %eax
 4794              		.loc 1 1527 46 discriminator 1
 4795 00cb 83F869   		cmpl	$105, %eax
 4796 00ce 0F85CA00 		jne	.L327
 4796      0000
 4797              	.L326:
1528:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (ch != SECUREC_CHAR('0')) {
 4798              		.loc 1 1528 12
 4799 00d4 837DF430 		cmpl	$48, -12(%rbp)
 4800 00d8 741B     		je	.L328
1529:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* scan number */
1530:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return SecInputNumberDigital(ch, stream, spec, charCount);
 4801              		.loc 1 1530 20
 4802 00da 488B4DD8 		movq	-40(%rbp), %rcx
 4803 00de 488B55E0 		movq	-32(%rbp), %rdx
 4804 00e2 488B75E8 		movq	-24(%rbp), %rsi
 4805 00e6 8B45F4   		movl	-12(%rbp), %eax
 4806 00e9 89C7     		movl	%eax, %edi
 4807 00eb E8000000 		call	SecInputNumberDigital
 4807      00
 4808 00f0 E9BF0000 		jmp	.L324
 4808      00
 4809              	.L328:
1531:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
GAS LISTING /tmp/ccLrrfHE.s 			page 123


1532:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* now input string may be 0x123 or 0X123 or just 0 */
1533:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* get next char */
1534:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, charCount);
 4810              		.loc 1 1534 14
 4811 00f5 488B55D8 		movq	-40(%rbp), %rdx
 4812 00f9 488B45E8 		movq	-24(%rbp), %rax
 4813 00fd 4889D6   		movq	%rdx, %rsi
 4814 0100 4889C7   		movq	%rax, %rdi
 4815 0103 E8000000 		call	SecGetChar
 4815      00
 4816 0108 8945F4   		movl	%eax, -12(%rbp)
1535:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((SecChar)(ch) == SECUREC_CHAR('x') || (SecChar)ch == SECUREC_CHAR('X')) {
 4817              		.loc 1 1535 13
 4818 010b 8B45F4   		movl	-12(%rbp), %eax
 4819              		.loc 1 1535 12
 4820 010e 3C78     		cmpb	$120, %al
 4821 0110 7407     		je	.L329
 4822              		.loc 1 1535 51 discriminator 1
 4823 0112 8B45F4   		movl	-12(%rbp), %eax
 4824              		.loc 1 1535 48 discriminator 1
 4825 0115 3C58     		cmpb	$88, %al
 4826 0117 7552     		jne	.L330
 4827              	.L329:
1536:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->comChr = SECUREC_CHAR('x');
 4828              		.loc 1 1536 26
 4829 0119 488B45E0 		movq	-32(%rbp), %rax
 4830 011d C7403878 		movl	$120, 56(%rax)
 4830      000000
1537:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SecGetChar(stream, charCount);
 4831              		.loc 1 1537 18
 4832 0124 488B55D8 		movq	-40(%rbp), %rdx
 4833 0128 488B45E8 		movq	-24(%rbp), %rax
 4834 012c 4889D6   		movq	%rdx, %rsi
 4835 012f 4889C7   		movq	%rax, %rdi
 4836 0132 E8000000 		call	SecGetChar
 4836      00
 4837 0137 8945F4   		movl	%eax, -12(%rbp)
1538:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* length of 0x is 2 */
1539:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->widthSet != 0 && spec->width <= (1 + 1)) {
 4838              		.loc 1 1539 21
 4839 013a 488B45E0 		movq	-32(%rbp), %rax
 4840 013e 8B4034   		movl	52(%rax), %eax
 4841              		.loc 1 1539 16
 4842 0141 85C0     		testl	%eax, %eax
 4843 0143 7413     		je	.L331
 4844              		.loc 1 1539 44 discriminator 1
 4845 0145 488B45E0 		movq	-32(%rbp), %rax
 4846 0149 8B4030   		movl	48(%rax), %eax
 4847              		.loc 1 1539 37 discriminator 1
 4848 014c 83F802   		cmpl	$2, %eax
 4849 014f 7F07     		jg	.L331
1540:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* length not enough for "0x" */
1541:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return -1;
 4850              		.loc 1 1541 24
 4851 0151 B8FFFFFF 		movl	$-1, %eax
 4851      FF
 4852 0156 EB5C     		jmp	.L324
GAS LISTING /tmp/ccLrrfHE.s 			page 124


 4853              	.L331:
1542:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1543:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             spec->width -= 2; /* Subtract 2 for the length of "0x" */
 4854              		.loc 1 1543 25
 4855 0158 488B45E0 		movq	-32(%rbp), %rax
 4856 015c 8B4030   		movl	48(%rax), %eax
 4857 015f 8D50FE   		leal	-2(%rax), %edx
 4858 0162 488B45E0 		movq	-32(%rbp), %rax
 4859 0166 895030   		movl	%edx, 48(%rax)
 4860 0169 EB33     		jmp	.L327
 4861              	.L330:
1544:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1545:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->oriComChr != SECUREC_CHAR('x')) {
 4862              		.loc 1 1545 21
 4863 016b 488B45E0 		movq	-32(%rbp), %rax
 4864 016f 8B403C   		movl	60(%rax), %eax
 4865              		.loc 1 1545 16
 4866 0172 83F878   		cmpl	$120, %eax
 4867 0175 740B     		je	.L332
1546:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec->comChr = SECUREC_CHAR('o');
 4868              		.loc 1 1546 30
 4869 0177 488B45E0 		movq	-32(%rbp), %rax
 4870 017b C740386F 		movl	$111, 56(%rax)
 4870      000000
 4871              	.L332:
1547:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1548:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* unset the character after 0 back to stream, input only '0' result is OK */
1549:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecUnGetChar(ch, stream, charCount);
 4872              		.loc 1 1549 13
 4873 0182 488B55D8 		movq	-40(%rbp), %rdx
 4874 0186 488B4DE8 		movq	-24(%rbp), %rcx
 4875 018a 8B45F4   		movl	-12(%rbp), %eax
 4876 018d 4889CE   		movq	%rcx, %rsi
 4877 0190 89C7     		movl	%eax, %edi
 4878 0192 E8000000 		call	SecUnGetChar
 4878      00
1550:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SECUREC_CHAR('0');
 4879              		.loc 1 1550 16
 4880 0197 C745F430 		movl	$48, -12(%rbp)
 4880      000000
 4881              	.L327:
1551:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1552:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1553:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* scan number */
1554:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return SecInputNumberDigital(ch, stream, spec, charCount);
 4882              		.loc 1 1554 12
 4883 019e 488B4DD8 		movq	-40(%rbp), %rcx
 4884 01a2 488B55E0 		movq	-32(%rbp), %rdx
 4885 01a6 488B75E8 		movq	-24(%rbp), %rsi
 4886 01aa 8B45F4   		movl	-12(%rbp), %eax
 4887 01ad 89C7     		movl	%eax, %edi
 4888 01af E8000000 		call	SecInputNumberDigital
 4888      00
 4889              	.L324:
1555:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 4890              		.loc 1 1555 1
 4891 01b4 488B4DF8 		movq	-8(%rbp), %rcx
GAS LISTING /tmp/ccLrrfHE.s 			page 125


 4892 01b8 6448330C 		xorq	%fs:40, %rcx
 4892      25280000 
 4892      00
 4893 01c1 7405     		je	.L333
 4894 01c3 E8000000 		call	__stack_chk_fail@PLT
 4894      00
 4895              	.L333:
 4896 01c8 C9       		leave
 4897              	.LCFI125:
 4898              		.cfi_def_cfa 7, 8
 4899 01c9 C3       		ret
 4900              		.cfi_endproc
 4901              	.LFE47:
 4903              		.section	.text.SecInputString,"ax",@progbits
 4905              	SecInputString:
 4906              	.LFB48:
1556:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1557:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * scan %c %s %[
1558:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1559:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1560:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecInputString(SecFileStream *stream, SecScanSpec *spec,
1561:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecBracketTable *bracketTable, int *charCount, int *doneCount)
1562:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 4907              		.loc 1 1562 1
 4908              		.cfi_startproc
 4909 0000 F30F1EFA 		endbr64
 4910 0004 55       		pushq	%rbp
 4911              	.LCFI126:
 4912              		.cfi_def_cfa_offset 16
 4913              		.cfi_offset 6, -16
 4914 0005 4889E5   		movq	%rsp, %rbp
 4915              	.LCFI127:
 4916              		.cfi_def_cfa_register 6
 4917 0008 4883EC50 		subq	$80, %rsp
 4918 000c 48897DD8 		movq	%rdi, -40(%rbp)
 4919 0010 488975D0 		movq	%rsi, -48(%rbp)
 4920 0014 488955C8 		movq	%rdx, -56(%rbp)
 4921 0018 48894DC0 		movq	%rcx, -64(%rbp)
 4922 001c 4C8945B8 		movq	%r8, -72(%rbp)
 4923              		.loc 1 1562 1
 4924 0020 64488B04 		movq	%fs:40, %rax
 4924      25280000 
 4924      00
 4925 0029 488945F8 		movq	%rax, -8(%rbp)
 4926 002d 31C0     		xorl	%eax, %eax
1563:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     void *startPtr = spec->argPtr;
 4927              		.loc 1 1563 11
 4928 002f 488B45D0 		movq	-48(%rbp), %rax
 4929 0033 488B4020 		movq	32(%rax), %rax
 4930 0037 488945F0 		movq	%rax, -16(%rbp)
1564:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int suppressed= 0;
 4931              		.loc 1 1564 9
 4932 003b C745E400 		movl	$0, -28(%rbp)
 4932      000000
1565:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int errNoMem = 0;
 4933              		.loc 1 1565 9
 4934 0042 C745E800 		movl	$0, -24(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 126


 4934      000000
1566:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (spec->widthSet == 0 || spec->width-- != 0) {
 4935              		.loc 1 1567 11
 4936 0049 E9F30000 		jmp	.L335
 4936      00
 4937              	.L344:
 4938              	.LBB19:
1568:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 4939              		.loc 1 1568 21
 4940 004e 488B55C0 		movq	-64(%rbp), %rdx
 4941 0052 488B45D8 		movq	-40(%rbp), %rax
 4942 0056 4889D6   		movq	%rdx, %rsi
 4943 0059 4889C7   		movq	%rax, %rdi
 4944 005c E8000000 		call	SecGetChar
 4944      00
 4945 0061 8945EC   		movl	%eax, -20(%rbp)
1569:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* char  condition or string condition and bracket condition.
1570:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          * only supports  wide characters with a maximum length of two bytes
1571:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          */
1572:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((ch != SECUREC_EOF) && (spec->comChr == SECUREC_CHAR('c') ||
 4946              		.loc 1 1572 12
 4947 0064 837DECFF 		cmpl	$-1, -20(%rbp)
 4948 0068 0F84BC00 		je	.L336
 4948      0000
 4949              		.loc 1 1572 41 discriminator 1
 4950 006e 488B45D0 		movq	-48(%rbp), %rax
 4951 0072 8B4038   		movl	56(%rax), %eax
 4952              		.loc 1 1572 33 discriminator 1
 4953 0075 83F863   		cmpl	$99, %eax
 4954 0078 7464     		je	.L337
1573:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_SCANF_STRING_CONDITION(spec->comChr, ch) ||
 4955              		.loc 1 1573 13 discriminator 2
 4956 007a 488B45D0 		movq	-48(%rbp), %rax
 4957 007e 8B4038   		movl	56(%rax), %eax
1572:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_SCANF_STRING_CONDITION(spec->comChr, ch) ||
 4958              		.loc 1 1572 71 discriminator 2
 4959 0081 83F873   		cmpl	$115, %eax
 4960 0084 7512     		jne	.L338
 4961              		.loc 1 1573 13
 4962 0086 837DEC08 		cmpl	$8, -20(%rbp)
 4963 008a 7E06     		jle	.L339
 4964              		.loc 1 1573 13 is_stmt 0 discriminator 2
 4965 008c 837DEC0D 		cmpl	$13, -20(%rbp)
 4966 0090 7E06     		jle	.L338
 4967              	.L339:
 4968              		.loc 1 1573 13 discriminator 3
 4969 0092 837DEC20 		cmpl	$32, -20(%rbp)
 4970 0096 7546     		jne	.L337
 4971              	.L338:
1574:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_SCANF_BRACKET_CONDITION(spec->comChr, ch, bracketTable->table, bracketTable->ma
 4972              		.loc 1 1574 13 is_stmt 1 discriminator 5
 4973 0098 488B45D0 		movq	-48(%rbp), %rax
 4974 009c 8B4038   		movl	56(%rax), %eax
1573:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SECUREC_SCANF_STRING_CONDITION(spec->comChr, ch) ||
 4975              		.loc 1 1573 62 discriminator 5
 4976 009f 83F87B   		cmpl	$123, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 127


 4977 00a2 0F858200 		jne	.L336
 4977      0000
 4978              		.loc 1 1574 13
 4979 00a8 8B45EC   		movl	-20(%rbp), %eax
 4980 00ab C0E803   		shrb	$3, %al
 4981 00ae 0FB6C0   		movzbl	%al, %eax
 4982 00b1 488B55C8 		movq	-56(%rbp), %rdx
 4983 00b5 4898     		cltq
 4984 00b7 0FB61402 		movzbl	(%rdx,%rax), %edx
 4985 00bb 488B45C8 		movq	-56(%rbp), %rax
 4986 00bf 0FB64020 		movzbl	32(%rax), %eax
 4987 00c3 31D0     		xorl	%edx, %eax
 4988 00c5 0FB6D0   		movzbl	%al, %edx
 4989 00c8 8B45EC   		movl	-20(%rbp), %eax
 4990 00cb 0FB6C0   		movzbl	%al, %eax
 4991 00ce 83E007   		andl	$7, %eax
 4992 00d1 89C1     		movl	%eax, %ecx
 4993 00d3 D3FA     		sarl	%cl, %edx
 4994 00d5 89D0     		movl	%edx, %eax
 4995 00d7 83E001   		andl	$1, %eax
 4996 00da 85C0     		testl	%eax, %eax
 4997 00dc 744C     		je	.L336
 4998              	.L337:
1575:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->suppress != 0) {
 4999              		.loc 1 1575 21
 5000 00de 488B45D0 		movq	-48(%rbp), %rax
 5001 00e2 0FB64041 		movzbl	65(%rax), %eax
 5002              		.loc 1 1575 16
 5003 00e6 84C0     		testb	%al, %al
 5004 00e8 7409     		je	.L340
1576:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* Used to identify processed data for %*
1577:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                  * use endPtr to identify will cause 613, so use suppressed
1578:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                  */
1579:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 suppressed = 1;
 5005              		.loc 1 1579 28
 5006 00ea C745E401 		movl	$1, -28(%rbp)
 5006      000000
1580:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
 5007              		.loc 1 1580 17
 5008 00f1 EB4E     		jmp	.L335
 5009              	.L340:
1581:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1582:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* now suppress is not set */
1583:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec->arrayWidth == 0) {
 5010              		.loc 1 1583 21
 5011 00f3 488B45D0 		movq	-48(%rbp), %rax
 5012 00f7 488B4028 		movq	40(%rax), %rax
 5013              		.loc 1 1583 16
 5014 00fb 4885C0   		testq	%rax, %rax
 5015 00fe 7509     		jne	.L341
1584:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 errNoMem = 1; /* We have exhausted the user's buffer */
 5016              		.loc 1 1584 26
 5017 0100 C745E801 		movl	$1, -24(%rbp)
 5017      000000
1585:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
 5018              		.loc 1 1585 17
 5019 0107 EB63     		jmp	.L342
GAS LISTING /tmp/ccLrrfHE.s 			page 128


 5020              	.L341:
1586:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1587:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1588:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             errNoMem = SecInputForWchar(ch, spec);
1589:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1590:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             errNoMem = SecInputForChar(ch, spec, stream, charCount);
 5021              		.loc 1 1590 24
 5022 0109 488B4DC0 		movq	-64(%rbp), %rcx
 5023 010d 488B55D8 		movq	-40(%rbp), %rdx
 5024 0111 488B75D0 		movq	-48(%rbp), %rsi
 5025 0115 8B45EC   		movl	-20(%rbp), %eax
 5026 0118 89C7     		movl	%eax, %edi
 5027 011a E8000000 		call	SecInputForChar
 5027      00
 5028 011f 8945E8   		movl	%eax, -24(%rbp)
1591:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1592:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (errNoMem != 0) {
 5029              		.loc 1 1592 16
 5030 0122 837DE800 		cmpl	$0, -24(%rbp)
 5031 0126 7543     		jne	.L354
 5032 0128 EB17     		jmp	.L335
 5033              	.L336:
1593:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
1594:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1595:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         } else {
1596:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecUnGetChar(ch, stream, charCount);
 5034              		.loc 1 1596 13
 5035 012a 488B55C0 		movq	-64(%rbp), %rdx
 5036 012e 488B4DD8 		movq	-40(%rbp), %rcx
 5037 0132 8B45EC   		movl	-20(%rbp), %eax
 5038 0135 4889CE   		movq	%rcx, %rsi
 5039 0138 89C7     		movl	%eax, %edi
 5040 013a E8000000 		call	SecUnGetChar
 5040      00
1597:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
 5041              		.loc 1 1597 13
 5042 013f EB2B     		jmp	.L342
 5043              	.L335:
 5044              	.LBE19:
1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 5045              		.loc 1 1567 16
 5046 0141 488B45D0 		movq	-48(%rbp), %rax
 5047 0145 8B4034   		movl	52(%rax), %eax
1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 5048              		.loc 1 1567 11
 5049 0148 85C0     		testl	%eax, %eax
 5050 014a 0F84FEFE 		je	.L344
 5050      FFFF
1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 5051              		.loc 1 1567 39 discriminator 1
 5052 0150 488B45D0 		movq	-48(%rbp), %rax
 5053 0154 8B4030   		movl	48(%rax), %eax
1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 5054              		.loc 1 1567 46 discriminator 1
 5055 0157 8D48FF   		leal	-1(%rax), %ecx
 5056 015a 488B55D0 		movq	-48(%rbp), %rdx
 5057 015e 894A30   		movl	%ecx, 48(%rdx)
GAS LISTING /tmp/ccLrrfHE.s 			page 129


1567:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecInt ch = SecGetChar(stream, charCount);
 5058              		.loc 1 1567 32 discriminator 1
 5059 0161 85C0     		testl	%eax, %eax
 5060 0163 0F85E5FE 		jne	.L344
 5060      FFFF
 5061 0169 EB01     		jmp	.L342
 5062              	.L354:
 5063              	.LBB20:
1593:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
 5064              		.loc 1 1593 17
 5065 016b 90       		nop
 5066              	.L342:
 5067              	.LBE20:
1598:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1599:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1600:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1601:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (errNoMem != 0) {
 5068              		.loc 1 1601 8
 5069 016c 837DE800 		cmpl	$0, -24(%rbp)
 5070 0170 7426     		je	.L345
1602:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* In case of error, blank out the input buffer */
1603:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->suppress == 0) {
 5071              		.loc 1 1603 17
 5072 0172 488B45D0 		movq	-48(%rbp), %rax
 5073 0176 0FB64041 		movzbl	65(%rax), %eax
 5074              		.loc 1 1603 12
 5075 017a 84C0     		testb	%al, %al
 5076 017c 7513     		jne	.L346
1604:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecAddEndingZero(startPtr, spec);
 5077              		.loc 1 1604 13
 5078 017e 488B55D0 		movq	-48(%rbp), %rdx
 5079 0182 488B45F0 		movq	-16(%rbp), %rax
 5080 0186 4889D6   		movq	%rdx, %rsi
 5081 0189 4889C7   		movq	%rax, %rdi
 5082 018c E8000000 		call	SecAddEndingZero
 5082      00
 5083              	.L346:
1605:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1606:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 5084              		.loc 1 1606 16
 5085 0191 B8FFFFFF 		movl	$-1, %eax
 5085      FF
 5086 0196 EB76     		jmp	.L347
 5087              	.L345:
1607:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1608:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1609:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* No input was scanned */
1610:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((spec->suppress != 0 && suppressed == 0) ||
 5088              		.loc 1 1610 14
 5089 0198 488B45D0 		movq	-48(%rbp), %rax
 5090 019c 0FB64041 		movzbl	65(%rax), %eax
 5091              		.loc 1 1610 8
 5092 01a0 84C0     		testb	%al, %al
 5093 01a2 7406     		je	.L348
 5094              		.loc 1 1610 30 discriminator 1
 5095 01a4 837DE400 		cmpl	$0, -28(%rbp)
 5096 01a8 741A     		je	.L349
GAS LISTING /tmp/ccLrrfHE.s 			page 130


 5097              	.L348:
1611:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (spec->suppress == 0 && startPtr == spec->argPtr)) {
 5098              		.loc 1 1611 14 discriminator 3
 5099 01aa 488B45D0 		movq	-48(%rbp), %rax
 5100 01ae 0FB64041 		movzbl	65(%rax), %eax
1610:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (spec->suppress == 0 && startPtr == spec->argPtr)) {
 5101              		.loc 1 1610 50 discriminator 3
 5102 01b2 84C0     		testb	%al, %al
 5103 01b4 7515     		jne	.L350
 5104              		.loc 1 1611 49
 5105 01b6 488B45D0 		movq	-48(%rbp), %rax
 5106 01ba 488B4020 		movq	32(%rax), %rax
 5107              		.loc 1 1611 30
 5108 01be 483945F0 		cmpq	%rax, -16(%rbp)
 5109 01c2 7507     		jne	.L350
 5110              	.L349:
1612:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return -1;
 5111              		.loc 1 1612 16
 5112 01c4 B8FFFFFF 		movl	$-1, %eax
 5112      FF
 5113 01c9 EB43     		jmp	.L347
 5114              	.L350:
1613:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1614:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1615:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (spec->suppress == 0) {
 5115              		.loc 1 1615 13
 5116 01cb 488B45D0 		movq	-48(%rbp), %rax
 5117 01cf 0FB64041 		movzbl	65(%rax), %eax
 5118              		.loc 1 1615 8
 5119 01d3 84C0     		testb	%al, %al
 5120 01d5 7532     		jne	.L351
1616:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec->comChr != 'c') {
 5121              		.loc 1 1616 17
 5122 01d7 488B45D0 		movq	-48(%rbp), %rax
 5123 01db 8B4038   		movl	56(%rax), %eax
 5124              		.loc 1 1616 12
 5125 01de 83F863   		cmpl	$99, %eax
 5126 01e1 7417     		je	.L352
1617:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* null-terminate strings */
1618:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecAddEndingZero(spec->argPtr, spec);
 5127              		.loc 1 1618 13
 5128 01e3 488B45D0 		movq	-48(%rbp), %rax
 5129 01e7 488B4020 		movq	32(%rax), %rax
 5130 01eb 488B55D0 		movq	-48(%rbp), %rdx
 5131 01ef 4889D6   		movq	%rdx, %rsi
 5132 01f2 4889C7   		movq	%rax, %rdi
 5133 01f5 E8000000 		call	SecAddEndingZero
 5133      00
 5134              	.L352:
1619:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1620:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         *doneCount = *doneCount + 1;
 5135              		.loc 1 1620 22
 5136 01fa 488B45B8 		movq	-72(%rbp), %rax
 5137 01fe 8B00     		movl	(%rax), %eax
 5138              		.loc 1 1620 33
 5139 0200 8D5001   		leal	1(%rax), %edx
 5140              		.loc 1 1620 20
GAS LISTING /tmp/ccLrrfHE.s 			page 131


 5141 0203 488B45B8 		movq	-72(%rbp), %rax
 5142 0207 8910     		movl	%edx, (%rax)
 5143              	.L351:
1621:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1622:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
 5144              		.loc 1 1622 12
 5145 0209 B8000000 		movl	$0, %eax
 5145      00
 5146              	.L347:
1623:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 5147              		.loc 1 1623 1
 5148 020e 488B7DF8 		movq	-8(%rbp), %rdi
 5149 0212 6448333C 		xorq	%fs:40, %rdi
 5149      25280000 
 5149      00
 5150 021b 7405     		je	.L353
 5151 021d E8000000 		call	__stack_chk_fail@PLT
 5151      00
 5152              	.L353:
 5153 0222 C9       		leave
 5154              	.LCFI128:
 5155              		.cfi_def_cfa 7, 8
 5156 0223 C3       		ret
 5157              		.cfi_endproc
 5158              	.LFE48:
 5160              		.section	.text.SecInputS,"ax",@progbits
 5161              		.globl	SecInputS
 5163              	SecInputS:
 5164              	.LFB49:
1624:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1625:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1626:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1627:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * alloce buffer for wchar version of %[.
1628:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * return 0 OK
1629:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1630:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static int SecAllocBracketTable(SecBracketTable *bracketTable)
1631:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
1632:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (bracketTable->table == NULL) {
1633:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* table should be freed after use */
1634:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         bracketTable->table = (unsigned char *)SECUREC_MALLOC(SECUREC_BRACKET_TABLE_SIZE);
1635:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (bracketTable->table == NULL) {
1636:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return -1;
1637:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1638:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1639:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return 0;
1640:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
1641:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1642:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1643:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * free buffer for wchar version of %[
1644:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1645:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecFreeBracketTable(SecBracketTable *bracketTable)
1646:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
1647:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (bracketTable->table != NULL) {
1648:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SECUREC_FREE(bracketTable->table);
1649:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         bracketTable->table = NULL;
1650:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1651:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
GAS LISTING /tmp/ccLrrfHE.s 			page 132


1652:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1653:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1654:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1655:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1656:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Formatting input core functions for wchar version.Called by a function such as vsscanf_s
1657:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1658:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** int SecInputSW(SecFileStream *stream, const wchar_t *cFormat, va_list argList)
1659:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1660:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1661:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  * Formatting input core functions for char version.Called by a function such as vswscanf_s
1662:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1663:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** int SecInputS(SecFileStream *stream, const char *cFormat, va_list argList)
1664:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1665:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 5165              		.loc 1 1665 1
 5166              		.cfi_startproc
 5167 0000 F30F1EFA 		endbr64
 5168 0004 55       		pushq	%rbp
 5169              	.LCFI129:
 5170              		.cfi_def_cfa_offset 16
 5171              		.cfi_offset 6, -16
 5172 0005 4889E5   		movq	%rsp, %rbp
 5173              	.LCFI130:
 5174              		.cfi_def_cfa_register 6
 5175 0008 4881EC60 		subq	$608, %rsp
 5175      020000
 5176 000f 4889BDB8 		movq	%rdi, -584(%rbp)
 5176      FDFFFF
 5177 0016 4889B5B0 		movq	%rsi, -592(%rbp)
 5177      FDFFFF
 5178 001d 488995A8 		movq	%rdx, -600(%rbp)
 5178      FDFFFF
 5179              		.loc 1 1665 1
 5180 0024 64488B04 		movq	%fs:40, %rax
 5180      25280000 
 5180      00
 5181 002d 488945F8 		movq	%rax, -8(%rbp)
 5182 0031 31C0     		xorl	%eax, %eax
1666:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     const SecUnsignedChar *format = (const SecUnsignedChar *)cFormat;
 5183              		.loc 1 1666 28
 5184 0033 488B85B0 		movq	-592(%rbp), %rax
 5184      FDFFFF
 5185 003a 488985E8 		movq	%rax, -536(%rbp)
 5185      FDFFFF
1667:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecBracketTable bracketTable = SECUREC_INIT_BRACKET_TABLE;
 5186              		.loc 1 1667 21
 5187 0041 48C78540 		movq	$0, -448(%rbp)
 5187      FEFFFF00 
 5187      000000
 5188 004c 48C78548 		movq	$0, -440(%rbp)
 5188      FEFFFF00 
 5188      000000
 5189 0057 48C78550 		movq	$0, -432(%rbp)
 5189      FEFFFF00 
 5189      000000
 5190 0062 48C78558 		movq	$0, -424(%rbp)
 5190      FEFFFF00 
GAS LISTING /tmp/ccLrrfHE.s 			page 133


 5190      000000
 5191 006d C68560FE 		movb	$0, -416(%rbp)
 5191      FFFF00
1668:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecScanSpec spec;
1669:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = 0;
 5192              		.loc 1 1669 12
 5193 0074 C785D0FD 		movl	$0, -560(%rbp)
 5193      FFFF0000 
 5193      0000
1670:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int charCount = 0;
 5194              		.loc 1 1670 9
 5195 007e C785C8FD 		movl	$0, -568(%rbp)
 5195      FFFF0000 
 5195      0000
1671:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int doneCount = 0;
 5196              		.loc 1 1671 9
 5197 0088 C785CCFD 		movl	$0, -564(%rbp)
 5197      FFFF0000 
 5197      0000
1672:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int formatError = 0;
 5198              		.loc 1 1672 9
 5199 0092 C785D4FD 		movl	$0, -556(%rbp)
 5199      FFFF0000 
 5199      0000
1673:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int paraIsNull = 0;
 5200              		.loc 1 1673 9
 5201 009c C785D8FD 		movl	$0, -552(%rbp)
 5201      FFFF0000 
 5201      0000
1674:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
1675:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecFloatSpec floatSpec;
1676:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1677:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int match = 0;
 5202              		.loc 1 1677 9
 5203 00a6 C785DCFD 		movl	$0, -548(%rbp)
 5203      FFFF0000 
 5203      0000
1678:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     int errRet = 0;
 5204              		.loc 1 1678 9
 5205 00b0 C785E0FD 		movl	$0, -544(%rbp)
 5205      FFFF0000 
 5205      0000
1679:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
1680:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInitFloatSpec(&floatSpec);
 5206              		.loc 1 1680 5
 5207 00ba 488D8570 		leaq	-400(%rbp), %rax
 5207      FEFFFF
 5208 00c1 4889C7   		movq	%rax, %rdi
 5209 00c4 E8000000 		call	SecInitFloatSpec
 5209      00
1681:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1682:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* format must not NULL */
1683:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* use err < 1 to claer 845 */
1684:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     while (errRet < 1 && *format != SECUREC_CHAR('\0')) {
 5210              		.loc 1 1684 11
 5211 00c9 E9E00800 		jmp	.L356
 5211      00
GAS LISTING /tmp/ccLrrfHE.s 			page 134


 5212              	.L406:
1685:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* skip space in format and space in input */
1686:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SECUREC_IS_SPACE(*format)) {
 5213              		.loc 1 1686 13
 5214 00ce E8000000 		call	__ctype_b_loc@PLT
 5214      00
 5215 00d3 488B10   		movq	(%rax), %rdx
 5216 00d6 488B85E8 		movq	-536(%rbp), %rax
 5216      FDFFFF
 5217 00dd 0FB600   		movzbl	(%rax), %eax
 5218 00e0 0FB6C0   		movzbl	%al, %eax
 5219 00e3 4801C0   		addq	%rax, %rax
 5220 00e6 4801D0   		addq	%rdx, %rax
 5221 00e9 0FB700   		movzwl	(%rax), %eax
 5222 00ec 0FB7C0   		movzwl	%ax, %eax
 5223 00ef 25002000 		andl	$8192, %eax
 5223      00
 5224              		.loc 1 1686 12
 5225 00f4 85C0     		testl	%eax, %eax
 5226 00f6 7451     		je	.L357
 5227              	.LBB21:
1687:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecInt nonSpaceChar = SecSkipSpaceChar(stream, &charCount);
 5228              		.loc 1 1687 35
 5229 00f8 488D95C8 		leaq	-568(%rbp), %rdx
 5229      FDFFFF
 5230 00ff 488B85B8 		movq	-584(%rbp), %rax
 5230      FDFFFF
 5231 0106 4889D6   		movq	%rdx, %rsi
 5232 0109 4889C7   		movq	%rax, %rdi
 5233 010c E8000000 		call	SecSkipSpaceChar
 5233      00
 5234 0111 8985E4FD 		movl	%eax, -540(%rbp)
 5234      FFFF
1688:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* eat all space chars and put fist no space char backup */
1689:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecUnGetChar(nonSpaceChar, stream, &charCount);
 5235              		.loc 1 1689 13
 5236 0117 488D95C8 		leaq	-568(%rbp), %rdx
 5236      FDFFFF
 5237 011e 488B8DB8 		movq	-584(%rbp), %rcx
 5237      FDFFFF
 5238 0125 8B85E4FD 		movl	-540(%rbp), %eax
 5238      FFFF
 5239 012b 4889CE   		movq	%rcx, %rsi
 5240 012e 89C7     		movl	%eax, %edi
 5241 0130 E8000000 		call	SecUnGetChar
 5241      00
1690:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecSkipSpaceFormat(&format);
 5242              		.loc 1 1690 13
 5243 0135 488D85E8 		leaq	-536(%rbp), %rax
 5243      FDFFFF
 5244 013c 4889C7   		movq	%rax, %rdi
 5245 013f E8000000 		call	SecSkipSpaceFormat
 5245      00
1691:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             continue;
 5246              		.loc 1 1691 13
 5247 0144 E9650800 		jmp	.L356
 5247      00
GAS LISTING /tmp/ccLrrfHE.s 			page 135


 5248              	.L357:
 5249              	.LBE21:
1692:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1693:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1694:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (*format != SECUREC_CHAR('%')) {
 5250              		.loc 1 1694 13
 5251 0149 488B85E8 		movq	-536(%rbp), %rax
 5251      FDFFFF
 5252 0150 0FB600   		movzbl	(%rax), %eax
 5253              		.loc 1 1694 12
 5254 0153 3C25     		cmpb	$37, %al
 5255 0155 0F84E600 		je	.L358
 5255      0000
1695:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ch = SecGetChar(stream, &charCount);
 5256              		.loc 1 1695 18
 5257 015b 488D95C8 		leaq	-568(%rbp), %rdx
 5257      FDFFFF
 5258 0162 488B85B8 		movq	-584(%rbp), %rax
 5258      FDFFFF
 5259 0169 4889D6   		movq	%rdx, %rsi
 5260 016c 4889C7   		movq	%rax, %rdi
 5261 016f E8000000 		call	SecGetChar
 5261      00
 5262 0174 8985D0FD 		movl	%eax, -560(%rbp)
 5262      FFFF
1696:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if ((int)(*format++) != (int)(ch)) {
 5263              		.loc 1 1696 30
 5264 017a 488B85E8 		movq	-536(%rbp), %rax
 5264      FDFFFF
 5265 0181 488D5001 		leaq	1(%rax), %rdx
 5266 0185 488995E8 		movq	%rdx, -536(%rbp)
 5266      FDFFFF
 5267              		.loc 1 1696 23
 5268 018c 0FB600   		movzbl	(%rax), %eax
 5269              		.loc 1 1696 17
 5270 018f 0FB6C0   		movzbl	%al, %eax
 5271              		.loc 1 1696 16
 5272 0192 3985D0FD 		cmpl	%eax, -560(%rbp)
 5272      FFFF
 5273 0198 742A     		je	.L359
1697:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SecUnGetChar(ch, stream, &charCount);
 5274              		.loc 1 1697 17
 5275 019a 488D95C8 		leaq	-568(%rbp), %rdx
 5275      FDFFFF
 5276 01a1 488B8DB8 		movq	-584(%rbp), %rcx
 5276      FDFFFF
 5277 01a8 8B85D0FD 		movl	-560(%rbp), %eax
 5277      FFFF
 5278 01ae 4889CE   		movq	%rcx, %rsi
 5279 01b1 89C7     		movl	%eax, %edi
 5280 01b3 E8000000 		call	SecUnGetChar
 5280      00
1698:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ++errRet; /* use plus to clear 845 */
 5281              		.loc 1 1698 17
 5282 01b8 8385E0FD 		addl	$1, -544(%rbp)
 5282      FFFF01
1699:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
GAS LISTING /tmp/ccLrrfHE.s 			page 136


 5283              		.loc 1 1699 17
 5284 01bf E9EA0700 		jmp	.L356
 5284      00
 5285              	.L359:
1700:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1701:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifndef SECUREC_FOR_WCHAR
1702:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (SecIsLeadByte(ch) && SecDecodeLeadByte(ch, &format, stream, &charCount) != 0) {
 5286              		.loc 1 1702 17
 5287 01c4 8B85D0FD 		movl	-560(%rbp), %eax
 5287      FFFF
 5288 01ca 89C7     		movl	%eax, %edi
 5289 01cc E8000000 		call	SecIsLeadByte
 5289      00
 5290              		.loc 1 1702 16
 5291 01d1 85C0     		testl	%eax, %eax
 5292 01d3 7432     		je	.L360
 5293              		.loc 1 1702 38 discriminator 1
 5294 01d5 488D8DC8 		leaq	-568(%rbp), %rcx
 5294      FDFFFF
 5295 01dc 488B95B8 		movq	-584(%rbp), %rdx
 5295      FDFFFF
 5296 01e3 488DB5E8 		leaq	-536(%rbp), %rsi
 5296      FDFFFF
 5297 01ea 8B85D0FD 		movl	-560(%rbp), %eax
 5297      FFFF
 5298 01f0 89C7     		movl	%eax, %edi
 5299 01f2 E8000000 		call	SecDecodeLeadByte
 5299      00
 5300              		.loc 1 1702 35 discriminator 1
 5301 01f7 85C0     		testl	%eax, %eax
 5302 01f9 740C     		je	.L360
1703:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ++errRet;
 5303              		.loc 1 1703 17
 5304 01fb 8385E0FD 		addl	$1, -544(%rbp)
 5304      FFFF01
1704:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
 5305              		.loc 1 1704 17
 5306 0202 E9A70700 		jmp	.L356
 5306      00
 5307              	.L360:
1705:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1706:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1707:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* for next %n */
1708:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if ((ch == SECUREC_EOF) && ((*format != SECUREC_CHAR('%')) || (*(format + 1) != SECUREC
 5308              		.loc 1 1708 16
 5309 0207 83BDD0FD 		cmpl	$-1, -560(%rbp)
 5309      FFFFFF
 5310 020e 0F859A07 		jne	.L356
 5310      0000
 5311              		.loc 1 1708 42 discriminator 1
 5312 0214 488B85E8 		movq	-536(%rbp), %rax
 5312      FDFFFF
 5313 021b 0FB600   		movzbl	(%rax), %eax
 5314              		.loc 1 1708 37 discriminator 1
 5315 021e 3C25     		cmpb	$37, %al
 5316 0220 0F85A307 		jne	.L362
 5316      0000
GAS LISTING /tmp/ccLrrfHE.s 			page 137


 5317              		.loc 1 1708 85 discriminator 2
 5318 0226 488B85E8 		movq	-536(%rbp), %rax
 5318      FDFFFF
 5319 022d 4883C001 		addq	$1, %rax
 5320              		.loc 1 1708 76 discriminator 2
 5321 0231 0FB600   		movzbl	(%rax), %eax
 5322              		.loc 1 1708 72 discriminator 2
 5323 0234 3C6E     		cmpb	$110, %al
 5324 0236 0F858D07 		jne	.L362
 5324      0000
1709:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
1710:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1711:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             continue;
 5325              		.loc 1 1711 13
 5326 023c E96D0700 		jmp	.L356
 5326      00
 5327              	.L358:
1712:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1713:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1714:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* now *format is % */
1715:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* set default value for each % */
1716:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecSetDefaultScanSpec(&spec);
 5328              		.loc 1 1716 9
 5329 0241 488D85F0 		leaq	-528(%rbp), %rax
 5329      FDFFFF
 5330 0248 4889C7   		movq	%rax, %rdi
 5331 024b E8000000 		call	SecSetDefaultScanSpec
 5331      00
1717:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (SecDecodeScanFlag(&format, &spec) != 0) {
 5332              		.loc 1 1717 13
 5333 0250 488D95F0 		leaq	-528(%rbp), %rdx
 5333      FDFFFF
 5334 0257 488D85E8 		leaq	-536(%rbp), %rax
 5334      FDFFFF
 5335 025e 4889D6   		movq	%rdx, %rsi
 5336 0261 4889C7   		movq	%rax, %rdi
 5337 0264 E8000000 		call	SecDecodeScanFlag
 5337      00
 5338              		.loc 1 1717 12
 5339 0269 85C0     		testl	%eax, %eax
 5340 026b 7416     		je	.L363
1718:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             formatError = 1;
 5341              		.loc 1 1718 25
 5342 026d C785D4FD 		movl	$1, -556(%rbp)
 5342      FFFF0100 
 5342      0000
1719:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++errRet;
 5343              		.loc 1 1719 13
 5344 0277 8385E0FD 		addl	$1, -544(%rbp)
 5344      FFFF01
1720:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             continue;
 5345              		.loc 1 1720 13
 5346 027e E92B0700 		jmp	.L356
 5346      00
 5347              	.L363:
1721:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1722:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* update wchar flag for %S %C */
GAS LISTING /tmp/ccLrrfHE.s 			page 138


1723:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUpdateWcharFlagByType(*format, &spec);
 5348              		.loc 1 1723 34
 5349 0283 488B85E8 		movq	-536(%rbp), %rax
 5349      FDFFFF
 5350 028a 0FB600   		movzbl	(%rax), %eax
 5351              		.loc 1 1723 9
 5352 028d 0FB6C0   		movzbl	%al, %eax
 5353 0290 488D95F0 		leaq	-528(%rbp), %rdx
 5353      FDFFFF
 5354 0297 4889D6   		movq	%rdx, %rsi
 5355 029a 89C7     		movl	%eax, %edi
 5356 029c E8000000 		call	SecUpdateWcharFlagByType
 5356      00
1724:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1725:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_HAVE_WCHART == 0
1726:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* in kernel not support wide char */
1727:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec.isWChar > 0) {
1728:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             formatError = 1;
1729:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++errRet;
1730:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             continue;
1731:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1732:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1733:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec.widthSet != 0 && spec.width == 0) {
 5357              		.loc 1 1733 17
 5358 02a1 8B8524FE 		movl	-476(%rbp), %eax
 5358      FFFF
 5359              		.loc 1 1733 12
 5360 02a7 85C0     		testl	%eax, %eax
 5361 02a9 7416     		je	.L364
 5362              		.loc 1 1733 39 discriminator 1
 5363 02ab 8B8520FE 		movl	-480(%rbp), %eax
 5363      FFFF
 5364              		.loc 1 1733 32 discriminator 1
 5365 02b1 85C0     		testl	%eax, %eax
 5366 02b3 750C     		jne	.L364
1734:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             /* 0 width in format */
1735:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             ++errRet;
 5367              		.loc 1 1735 13
 5368 02b5 8385E0FD 		addl	$1, -544(%rbp)
 5368      FFFF01
1736:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             continue;
 5369              		.loc 1 1736 13
 5370 02bc E9ED0600 		jmp	.L356
 5370      00
 5371              	.L364:
1737:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1738:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1739:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec.comChr = (unsigned char)(*format) | (SECUREC_CHAR('a') - SECUREC_CHAR('A')); /* to low
 5372              		.loc 1 1739 39
 5373 02c1 488B85E8 		movq	-536(%rbp), %rax
 5373      FDFFFF
 5374 02c8 0FB600   		movzbl	(%rax), %eax
 5375              		.loc 1 1739 48
 5376 02cb 83C820   		orl	$32, %eax
 5377 02ce 0FB6C0   		movzbl	%al, %eax
 5378              		.loc 1 1739 21
 5379 02d1 898528FE 		movl	%eax, -472(%rbp)
GAS LISTING /tmp/ccLrrfHE.s 			page 139


 5379      FFFF
1740:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         spec.oriComChr = spec.comChr;
 5380              		.loc 1 1740 30
 5381 02d7 8B8528FE 		movl	-472(%rbp), %eax
 5381      FFFF
 5382              		.loc 1 1740 24
 5383 02dd 89852CFE 		movl	%eax, -468(%rbp)
 5383      FFFF
1741:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1742:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (spec.comChr != SECUREC_CHAR('n')) {
 5384              		.loc 1 1742 17
 5385 02e3 8B8528FE 		movl	-472(%rbp), %eax
 5385      FFFF
 5386              		.loc 1 1742 12
 5387 02e9 83F86E   		cmpl	$110, %eax
 5388 02ec 746B     		je	.L365
1743:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (spec.comChr != SECUREC_CHAR('c') && spec.comChr != SECUREC_BRACE) {
 5389              		.loc 1 1743 21
 5390 02ee 8B8528FE 		movl	-472(%rbp), %eax
 5390      FFFF
 5391              		.loc 1 1743 16
 5392 02f4 83F863   		cmpl	$99, %eax
 5393 02f7 742C     		je	.L366
 5394              		.loc 1 1743 57 discriminator 1
 5395 02f9 8B8528FE 		movl	-472(%rbp), %eax
 5395      FFFF
 5396              		.loc 1 1743 50 discriminator 1
 5397 02ff 83F87B   		cmpl	$123, %eax
 5398 0302 7421     		je	.L366
1744:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ch = SecSkipSpaceChar(stream, &charCount);
 5399              		.loc 1 1744 22
 5400 0304 488D95C8 		leaq	-568(%rbp), %rdx
 5400      FDFFFF
 5401 030b 488B85B8 		movq	-584(%rbp), %rax
 5401      FDFFFF
 5402 0312 4889D6   		movq	%rdx, %rsi
 5403 0315 4889C7   		movq	%rax, %rdi
 5404 0318 E8000000 		call	SecSkipSpaceChar
 5404      00
 5405 031d 8985D0FD 		movl	%eax, -560(%rbp)
 5405      FFFF
 5406              		.loc 1 1744 20
 5407 0323 EB1F     		jmp	.L367
 5408              	.L366:
1745:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             } else {
1746:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ch = SecGetChar(stream, &charCount);
 5409              		.loc 1 1746 22
 5410 0325 488D95C8 		leaq	-568(%rbp), %rdx
 5410      FDFFFF
 5411 032c 488B85B8 		movq	-584(%rbp), %rax
 5411      FDFFFF
 5412 0333 4889D6   		movq	%rdx, %rsi
 5413 0336 4889C7   		movq	%rax, %rdi
 5414 0339 E8000000 		call	SecGetChar
 5414      00
 5415 033e 8985D0FD 		movl	%eax, -560(%rbp)
 5415      FFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 140


 5416              	.L367:
1747:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1748:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (ch == SECUREC_EOF) {
 5417              		.loc 1 1748 16
 5418 0344 83BDD0FD 		cmpl	$-1, -560(%rbp)
 5418      FFFFFF
 5419 034b 750C     		jne	.L365
1749:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ++errRet;
 5420              		.loc 1 1749 17
 5421 034d 8385E0FD 		addl	$1, -544(%rbp)
 5421      FFFF01
1750:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
 5422              		.loc 1 1750 17
 5423 0354 E9550600 		jmp	.L356
 5423      00
 5424              	.L365:
1751:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1752:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1753:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1754:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* now no 0 width in format and get one char from input */
1755:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         switch (spec.comChr) {
 5425              		.loc 1 1755 21
 5426 0359 8B8528FE 		movl	-472(%rbp), %eax
 5426      FFFF
 5427 035f 83E863   		subl	$99, %eax
 5428 0362 83F818   		cmpl	$24, %eax
 5429 0365 0F87A805 		ja	.L368
 5429      0000
 5430 036b 89C0     		movl	%eax, %eax
 5431 036d 488D1485 		leaq	0(,%rax,4), %rdx
 5431      00000000 
 5432 0375 488D0500 		leaq	.L370(%rip), %rax
 5432      000000
 5433 037c 8B0402   		movl	(%rdx,%rax), %eax
 5434 037f 4898     		cltq
 5435 0381 488D1500 		leaq	.L370(%rip), %rdx
 5435      000000
 5436 0388 4801D0   		addq	%rdx, %rax
 5437 038b 3EFFE0   		notrack jmp	*%rax
 5438              		.section	.rodata.SecInputS,"a",@progbits
 5439              		.align 4
 5440              		.align 4
 5441              	.L370:
 5442 0000 00000000 		.long	.L369-.L370
 5443 0004 00000000 		.long	.L371-.L370
 5444 0008 00000000 		.long	.L374-.L370
 5445 000c 00000000 		.long	.L374-.L370
 5446 0010 00000000 		.long	.L374-.L370
 5447 0014 00000000 		.long	.L368-.L370
 5448 0018 00000000 		.long	.L371-.L370
 5449 001c 00000000 		.long	.L368-.L370
 5450 0020 00000000 		.long	.L368-.L370
 5451 0024 00000000 		.long	.L368-.L370
 5452 0028 00000000 		.long	.L368-.L370
 5453 002c 00000000 		.long	.L373-.L370
 5454 0030 00000000 		.long	.L371-.L370
 5455 0034 00000000 		.long	.L372-.L370
GAS LISTING /tmp/ccLrrfHE.s 			page 141


 5456 0038 00000000 		.long	.L368-.L370
 5457 003c 00000000 		.long	.L368-.L370
 5458 0040 00000000 		.long	.L369-.L370
 5459 0044 00000000 		.long	.L368-.L370
 5460 0048 00000000 		.long	.L371-.L370
 5461 004c 00000000 		.long	.L368-.L370
 5462 0050 00000000 		.long	.L368-.L370
 5463 0054 00000000 		.long	.L371-.L370
 5464 0058 00000000 		.long	.L368-.L370
 5465 005c 00000000 		.long	.L368-.L370
 5466 0060 00000000 		.long	.L369-.L370
 5467              		.section	.text.SecInputS
 5468              	.L369:
1756:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('c'): /* also 'C' */
1757:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* fall-through */ /* FALLTHRU */
1758:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('s'): /* also 'S': */
1759:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* fall-through */ /* FALLTHRU */
1760:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_BRACE:
1761:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* check dest buffer and size */
1762:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (spec.suppress == 0) {
 5469              		.loc 1 1762 25
 5470 038e 0FB68531 		movzbl	-463(%rbp), %eax
 5470      FEFFFF
 5471              		.loc 1 1762 20
 5472 0395 84C0     		testb	%al, %al
 5473 0397 0F855501 		jne	.L375
 5473      0000
1763:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.argPtr = (void *)va_arg(argList, void *);
 5474              		.loc 1 1763 35
 5475 039d 488B85A8 		movq	-600(%rbp), %rax
 5475      FDFFFF
 5476 03a4 8B00     		movl	(%rax), %eax
 5477 03a6 83F82F   		cmpl	$47, %eax
 5478 03a9 7730     		ja	.L376
 5479 03ab 488B85A8 		movq	-600(%rbp), %rax
 5479      FDFFFF
 5480 03b2 488B5010 		movq	16(%rax), %rdx
 5481 03b6 488B85A8 		movq	-600(%rbp), %rax
 5481      FDFFFF
 5482 03bd 8B00     		movl	(%rax), %eax
 5483 03bf 89C0     		movl	%eax, %eax
 5484 03c1 4801D0   		addq	%rdx, %rax
 5485 03c4 488B95A8 		movq	-600(%rbp), %rdx
 5485      FDFFFF
 5486 03cb 8B12     		movl	(%rdx), %edx
 5487 03cd 8D4A08   		leal	8(%rdx), %ecx
 5488 03d0 488B95A8 		movq	-600(%rbp), %rdx
 5488      FDFFFF
 5489 03d7 890A     		movl	%ecx, (%rdx)
 5490 03d9 EB1A     		jmp	.L377
 5491              	.L376:
 5492 03db 488B85A8 		movq	-600(%rbp), %rax
 5492      FDFFFF
 5493 03e2 488B4008 		movq	8(%rax), %rax
 5494 03e6 488D4808 		leaq	8(%rax), %rcx
 5495 03ea 488B95A8 		movq	-600(%rbp), %rdx
 5495      FDFFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 142


 5496 03f1 48894A08 		movq	%rcx, 8(%rdx)
 5497              	.L377:
 5498 03f5 488B00   		movq	(%rax), %rax
 5499              		.loc 1 1763 33
 5500 03f8 48898510 		movq	%rax, -496(%rbp)
 5500      FEFFFF
1764:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.argPtr == NULL) {
 5501              		.loc 1 1764 29
 5502 03ff 488B8510 		movq	-496(%rbp), %rax
 5502      FEFFFF
 5503              		.loc 1 1764 24
 5504 0406 4885C0   		testq	%rax, %rax
 5505 0409 7516     		jne	.L378
1765:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         paraIsNull = 1;
 5506              		.loc 1 1765 36
 5507 040b C785D8FD 		movl	$1, -552(%rbp)
 5507      FFFF0100 
 5507      0000
1766:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5508              		.loc 1 1766 25
 5509 0415 8385E0FD 		addl	$1, -544(%rbp)
 5509      FFFF01
1767:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5510              		.loc 1 1767 25
 5511 041c E98D0500 		jmp	.L356
 5511      00
 5512              	.L378:
1768:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1769:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     /* Get the next argument - size of the array in characters */
1770:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
1771:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.arrayWidth = ((size_t)(va_arg(argList, size_t))) & 0xFFFFFFFFUL;
 5513              		.loc 1 1771 49
 5514 0421 488B85A8 		movq	-600(%rbp), %rax
 5514      FDFFFF
 5515 0428 8B00     		movl	(%rax), %eax
 5516 042a 83F82F   		cmpl	$47, %eax
 5517 042d 7730     		ja	.L379
 5518 042f 488B85A8 		movq	-600(%rbp), %rax
 5518      FDFFFF
 5519 0436 488B5010 		movq	16(%rax), %rdx
 5520 043a 488B85A8 		movq	-600(%rbp), %rax
 5520      FDFFFF
 5521 0441 8B00     		movl	(%rax), %eax
 5522 0443 89C0     		movl	%eax, %eax
 5523 0445 4801D0   		addq	%rdx, %rax
 5524 0448 488B95A8 		movq	-600(%rbp), %rdx
 5524      FDFFFF
 5525 044f 8B12     		movl	(%rdx), %edx
 5526 0451 8D4A08   		leal	8(%rdx), %ecx
 5527 0454 488B95A8 		movq	-600(%rbp), %rdx
 5527      FDFFFF
 5528 045b 890A     		movl	%ecx, (%rdx)
 5529 045d EB1A     		jmp	.L380
 5530              	.L379:
 5531 045f 488B85A8 		movq	-600(%rbp), %rax
 5531      FDFFFF
 5532 0466 488B4008 		movq	8(%rax), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 143


 5533 046a 488D4808 		leaq	8(%rax), %rcx
 5534 046e 488B95A8 		movq	-600(%rbp), %rdx
 5534      FDFFFF
 5535 0475 48894A08 		movq	%rcx, 8(%rdx)
 5536              	.L380:
 5537 0479 488B00   		movq	(%rax), %rax
 5538              		.loc 1 1771 75
 5539 047c 89C0     		movl	%eax, %eax
 5540              		.loc 1 1771 37
 5541 047e 48898518 		movq	%rax, -488(%rbp)
 5541      FEFFFF
1772:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else /* !SECUREC_ON_64BITS */
1773:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.arrayWidth = (size_t)va_arg(argList, size_t);
1774:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1775:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.arrayWidth == 0 || (spec.isWChar <= 0 && spec.arrayWidth > SECUREC_STR
 5542              		.loc 1 1775 29
 5543 0485 488B8518 		movq	-488(%rbp), %rax
 5543      FEFFFF
 5544              		.loc 1 1775 24
 5545 048c 4885C0   		testq	%rax, %rax
 5546 048f 7436     		je	.L381
 5547              		.loc 1 1775 54 discriminator 1
 5548 0491 0FB68530 		movzbl	-464(%rbp), %eax
 5548      FEFFFF
 5549              		.loc 1 1775 46 discriminator 1
 5550 0498 84C0     		testb	%al, %al
 5551 049a 7F11     		jg	.L382
 5552              		.loc 1 1775 75 discriminator 2
 5553 049c 488B8518 		movq	-488(%rbp), %rax
 5553      FEFFFF
 5554              		.loc 1 1775 68 discriminator 2
 5555 04a3 BA000000 		movl	$2147483648, %edx
 5555      80
 5556 04a8 4839D0   		cmpq	%rdx, %rax
 5557 04ab 731A     		jnb	.L381
 5558              	.L382:
1776:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         (spec.isWChar > 0 && spec.arrayWidth > SECUREC_WCHAR_STRING_MAX_LEN)) {
 5559              		.loc 1 1776 30 discriminator 4
 5560 04ad 0FB68530 		movzbl	-464(%rbp), %eax
 5560      FEFFFF
1775:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         (spec.isWChar > 0 && spec.arrayWidth > SECUREC_WCHAR_STRING_MAX_LEN)) {
 5561              		.loc 1 1775 113 discriminator 4
 5562 04b4 84C0     		testb	%al, %al
 5563 04b6 7E1B     		jle	.L383
 5564              		.loc 1 1776 50
 5565 04b8 488B8518 		movq	-488(%rbp), %rax
 5565      FEFFFF
 5566              		.loc 1 1776 43
 5567 04bf 483DFFFF 		cmpq	$536870911, %rax
 5567      FF1F
 5568 04c5 760C     		jbe	.L383
 5569              	.L381:
1777:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         /* do not clear buffer just go error */
1778:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5570              		.loc 1 1778 25
 5571 04c7 8385E0FD 		addl	$1, -544(%rbp)
 5571      FFFF01
GAS LISTING /tmp/ccLrrfHE.s 			page 144


1779:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5572              		.loc 1 1779 25
 5573 04ce E9DB0400 		jmp	.L356
 5573      00
 5574              	.L383:
1780:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1781:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     /* One element is needed for '\0' for %s and %[ */
1782:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.comChr != SECUREC_CHAR('c')) {
 5575              		.loc 1 1782 29
 5576 04d3 8B8528FE 		movl	-472(%rbp), %eax
 5576      FFFF
 5577              		.loc 1 1782 24
 5578 04d9 83F863   		cmpl	$99, %eax
 5579 04dc 741F     		je	.L384
1783:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         --spec.arrayWidth;
 5580              		.loc 1 1783 31
 5581 04de 488B8518 		movq	-488(%rbp), %rax
 5581      FEFFFF
 5582              		.loc 1 1783 25
 5583 04e5 4883E801 		subq	$1, %rax
 5584 04e9 48898518 		movq	%rax, -488(%rbp)
 5584      FEFFFF
 5585 04f0 EB0B     		jmp	.L384
 5586              	.L375:
1784:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1785:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 } else {
1786:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     /*  Set argPtr to  NULL  is necessary, in supress mode we don't use argPtr to s
1787:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.argPtr = NULL;
 5587              		.loc 1 1787 33
 5588 04f2 48C78510 		movq	$0, -496(%rbp)
 5588      FEFFFF00 
 5588      000000
 5589              	.L384:
1788:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1789:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1790:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (spec.comChr == 'c') {
 5590              		.loc 1 1790 25
 5591 04fd 8B8528FE 		movl	-472(%rbp), %eax
 5591      FFFF
 5592              		.loc 1 1790 20
 5593 0503 83F863   		cmpl	$99, %eax
 5594 0506 7527     		jne	.L385
1791:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.widthSet == 0) {
 5595              		.loc 1 1791 29
 5596 0508 8B8524FE 		movl	-476(%rbp), %eax
 5596      FFFF
 5597              		.loc 1 1791 24
 5598 050e 85C0     		testl	%eax, %eax
 5599 0510 0F85B400 		jne	.L386
 5599      0000
1792:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         spec.widthSet = 1;
 5600              		.loc 1 1792 39
 5601 0516 C78524FE 		movl	$1, -476(%rbp)
 5601      FFFF0100 
 5601      0000
1793:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         spec.width = 1;
 5602              		.loc 1 1793 36
GAS LISTING /tmp/ccLrrfHE.s 			page 145


 5603 0520 C78520FE 		movl	$1, -480(%rbp)
 5603      FFFF0100 
 5603      0000
 5604 052a E99B0000 		jmp	.L386
 5604      00
 5605              	.L385:
1794:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1795:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 } else if (spec.comChr == SECUREC_BRACE) {
 5606              		.loc 1 1795 32
 5607 052f 8B8528FE 		movl	-472(%rbp), %eax
 5607      FFFF
 5608              		.loc 1 1795 27
 5609 0535 83F87B   		cmpl	$123, %eax
 5610 0538 0F858C00 		jne	.L386
 5610      0000
1796:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     /* malloc  when  first %[ is meet  for wchar version */
1797:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1798:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (SecAllocBracketTable(&bracketTable) != 0) {
1799:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
1800:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
1801:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1802:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1803:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1804:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     (void)memset(bracketTable.table, 0, (size_t)SECUREC_BRACKET_TABLE_SIZE);
 5611              		.loc 1 1804 27
 5612 053e 488D8540 		leaq	-448(%rbp), %rax
 5612      FEFFFF
 5613 0545 BA200000 		movl	$32, %edx
 5613      00
 5614 054a BE000000 		movl	$0, %esi
 5614      00
 5615 054f 4889C7   		movq	%rax, %rdi
 5616 0552 E8000000 		call	memset@PLT
 5616      00
1805:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (SecSetupBracketTable(&format, &bracketTable) != 0) {
 5617              		.loc 1 1805 25
 5618 0557 488D9540 		leaq	-448(%rbp), %rdx
 5618      FEFFFF
 5619 055e 488D85E8 		leaq	-536(%rbp), %rax
 5619      FDFFFF
 5620 0565 4889D6   		movq	%rdx, %rsi
 5621 0568 4889C7   		movq	%rax, %rdi
 5622 056b E8000000 		call	SecSetupBracketTable
 5622      00
 5623              		.loc 1 1805 24
 5624 0570 85C0     		testl	%eax, %eax
 5625 0572 740C     		je	.L387
1806:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5626              		.loc 1 1806 25
 5627 0574 8385E0FD 		addl	$1, -544(%rbp)
 5627      FFFF01
1807:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5628              		.loc 1 1807 25
 5629 057b E92E0400 		jmp	.L356
 5629      00
 5630              	.L387:
1808:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
GAS LISTING /tmp/ccLrrfHE.s 			page 146


1809:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1810:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (*format == SECUREC_CHAR('\0')) {
 5631              		.loc 1 1810 25
 5632 0580 488B85E8 		movq	-536(%rbp), %rax
 5632      FDFFFF
 5633 0587 0FB600   		movzbl	(%rax), %eax
 5634              		.loc 1 1810 24
 5635 058a 84C0     		testb	%al, %al
 5636 058c 753C     		jne	.L386
1811:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         if (spec.suppress == 0 && spec.arrayWidth > 0) {
 5637              		.loc 1 1811 33
 5638 058e 0FB68531 		movzbl	-463(%rbp), %eax
 5638      FEFFFF
 5639              		.loc 1 1811 28
 5640 0595 84C0     		testb	%al, %al
 5641 0597 7525     		jne	.L388
 5642              		.loc 1 1811 55 discriminator 1
 5643 0599 488B8518 		movq	-488(%rbp), %rax
 5643      FEFFFF
 5644              		.loc 1 1811 48 discriminator 1
 5645 05a0 4885C0   		testq	%rax, %rax
 5646 05a3 7419     		je	.L388
1812:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                             SecAddEndingZero(spec.argPtr, &spec);
 5647              		.loc 1 1812 29
 5648 05a5 488B8510 		movq	-496(%rbp), %rax
 5648      FEFFFF
 5649 05ac 488D95F0 		leaq	-528(%rbp), %rdx
 5649      FDFFFF
 5650 05b3 4889D6   		movq	%rdx, %rsi
 5651 05b6 4889C7   		movq	%rax, %rdi
 5652 05b9 E8000000 		call	SecAddEndingZero
 5652      00
 5653              	.L388:
1813:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         }
1814:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5654              		.loc 1 1814 25
 5655 05be 8385E0FD 		addl	$1, -544(%rbp)
 5655      FFFF01
1815:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         /* truncated format */
1816:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5656              		.loc 1 1816 25
 5657 05c5 E9E40300 		jmp	.L356
 5657      00
 5658              	.L386:
1817:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1818:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1819:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1820:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* un set last char to stream */
1821:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SecUnGetChar(ch, stream, &charCount);
 5659              		.loc 1 1821 17
 5660 05ca 488D95C8 		leaq	-568(%rbp), %rdx
 5660      FDFFFF
 5661 05d1 488B8DB8 		movq	-584(%rbp), %rcx
 5661      FDFFFF
 5662 05d8 8B85D0FD 		movl	-560(%rbp), %eax
 5662      FFFF
 5663 05de 4889CE   		movq	%rcx, %rsi
GAS LISTING /tmp/ccLrrfHE.s 			page 147


 5664 05e1 89C7     		movl	%eax, %edi
 5665 05e3 E8000000 		call	SecUnGetChar
 5665      00
1822:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* scanset completed.  Now read string */
1823:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (SecInputString(stream, &spec, &bracketTable, &charCount, &doneCount) != 0) {
 5666              		.loc 1 1823 21
 5667 05e8 488DBDCC 		leaq	-564(%rbp), %rdi
 5667      FDFFFF
 5668 05ef 488D8DC8 		leaq	-568(%rbp), %rcx
 5668      FDFFFF
 5669 05f6 488D9540 		leaq	-448(%rbp), %rdx
 5669      FEFFFF
 5670 05fd 488DB5F0 		leaq	-528(%rbp), %rsi
 5670      FDFFFF
 5671 0604 488B85B8 		movq	-584(%rbp), %rax
 5671      FDFFFF
 5672 060b 4989F8   		movq	%rdi, %r8
 5673 060e 4889C7   		movq	%rax, %rdi
 5674 0611 E8000000 		call	SecInputString
 5674      00
 5675              		.loc 1 1823 20
 5676 0616 85C0     		testl	%eax, %eax
 5677 0618 0F844403 		je	.L416
 5677      0000
1824:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++errRet;
 5678              		.loc 1 1824 21
 5679 061e 8385E0FD 		addl	$1, -544(%rbp)
 5679      FFFF01
1825:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     continue;
 5680              		.loc 1 1825 21
 5681 0625 E9840300 		jmp	.L356
 5681      00
 5682              	.L372:
1826:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1827:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
1828:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('p'):
1829:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* make %hp same as %p */
1830:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec.numberWidth = SECUREC_NUM_WIDTH_INT;
 5683              		.loc 1 1830 34
 5684 062a C78500FE 		movl	$1, -512(%rbp)
 5684      FFFF0100 
 5684      0000
1831:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_ON_64BITS
1832:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 spec.isInt64Arg = 1;
 5685              		.loc 1 1832 33
 5686 0634 C78504FE 		movl	$1, -508(%rbp)
 5686      FFFF0100 
 5686      0000
 5687              	.L371:
1833:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1834:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* fall-through */ /* FALLTHRU */
1835:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('o'):    /* fall-through */ /* FALLTHRU */
1836:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('u'):    /* fall-through */ /* FALLTHRU */
1837:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('d'):    /* fall-through */ /* FALLTHRU */
1838:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('i'):    /* fall-through */ /* FALLTHRU */
1839:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('x'):
1840:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* un set last char to stream */
GAS LISTING /tmp/ccLrrfHE.s 			page 148


1841:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SecUnGetChar(ch, stream, &charCount);
 5688              		.loc 1 1841 17
 5689 063e 488D95C8 		leaq	-568(%rbp), %rdx
 5689      FDFFFF
 5690 0645 488B8DB8 		movq	-584(%rbp), %rcx
 5690      FDFFFF
 5691 064c 8B85D0FD 		movl	-560(%rbp), %eax
 5691      FFFF
 5692 0652 4889CE   		movq	%rcx, %rsi
 5693 0655 89C7     		movl	%eax, %edi
 5694 0657 E8000000 		call	SecUnGetChar
 5694      00
1842:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (SecInputNumber(stream, &spec, &charCount) != 0) {
 5695              		.loc 1 1842 21
 5696 065c 488D95C8 		leaq	-568(%rbp), %rdx
 5696      FDFFFF
 5697 0663 488D8DF0 		leaq	-528(%rbp), %rcx
 5697      FDFFFF
 5698 066a 488B85B8 		movq	-584(%rbp), %rax
 5698      FDFFFF
 5699 0671 4889CE   		movq	%rcx, %rsi
 5700 0674 4889C7   		movq	%rax, %rdi
 5701 0677 E8000000 		call	SecInputNumber
 5701      00
 5702              		.loc 1 1842 20
 5703 067c 85C0     		testl	%eax, %eax
 5704 067e 740C     		je	.L391
1843:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++errRet;
 5705              		.loc 1 1843 21
 5706 0680 8385E0FD 		addl	$1, -544(%rbp)
 5706      FFFF01
1844:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     continue;
 5707              		.loc 1 1844 21
 5708 0687 E9220300 		jmp	.L356
 5708      00
 5709              	.L391:
1845:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1846:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (spec.suppress == 0) {
 5710              		.loc 1 1846 25
 5711 068c 0FB68531 		movzbl	-463(%rbp), %eax
 5711      FEFFFF
 5712              		.loc 1 1846 20
 5713 0693 84C0     		testb	%al, %al
 5714 0695 0F85CA02 		jne	.L417
 5714      0000
1847:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.argPtr = (void *)va_arg(argList, void *);
 5715              		.loc 1 1847 35
 5716 069b 488B85A8 		movq	-600(%rbp), %rax
 5716      FDFFFF
 5717 06a2 8B00     		movl	(%rax), %eax
 5718 06a4 83F82F   		cmpl	$47, %eax
 5719 06a7 7730     		ja	.L393
 5720 06a9 488B85A8 		movq	-600(%rbp), %rax
 5720      FDFFFF
 5721 06b0 488B5010 		movq	16(%rax), %rdx
 5722 06b4 488B85A8 		movq	-600(%rbp), %rax
 5722      FDFFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 149


 5723 06bb 8B00     		movl	(%rax), %eax
 5724 06bd 89C0     		movl	%eax, %eax
 5725 06bf 4801D0   		addq	%rdx, %rax
 5726 06c2 488B95A8 		movq	-600(%rbp), %rdx
 5726      FDFFFF
 5727 06c9 8B12     		movl	(%rdx), %edx
 5728 06cb 8D4A08   		leal	8(%rdx), %ecx
 5729 06ce 488B95A8 		movq	-600(%rbp), %rdx
 5729      FDFFFF
 5730 06d5 890A     		movl	%ecx, (%rdx)
 5731 06d7 EB1A     		jmp	.L394
 5732              	.L393:
 5733 06d9 488B85A8 		movq	-600(%rbp), %rax
 5733      FDFFFF
 5734 06e0 488B4008 		movq	8(%rax), %rax
 5735 06e4 488D4808 		leaq	8(%rax), %rcx
 5736 06e8 488B95A8 		movq	-600(%rbp), %rdx
 5736      FDFFFF
 5737 06ef 48894A08 		movq	%rcx, 8(%rdx)
 5738              	.L394:
 5739 06f3 488B00   		movq	(%rax), %rax
 5740              		.loc 1 1847 33
 5741 06f6 48898510 		movq	%rax, -496(%rbp)
 5741      FEFFFF
1848:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.argPtr == NULL) {
 5742              		.loc 1 1848 29
 5743 06fd 488B8510 		movq	-496(%rbp), %rax
 5743      FEFFFF
 5744              		.loc 1 1848 24
 5745 0704 4885C0   		testq	%rax, %rax
 5746 0707 7516     		jne	.L395
1849:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         paraIsNull = 1;
 5747              		.loc 1 1849 36
 5748 0709 C785D8FD 		movl	$1, -552(%rbp)
 5748      FFFF0100 
 5748      0000
1850:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5749              		.loc 1 1850 25
 5750 0713 8385E0FD 		addl	$1, -544(%rbp)
 5750      FFFF01
1851:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5751              		.loc 1 1851 25
 5752 071a E98F0200 		jmp	.L356
 5752      00
 5753              	.L395:
1852:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1853:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     SecAssignNumber(&spec);
 5754              		.loc 1 1853 21
 5755 071f 488D85F0 		leaq	-528(%rbp), %rax
 5755      FDFFFF
 5756 0726 4889C7   		movq	%rax, %rdi
 5757 0729 E8000000 		call	SecAssignNumber
 5757      00
1854:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++doneCount;
 5758              		.loc 1 1854 21
 5759 072e 8B85CCFD 		movl	-564(%rbp), %eax
 5759      FFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 150


 5760 0734 83C001   		addl	$1, %eax
 5761 0737 8985CCFD 		movl	%eax, -564(%rbp)
 5761      FFFF
1855:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1856:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
 5762              		.loc 1 1856 17
 5763 073d E9230200 		jmp	.L417
 5763      00
 5764              	.L373:
1857:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('n'):    /* char count */
1858:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (spec.suppress == 0) {
 5765              		.loc 1 1858 25
 5766 0742 0FB68531 		movzbl	-463(%rbp), %eax
 5766      FEFFFF
 5767              		.loc 1 1858 20
 5768 0749 84C0     		testb	%al, %al
 5769 074b 0F851702 		jne	.L418
 5769      0000
1859:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.argPtr = (void *)va_arg(argList, void *);
 5770              		.loc 1 1859 35
 5771 0751 488B85A8 		movq	-600(%rbp), %rax
 5771      FDFFFF
 5772 0758 8B00     		movl	(%rax), %eax
 5773 075a 83F82F   		cmpl	$47, %eax
 5774 075d 7730     		ja	.L397
 5775 075f 488B85A8 		movq	-600(%rbp), %rax
 5775      FDFFFF
 5776 0766 488B5010 		movq	16(%rax), %rdx
 5777 076a 488B85A8 		movq	-600(%rbp), %rax
 5777      FDFFFF
 5778 0771 8B00     		movl	(%rax), %eax
 5779 0773 89C0     		movl	%eax, %eax
 5780 0775 4801D0   		addq	%rdx, %rax
 5781 0778 488B95A8 		movq	-600(%rbp), %rdx
 5781      FDFFFF
 5782 077f 8B12     		movl	(%rdx), %edx
 5783 0781 8D4A08   		leal	8(%rdx), %ecx
 5784 0784 488B95A8 		movq	-600(%rbp), %rdx
 5784      FDFFFF
 5785 078b 890A     		movl	%ecx, (%rdx)
 5786 078d EB1A     		jmp	.L398
 5787              	.L397:
 5788 078f 488B85A8 		movq	-600(%rbp), %rax
 5788      FDFFFF
 5789 0796 488B4008 		movq	8(%rax), %rax
 5790 079a 488D4808 		leaq	8(%rax), %rcx
 5791 079e 488B95A8 		movq	-600(%rbp), %rdx
 5791      FDFFFF
 5792 07a5 48894A08 		movq	%rcx, 8(%rdx)
 5793              	.L398:
 5794 07a9 488B00   		movq	(%rax), %rax
 5795              		.loc 1 1859 33
 5796 07ac 48898510 		movq	%rax, -496(%rbp)
 5796      FEFFFF
1860:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.argPtr == NULL) {
 5797              		.loc 1 1860 29
 5798 07b3 488B8510 		movq	-496(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 151


 5798      FEFFFF
 5799              		.loc 1 1860 24
 5800 07ba 4885C0   		testq	%rax, %rax
 5801 07bd 7516     		jne	.L399
1861:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         paraIsNull = 1;
 5802              		.loc 1 1861 36
 5803 07bf C785D8FD 		movl	$1, -552(%rbp)
 5803      FFFF0100 
 5803      0000
1862:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5804              		.loc 1 1862 25
 5805 07c9 8385E0FD 		addl	$1, -544(%rbp)
 5805      FFFF01
1863:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5806              		.loc 1 1863 25
 5807 07d0 E9D90100 		jmp	.L356
 5807      00
 5808              	.L399:
1864:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1865:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.number = (unsigned long)(unsigned int)charCount;
 5809              		.loc 1 1865 50
 5810 07d5 8B85C8FD 		movl	-568(%rbp), %eax
 5810      FFFF
 5811              		.loc 1 1865 35
 5812 07db 89C0     		movl	%eax, %eax
 5813              		.loc 1 1865 33
 5814 07dd 488985F8 		movq	%rax, -520(%rbp)
 5814      FDFFFF
1866:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.isInt64Arg = 0;
 5815              		.loc 1 1866 37
 5816 07e4 C78504FE 		movl	$0, -508(%rbp)
 5816      FFFF0000 
 5816      0000
1867:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     SecAssignNumber(&spec);
 5817              		.loc 1 1867 21
 5818 07ee 488D85F0 		leaq	-528(%rbp), %rax
 5818      FDFFFF
 5819 07f5 4889C7   		movq	%rax, %rdi
 5820 07f8 E8000000 		call	SecAssignNumber
 5820      00
1868:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1869:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
 5821              		.loc 1 1869 17
 5822 07fd E9660100 		jmp	.L418
 5822      00
 5823              	.L374:
1870:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('e'):    /* fall-through */ /* FALLTHRU */
1871:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('f'):    /* fall-through */ /* FALLTHRU */
1872:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('g'):    /* scan a float */
1873:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
1874:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 /* un set last char to stream */
1875:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 SecUnGetChar(ch, stream, &charCount);
 5824              		.loc 1 1875 17
 5825 0802 488D95C8 		leaq	-568(%rbp), %rdx
 5825      FDFFFF
 5826 0809 488B8DB8 		movq	-584(%rbp), %rcx
 5826      FDFFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 152


 5827 0810 8B85D0FD 		movl	-560(%rbp), %eax
 5827      FFFF
 5828 0816 4889CE   		movq	%rcx, %rsi
 5829 0819 89C7     		movl	%eax, %edi
 5830 081b E8000000 		call	SecUnGetChar
 5830      00
1876:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (SecInputFloat(stream, &spec, &floatSpec, &charCount) != 0) {
 5831              		.loc 1 1876 21
 5832 0820 488D8DC8 		leaq	-568(%rbp), %rcx
 5832      FDFFFF
 5833 0827 488D9570 		leaq	-400(%rbp), %rdx
 5833      FEFFFF
 5834 082e 488DB5F0 		leaq	-528(%rbp), %rsi
 5834      FDFFFF
 5835 0835 488B85B8 		movq	-584(%rbp), %rax
 5835      FDFFFF
 5836 083c 4889C7   		movq	%rax, %rdi
 5837 083f E8000000 		call	SecInputFloat
 5837      00
 5838              		.loc 1 1876 20
 5839 0844 85C0     		testl	%eax, %eax
 5840 0846 740C     		je	.L400
1877:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++errRet;
 5841              		.loc 1 1877 21
 5842 0848 8385E0FD 		addl	$1, -544(%rbp)
 5842      FFFF01
1878:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     continue;
 5843              		.loc 1 1878 21
 5844 084f E95A0100 		jmp	.L356
 5844      00
 5845              	.L400:
1879:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1880:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if (spec.suppress == 0) {
 5846              		.loc 1 1880 25
 5847 0854 0FB68531 		movzbl	-463(%rbp), %eax
 5847      FEFFFF
 5848              		.loc 1 1880 20
 5849 085b 84C0     		testb	%al, %al
 5850 085d 0F850801 		jne	.L419
 5850      0000
1881:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     spec.argPtr = (void *)va_arg(argList, void *);
 5851              		.loc 1 1881 35
 5852 0863 488B85A8 		movq	-600(%rbp), %rax
 5852      FDFFFF
 5853 086a 8B00     		movl	(%rax), %eax
 5854 086c 83F82F   		cmpl	$47, %eax
 5855 086f 7730     		ja	.L402
 5856 0871 488B85A8 		movq	-600(%rbp), %rax
 5856      FDFFFF
 5857 0878 488B5010 		movq	16(%rax), %rdx
 5858 087c 488B85A8 		movq	-600(%rbp), %rax
 5858      FDFFFF
 5859 0883 8B00     		movl	(%rax), %eax
 5860 0885 89C0     		movl	%eax, %eax
 5861 0887 4801D0   		addq	%rdx, %rax
 5862 088a 488B95A8 		movq	-600(%rbp), %rdx
 5862      FDFFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 153


 5863 0891 8B12     		movl	(%rdx), %edx
 5864 0893 8D4A08   		leal	8(%rdx), %ecx
 5865 0896 488B95A8 		movq	-600(%rbp), %rdx
 5865      FDFFFF
 5866 089d 890A     		movl	%ecx, (%rdx)
 5867 089f EB1A     		jmp	.L403
 5868              	.L402:
 5869 08a1 488B85A8 		movq	-600(%rbp), %rax
 5869      FDFFFF
 5870 08a8 488B4008 		movq	8(%rax), %rax
 5871 08ac 488D4808 		leaq	8(%rax), %rcx
 5872 08b0 488B95A8 		movq	-600(%rbp), %rdx
 5872      FDFFFF
 5873 08b7 48894A08 		movq	%rcx, 8(%rdx)
 5874              	.L403:
 5875 08bb 488B00   		movq	(%rax), %rax
 5876              		.loc 1 1881 33
 5877 08be 48898510 		movq	%rax, -496(%rbp)
 5877      FEFFFF
1882:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (spec.argPtr == NULL) {
 5878              		.loc 1 1882 29
 5879 08c5 488B8510 		movq	-496(%rbp), %rax
 5879      FEFFFF
 5880              		.loc 1 1882 24
 5881 08cc 4885C0   		testq	%rax, %rax
 5882 08cf 7516     		jne	.L404
1883:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
 5883              		.loc 1 1883 25
 5884 08d1 8385E0FD 		addl	$1, -544(%rbp)
 5884      FFFF01
1884:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         paraIsNull = 1;
 5885              		.loc 1 1884 36
 5886 08d8 C785D8FD 		movl	$1, -552(%rbp)
 5886      FFFF0100 
 5886      0000
1885:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
 5887              		.loc 1 1885 25
 5888 08e2 E9C70000 		jmp	.L356
 5888      00
 5889              	.L404:
1886:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1887:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1888:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     if (SecAssignFloatW(&floatSpec, &spec) != 0) {
1889:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         ++errRet;
1890:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                         continue;
1891:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     }
1892:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1893:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     SecAssignFloat(floatSpec.floatStr, spec.numberWidth, spec.argPtr);
 5890              		.loc 1 1893 21
 5891 08e7 488B9510 		movq	-496(%rbp), %rdx
 5891      FEFFFF
 5892 08ee 8B8D00FE 		movl	-512(%rbp), %ecx
 5892      FFFF
 5893              		.loc 1 1893 45
 5894 08f4 488B45E0 		movq	-32(%rbp), %rax
 5895              		.loc 1 1893 21
 5896 08f8 89CE     		movl	%ecx, %esi
GAS LISTING /tmp/ccLrrfHE.s 			page 154


 5897 08fa 4889C7   		movq	%rax, %rdi
 5898 08fd E8000000 		call	SecAssignFloat
 5898      00
1894:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1895:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++doneCount;
 5899              		.loc 1 1895 21
 5900 0902 8B85CCFD 		movl	-564(%rbp), %eax
 5900      FFFF
 5901 0908 83C001   		addl	$1, %eax
 5902 090b 8985CCFD 		movl	%eax, -564(%rbp)
 5902      FFFF
1896:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1897:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1898:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 break;
 5903              		.loc 1 1898 17
 5904 0911 EB58     		jmp	.L419
 5905              	.L368:
1899:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else /* SECUREC_ENABLE_SCANF_FLOAT */
1900:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 ++errRet;
1901:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 continue;
1902:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1903:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             default:
1904:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 if ((int)(*format) != (int)ch) {
 5906              		.loc 1 1904 27
 5907 0913 488B85E8 		movq	-536(%rbp), %rax
 5907      FDFFFF
 5908 091a 0FB600   		movzbl	(%rax), %eax
 5909              		.loc 1 1904 21
 5910 091d 0FB6C0   		movzbl	%al, %eax
 5911              		.loc 1 1904 20
 5912 0920 3985D0FD 		cmpl	%eax, -560(%rbp)
 5912      FFFF
 5913 0926 7431     		je	.L405
1905:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     SecUnGetChar(ch, stream, &charCount);
 5914              		.loc 1 1905 21
 5915 0928 488D95C8 		leaq	-568(%rbp), %rdx
 5915      FDFFFF
 5916 092f 488B8DB8 		movq	-584(%rbp), %rcx
 5916      FDFFFF
 5917 0936 8B85D0FD 		movl	-560(%rbp), %eax
 5917      FFFF
 5918 093c 4889CE   		movq	%rcx, %rsi
 5919 093f 89C7     		movl	%eax, %edi
 5920 0941 E8000000 		call	SecUnGetChar
 5920      00
1906:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     formatError = 1;
 5921              		.loc 1 1906 33
 5922 0946 C785D4FD 		movl	$1, -556(%rbp)
 5922      FFFF0100 
 5922      0000
1907:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     ++errRet;
 5923              		.loc 1 1907 21
 5924 0950 8385E0FD 		addl	$1, -544(%rbp)
 5924      FFFF01
1908:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     continue;
 5925              		.loc 1 1908 21
 5926 0957 EB55     		jmp	.L356
GAS LISTING /tmp/ccLrrfHE.s 			page 155


 5927              	.L405:
1909:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 } else {
1910:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                     --match;
 5928              		.loc 1 1910 21
 5929 0959 83ADDCFD 		subl	$1, -548(%rbp)
 5929      FFFF01
 5930 0960 EB0A     		jmp	.L390
 5931              	.L416:
1827:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('p'):
 5932              		.loc 1 1827 17
 5933 0962 90       		nop
 5934 0963 EB07     		jmp	.L390
 5935              	.L417:
1856:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('n'):    /* char count */
 5936              		.loc 1 1856 17
 5937 0965 90       		nop
 5938 0966 EB04     		jmp	.L390
 5939              	.L418:
1869:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             case SECUREC_CHAR('e'):    /* fall-through */ /* FALLTHRU */
 5940              		.loc 1 1869 17
 5941 0968 90       		nop
 5942 0969 EB01     		jmp	.L390
 5943              	.L419:
1898:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else /* SECUREC_ENABLE_SCANF_FLOAT */
 5944              		.loc 1 1898 17
 5945 096b 90       		nop
 5946              	.L390:
1911:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 }
1912:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1913:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1914:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++match;
 5947              		.loc 1 1914 9
 5948 096c 8385DCFD 		addl	$1, -548(%rbp)
 5948      FFFF01
1915:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ++format;
 5949              		.loc 1 1915 9
 5950 0973 488B85E8 		movq	-536(%rbp), %rax
 5950      FDFFFF
 5951 097a 4883C001 		addq	$1, %rax
 5952 097e 488985E8 		movq	%rax, -536(%rbp)
 5952      FDFFFF
1916:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((ch == SECUREC_EOF) && ((*format != SECUREC_CHAR('%')) || (*(format + 1) != SECUREC_CHA
 5953              		.loc 1 1916 12
 5954 0985 83BDD0FD 		cmpl	$-1, -560(%rbp)
 5954      FFFFFF
 5955 098c 7520     		jne	.L356
 5956              		.loc 1 1916 38 discriminator 1
 5957 098e 488B85E8 		movq	-536(%rbp), %rax
 5957      FDFFFF
 5958 0995 0FB600   		movzbl	(%rax), %eax
 5959              		.loc 1 1916 33 discriminator 1
 5960 0998 3C25     		cmpb	$37, %al
 5961 099a 752D     		jne	.L362
 5962              		.loc 1 1916 81 discriminator 2
 5963 099c 488B85E8 		movq	-536(%rbp), %rax
 5963      FDFFFF
 5964 09a3 4883C001 		addq	$1, %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 156


 5965              		.loc 1 1916 72 discriminator 2
 5966 09a7 0FB600   		movzbl	(%rax), %eax
 5967              		.loc 1 1916 68 discriminator 2
 5968 09aa 3C6E     		cmpb	$110, %al
 5969 09ac 751B     		jne	.L362
 5970              	.L356:
1684:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* skip space in format and space in input */
 5971              		.loc 1 1684 11
 5972 09ae 83BDE0FD 		cmpl	$0, -544(%rbp)
 5972      FFFF00
 5973 09b5 7F12     		jg	.L362
1684:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* skip space in format and space in input */
 5974              		.loc 1 1684 26 discriminator 1
 5975 09b7 488B85E8 		movq	-536(%rbp), %rax
 5975      FDFFFF
 5976 09be 0FB600   		movzbl	(%rax), %eax
1684:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* skip space in format and space in input */
 5977              		.loc 1 1684 23 discriminator 1
 5978 09c1 84C0     		testb	%al, %al
 5979 09c3 0F8505F7 		jne	.L406
 5979      FFFF
 5980              	.L362:
1917:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             break;
1918:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1919:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1920:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1921:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1922:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecFreeBracketTable(&bracketTable);
1923:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1924:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1925:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FLOAT
1926:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecClearFloatSpec(&floatSpec, &doneCount);
 5981              		.loc 1 1926 5
 5982 09c9 488D95CC 		leaq	-564(%rbp), %rdx
 5982      FDFFFF
 5983 09d0 488D8570 		leaq	-400(%rbp), %rax
 5983      FEFFFF
 5984 09d7 4889D6   		movq	%rdx, %rsi
 5985 09da 4889C7   		movq	%rax, %rdi
 5986 09dd E8000000 		call	SecClearFloatSpec
 5986      00
1927:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1928:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1929:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
1930:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecAdjustStream(stream);
 5987              		.loc 1 1930 5
 5988 09e2 488B85B8 		movq	-584(%rbp), %rax
 5988      FDFFFF
 5989 09e9 4889C7   		movq	%rax, %rdi
 5990 09ec E8000000 		call	SecAdjustStream
 5990      00
1931:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1932:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1933:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch == SECUREC_EOF) {
 5991              		.loc 1 1933 8
 5992 09f1 83BDD0FD 		cmpl	$-1, -560(%rbp)
 5992      FFFFFF
GAS LISTING /tmp/ccLrrfHE.s 			page 157


 5993 09f8 7522     		jne	.L407
1934:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return ((doneCount || match) ? doneCount : SECUREC_SCANF_EINVAL);
 5994              		.loc 1 1934 18
 5995 09fa 8B85CCFD 		movl	-564(%rbp), %eax
 5995      FFFF
 5996              		.loc 1 1934 50
 5997 0a00 85C0     		testl	%eax, %eax
 5998 0a02 7509     		jne	.L408
 5999              		.loc 1 1934 28 discriminator 2
 6000 0a04 83BDDCFD 		cmpl	$0, -548(%rbp)
 6000      FFFF00
 6001 0a0b 7408     		je	.L409
 6002              	.L408:
 6003              		.loc 1 1934 50 discriminator 3
 6004 0a0d 8B85CCFD 		movl	-564(%rbp), %eax
 6004      FFFF
 6005 0a13 EB26     		jmp	.L414
 6006              	.L409:
 6007              		.loc 1 1934 50 is_stmt 0 discriminator 4
 6008 0a15 B8FFFFFF 		movl	$-1, %eax
 6008      FF
 6009 0a1a EB1F     		jmp	.L414
 6010              	.L407:
1935:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if (formatError != 0 || paraIsNull != 0) {
 6011              		.loc 1 1935 15 is_stmt 1
 6012 0a1c 83BDD4FD 		cmpl	$0, -556(%rbp)
 6012      FFFF00
 6013 0a23 7509     		jne	.L412
 6014              		.loc 1 1935 33 discriminator 1
 6015 0a25 83BDD8FD 		cmpl	$0, -552(%rbp)
 6015      FFFF00
 6016 0a2c 7407     		je	.L413
 6017              	.L412:
1936:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* Invalid Input Format or parameter */
1937:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         return SECUREC_SCANF_ERROR_PARA;
 6018              		.loc 1 1937 16
 6019 0a2e B8FEFFFF 		movl	$-2, %eax
 6019      FF
 6020 0a33 EB06     		jmp	.L414
 6021              	.L413:
1938:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1939:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1940:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return doneCount;
 6022              		.loc 1 1940 12
 6023 0a35 8B85CCFD 		movl	-564(%rbp), %eax
 6023      FFFF
 6024              	.L414:
1941:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6025              		.loc 1 1941 1 discriminator 1
 6026 0a3b 488B75F8 		movq	-8(%rbp), %rsi
 6027 0a3f 64483334 		xorq	%fs:40, %rsi
 6027      25280000 
 6027      00
 6028 0a48 7405     		je	.L415
 6029              		.loc 1 1941 1 is_stmt 0
 6030 0a4a E8000000 		call	__stack_chk_fail@PLT
 6030      00
GAS LISTING /tmp/ccLrrfHE.s 			page 158


 6031              	.L415:
 6032 0a4f C9       		leave
 6033              	.LCFI131:
 6034              		.cfi_def_cfa 7, 8
 6035 0a50 C3       		ret
 6036              		.cfi_endproc
 6037              	.LFE49:
 6039              		.section	.text.SecGetCharFromStdin,"ax",@progbits
 6041              	SecGetCharFromStdin:
 6042              	.LFB50:
1942:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1943:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
1944:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1945:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_NO_STD_UNGETC)
1946:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1947:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Get char  from stdin or buffer
1948:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1949:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecGetCharFromStdin(SecFileStream *stream)
1950:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
1951:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch;
1952:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream->fUnget == 1) {
1953:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = (SecInt) stream->lastChar;
1954:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->fUnget = 0;
1955:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else {
1956:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SECUREC_GETC(stream->pf);
1957:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->lastChar = (unsigned int)ch;
1958:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1959:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return ch;
1960:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
1961:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1962:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
1963:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Get char  from stdin or buffer use std function
1964:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
1965:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecGetCharFromStdin(const SecFileStream *stream)
1966:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6043              		.loc 1 1966 1 is_stmt 1
 6044              		.cfi_startproc
 6045 0000 F30F1EFA 		endbr64
 6046 0004 55       		pushq	%rbp
 6047              	.LCFI132:
 6048              		.cfi_def_cfa_offset 16
 6049              		.cfi_offset 6, -16
 6050 0005 4889E5   		movq	%rsp, %rbp
 6051              	.LCFI133:
 6052              		.cfi_def_cfa_register 6
 6053 0008 4883EC20 		subq	$32, %rsp
 6054 000c 48897DE8 		movq	%rdi, -24(%rbp)
 6055              		.loc 1 1966 1
 6056 0010 64488B04 		movq	%fs:40, %rax
 6056      25280000 
 6056      00
 6057 0019 488945F8 		movq	%rax, -8(%rbp)
 6058 001d 31C0     		xorl	%eax, %eax
1967:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch;
1968:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     ch = SECUREC_GETC(stream->pf);
 6059              		.loc 1 1968 10
 6060 001f 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 159


 6061 0023 488B4018 		movq	24(%rax), %rax
 6062 0027 4889C7   		movq	%rax, %rdi
 6063 002a E8000000 		call	fgetc@PLT
 6063      00
 6064 002f 8945F4   		movl	%eax, -12(%rbp)
1969:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return ch;
 6065              		.loc 1 1969 12
 6066 0032 8B45F4   		movl	-12(%rbp), %eax
1970:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6067              		.loc 1 1970 1
 6068 0035 488B55F8 		movq	-8(%rbp), %rdx
 6069 0039 64483314 		xorq	%fs:40, %rdx
 6069      25280000 
 6069      00
 6070 0042 7405     		je	.L422
 6071 0044 E8000000 		call	__stack_chk_fail@PLT
 6071      00
 6072              	.L422:
 6073 0049 C9       		leave
 6074              	.LCFI134:
 6075              		.cfi_def_cfa 7, 8
 6076 004a C3       		ret
 6077              		.cfi_endproc
 6078              	.LFE50:
 6080              		.section	.text.SecSkipBomHeader,"ax",@progbits
 6082              	SecSkipBomHeader:
 6083              	.LFB51:
1971:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
1972:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1973:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecSkipBomHeader(SecFileStream *stream)
1974:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6084              		.loc 1 1974 1
 6085              		.cfi_startproc
 6086 0000 F30F1EFA 		endbr64
 6087 0004 55       		pushq	%rbp
 6088              	.LCFI135:
 6089              		.cfi_def_cfa_offset 16
 6090              		.cfi_offset 6, -16
 6091 0005 4889E5   		movq	%rsp, %rbp
 6092              	.LCFI136:
 6093              		.cfi_def_cfa_register 6
 6094 0008 4883EC20 		subq	$32, %rsp
 6095 000c 48897DE8 		movq	%rdi, -24(%rbp)
 6096              		.loc 1 1974 1
 6097 0010 64488B04 		movq	%fs:40, %rax
 6097      25280000 
 6097      00
 6098 0019 488945F8 		movq	%rax, -8(%rbp)
 6099 001d 31C0     		xorl	%eax, %eax
1975:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #ifdef SECUREC_FOR_WCHAR
1976:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream->count >= SECUREC_BOM_HEADER_SIZE &&
1977:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (((unsigned char)(stream->base[0]) == SECUREC_BOM_HEADER_LE_1ST &&
1978:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[1]) == SECUREC_BOM_HEADER_LE_2ST) ||
1979:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ((unsigned char)(stream->base[0]) == SECUREC_BOM_HEADER_BE_1ST &&
1980:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[1]) == SECUREC_BOM_HEADER_BE_2ST))) {
1981:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
1982:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* the stream->count must be a  multiple of  sizeof(SecChar),
GAS LISTING /tmp/ccLrrfHE.s 			page 160


1983:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          * otherwise this function will return SECUREC_EOF when read the last character
1984:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****          */
1985:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if ((stream->count - SECUREC_BOM_HEADER_SIZE) % (int)sizeof(SecChar) != 0) {
1986:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             int ret = (int)fread(stream->base + stream->count, (size_t)1,
1987:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                                  (size_t)SECUREC_BOM_HEADER_SIZE, stream->pf);
1988:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (ret > 0 && ret <= SECUREC_BUFFERED_BLOK_SIZE) {
1989:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 stream->count += ret;
1990:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
1991:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
1992:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* it's BOM header, skip */
1993:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->count -= SECUREC_BOM_HEADER_SIZE;
1994:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->cur += SECUREC_BOM_HEADER_SIZE;
1995:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
1996:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
1997:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream->count >= SECUREC_UTF8_BOM_HEADER_SIZE &&
 6100              		.loc 1 1997 15
 6101 001f 488B45E8 		movq	-24(%rbp), %rax
 6102 0023 8B4004   		movl	4(%rax), %eax
 6103              		.loc 1 1997 8
 6104 0026 83F802   		cmpl	$2, %eax
 6105 0029 7E5A     		jle	.L426
1998:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[0]) == SECUREC_UTF8_BOM_HEADER_1ST &&
 6106              		.loc 1 1998 31 discriminator 1
 6107 002b 488B45E8 		movq	-24(%rbp), %rax
 6108 002f 488B4010 		movq	16(%rax), %rax
 6109              		.loc 1 1998 37 discriminator 1
 6110 0033 0FB600   		movzbl	(%rax), %eax
1997:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[0]) == SECUREC_UTF8_BOM_HEADER_1ST &&
 6111              		.loc 1 1997 55 discriminator 1
 6112 0036 3CEF     		cmpb	$-17, %al
 6113 0038 754B     		jne	.L426
1999:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[1]) == SECUREC_UTF8_BOM_HEADER_2ND &&
 6114              		.loc 1 1999 31
 6115 003a 488B45E8 		movq	-24(%rbp), %rax
 6116 003e 488B4010 		movq	16(%rax), %rax
 6117              		.loc 1 1999 37
 6118 0042 4883C001 		addq	$1, %rax
 6119 0046 0FB600   		movzbl	(%rax), %eax
1998:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[0]) == SECUREC_UTF8_BOM_HEADER_1ST &&
 6120              		.loc 1 1998 73
 6121 0049 3CBB     		cmpb	$-69, %al
 6122 004b 7538     		jne	.L426
2000:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[2]) == SECUREC_UTF8_BOM_HEADER_3RD) { /* 2 offset of third hea
 6123              		.loc 1 2000 31
 6124 004d 488B45E8 		movq	-24(%rbp), %rax
 6125 0051 488B4010 		movq	16(%rax), %rax
 6126              		.loc 1 2000 37
 6127 0055 4883C002 		addq	$2, %rax
 6128 0059 0FB600   		movzbl	(%rax), %eax
1999:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (unsigned char)(stream->base[1]) == SECUREC_UTF8_BOM_HEADER_2ND &&
 6129              		.loc 1 1999 73
 6130 005c 3CBF     		cmpb	$-65, %al
 6131 005e 7525     		jne	.L426
2001:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* it's BOM header, skip */
2002:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->count -= SECUREC_UTF8_BOM_HEADER_SIZE;
 6132              		.loc 1 2002 23
 6133 0060 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 161


 6134 0064 8B4004   		movl	4(%rax), %eax
 6135 0067 8D50FD   		leal	-3(%rax), %edx
 6136 006a 488B45E8 		movq	-24(%rbp), %rax
 6137 006e 895004   		movl	%edx, 4(%rax)
2003:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->cur += SECUREC_UTF8_BOM_HEADER_SIZE;
 6138              		.loc 1 2003 21
 6139 0071 488B45E8 		movq	-24(%rbp), %rax
 6140 0075 488B4008 		movq	8(%rax), %rax
 6141 0079 488D5003 		leaq	3(%rax), %rdx
 6142 007d 488B45E8 		movq	-24(%rbp), %rax
 6143 0081 48895008 		movq	%rdx, 8(%rax)
 6144              	.L426:
2004:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2005:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2006:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6145              		.loc 1 2006 1
 6146 0085 90       		nop
 6147 0086 488B45F8 		movq	-8(%rbp), %rax
 6148 008a 64483304 		xorq	%fs:40, %rax
 6148      25280000 
 6148      00
 6149 0093 7405     		je	.L425
 6150 0095 E8000000 		call	__stack_chk_fail@PLT
 6150      00
 6151              	.L425:
 6152 009a C9       		leave
 6153              	.LCFI137:
 6154              		.cfi_def_cfa 7, 8
 6155 009b C3       		ret
 6156              		.cfi_endproc
 6157              	.LFE51:
 6159              		.section	.text.SecGetCharFromFile,"ax",@progbits
 6161              	SecGetCharFromFile:
 6162              	.LFB52:
2007:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
2008:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Get char  from file stream or buffer
2009:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
2010:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecGetCharFromFile(SecFileStream *stream)
2011:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6163              		.loc 1 2011 1
 6164              		.cfi_startproc
 6165 0000 F30F1EFA 		endbr64
 6166 0004 55       		pushq	%rbp
 6167              	.LCFI138:
 6168              		.cfi_def_cfa_offset 16
 6169              		.cfi_offset 6, -16
 6170 0005 4889E5   		movq	%rsp, %rbp
 6171              	.LCFI139:
 6172              		.cfi_def_cfa_register 6
 6173 0008 4883EC20 		subq	$32, %rsp
 6174 000c 48897DE8 		movq	%rdi, -24(%rbp)
 6175              		.loc 1 2011 1
 6176 0010 64488B04 		movq	%fs:40, %rax
 6176      25280000 
 6176      00
 6177 0019 488945F8 		movq	%rax, -8(%rbp)
 6178 001d 31C0     		xorl	%eax, %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 162


2012:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch;
2013:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (stream->count == 0) {
 6179              		.loc 1 2013 15
 6180 001f 488B45E8 		movq	-24(%rbp), %rax
 6181 0023 8B4004   		movl	4(%rax), %eax
 6182              		.loc 1 2013 8
 6183 0026 85C0     		testl	%eax, %eax
 6184 0028 0F851301 		jne	.L428
 6184      0000
 6185              	.LBB22:
2014:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         int firstReadOnFile = 0;
 6186              		.loc 1 2014 13
 6187 002e C745F000 		movl	$0, -16(%rbp)
 6187      000000
2015:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* load file to buffer */
2016:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (stream->base == NULL) {
 6188              		.loc 1 2016 19
 6189 0035 488B45E8 		movq	-24(%rbp), %rax
 6190 0039 488B4010 		movq	16(%rax), %rax
 6191              		.loc 1 2016 12
 6192 003d 4885C0   		testq	%rax, %rax
 6193 0040 753D     		jne	.L429
2017:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->base = (char *)SECUREC_MALLOC(SECUREC_BUFFERED_BLOK_SIZE + 1);
 6194              		.loc 1 2017 36
 6195 0042 BF010400 		movl	$1025, %edi
 6195      00
 6196 0047 E8000000 		call	malloc@PLT
 6196      00
 6197 004c 4889C2   		movq	%rax, %rdx
 6198              		.loc 1 2017 26
 6199 004f 488B45E8 		movq	-24(%rbp), %rax
 6200 0053 48895010 		movq	%rdx, 16(%rax)
2018:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             if (stream->base == NULL) {
 6201              		.loc 1 2018 23
 6202 0057 488B45E8 		movq	-24(%rbp), %rax
 6203 005b 488B4010 		movq	16(%rax), %rax
 6204              		.loc 1 2018 16
 6205 005f 4885C0   		testq	%rax, %rax
 6206 0062 750A     		jne	.L430
2019:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                 return SECUREC_EOF;
 6207              		.loc 1 2019 24
 6208 0064 B8FFFFFF 		movl	$-1, %eax
 6208      FF
 6209 0069 E9450100 		jmp	.L431
 6209      00
 6210              	.L430:
2020:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             }
2021:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->base[SECUREC_BUFFERED_BLOK_SIZE] = '\0';   /* for tool Warning string null */
 6211              		.loc 1 2021 19
 6212 006e 488B45E8 		movq	-24(%rbp), %rax
 6213 0072 488B4010 		movq	16(%rax), %rax
 6214              		.loc 1 2021 25
 6215 0076 48050004 		addq	$1024, %rax
 6215      0000
 6216              		.loc 1 2021 54
 6217 007c C60000   		movb	$0, (%rax)
 6218              	.L429:
GAS LISTING /tmp/ccLrrfHE.s 			page 163


2022:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
2023:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* LSD add 2014.3.21 */
2024:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (stream->oriFilePos == SECUREC_UNINITIALIZED_FILE_POS) {
 6219              		.loc 1 2024 19
 6220 007f 488B45E8 		movq	-24(%rbp), %rax
 6221 0083 488B4020 		movq	32(%rax), %rax
 6222              		.loc 1 2024 12
 6223 0087 4883F8FF 		cmpq	$-1, %rax
 6224 008b 751F     		jne	.L432
2025:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->oriFilePos = ftell(stream->pf);   /* save original file read position */
 6225              		.loc 1 2025 34
 6226 008d 488B45E8 		movq	-24(%rbp), %rax
 6227 0091 488B4018 		movq	24(%rax), %rax
 6228 0095 4889C7   		movq	%rax, %rdi
 6229 0098 E8000000 		call	ftell@PLT
 6229      00
 6230              		.loc 1 2025 32
 6231 009d 488B55E8 		movq	-24(%rbp), %rdx
 6232 00a1 48894220 		movq	%rax, 32(%rdx)
2026:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             firstReadOnFile = 1;
 6233              		.loc 1 2026 29
 6234 00a5 C745F001 		movl	$1, -16(%rbp)
 6234      000000
 6235              	.L432:
2027:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
2028:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->count = (int)fread(stream->base, (size_t)1, (size_t)SECUREC_BUFFERED_BLOK_SIZE, str
 6236              		.loc 1 2028 30
 6237 00ac 488B45E8 		movq	-24(%rbp), %rax
 6238 00b0 488B5018 		movq	24(%rax), %rdx
 6239              		.loc 1 2028 42
 6240 00b4 488B45E8 		movq	-24(%rbp), %rax
 6241 00b8 488B4010 		movq	16(%rax), %rax
 6242              		.loc 1 2028 30
 6243 00bc 4889D1   		movq	%rdx, %rcx
 6244 00bf BA000400 		movl	$1024, %edx
 6244      00
 6245 00c4 BE010000 		movl	$1, %esi
 6245      00
 6246 00c9 4889C7   		movq	%rax, %rdi
 6247 00cc E8000000 		call	fread@PLT
 6247      00
 6248              		.loc 1 2028 25
 6249 00d1 89C2     		movl	%eax, %edx
 6250              		.loc 1 2028 23
 6251 00d3 488B45E8 		movq	-24(%rbp), %rax
 6252 00d7 895004   		movl	%edx, 4(%rax)
2029:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->base[SECUREC_BUFFERED_BLOK_SIZE] = '\0';   /* for tool Warning string null */
 6253              		.loc 1 2029 15
 6254 00da 488B45E8 		movq	-24(%rbp), %rax
 6255 00de 488B4010 		movq	16(%rax), %rax
 6256              		.loc 1 2029 21
 6257 00e2 48050004 		addq	$1024, %rax
 6257      0000
 6258              		.loc 1 2029 50
 6259 00e8 C60000   		movb	$0, (%rax)
2030:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (stream->count == 0 || stream->count > SECUREC_BUFFERED_BLOK_SIZE) {
 6260              		.loc 1 2030 19
GAS LISTING /tmp/ccLrrfHE.s 			page 164


 6261 00eb 488B45E8 		movq	-24(%rbp), %rax
 6262 00ef 8B4004   		movl	4(%rax), %eax
 6263              		.loc 1 2030 12
 6264 00f2 85C0     		testl	%eax, %eax
 6265 00f4 740E     		je	.L433
 6266              		.loc 1 2030 41 discriminator 1
 6267 00f6 488B45E8 		movq	-24(%rbp), %rax
 6268 00fa 8B4004   		movl	4(%rax), %eax
 6269              		.loc 1 2030 32 discriminator 1
 6270 00fd 3D000400 		cmpl	$1024, %eax
 6270      00
 6271 0102 7E0A     		jle	.L434
 6272              	.L433:
2031:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             return SECUREC_EOF;
 6273              		.loc 1 2031 20
 6274 0104 B8FFFFFF 		movl	$-1, %eax
 6274      FF
 6275 0109 E9A50000 		jmp	.L431
 6275      00
 6276              	.L434:
2032:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
2033:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->cur = stream->base;
 6277              		.loc 1 2033 29
 6278 010e 488B45E8 		movq	-24(%rbp), %rax
 6279 0112 488B5010 		movq	16(%rax), %rdx
 6280              		.loc 1 2033 21
 6281 0116 488B45E8 		movq	-24(%rbp), %rax
 6282 011a 48895008 		movq	%rdx, 8(%rax)
2034:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->flag |= SECUREC_LOAD_FILE_TO_MEM_FLAG;
 6283              		.loc 1 2034 22
 6284 011e 488B45E8 		movq	-24(%rbp), %rax
 6285 0122 8B00     		movl	(%rax), %eax
 6286 0124 83C808   		orl	$8, %eax
 6287 0127 89C2     		movl	%eax, %edx
 6288 0129 488B45E8 		movq	-24(%rbp), %rax
 6289 012d 8910     		movl	%edx, (%rax)
2035:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (firstReadOnFile != 0) {
 6290              		.loc 1 2035 12
 6291 012f 837DF000 		cmpl	$0, -16(%rbp)
 6292 0133 740C     		je	.L428
2036:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             SecSkipBomHeader(stream);
 6293              		.loc 1 2036 13
 6294 0135 488B45E8 		movq	-24(%rbp), %rax
 6295 0139 4889C7   		movq	%rax, %rdi
 6296 013c E8000000 		call	SecSkipBomHeader
 6296      00
 6297              	.L428:
 6298              	.LBE22:
2037:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
2038:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2039:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     /* according  wchar_t has two bytes */
2040:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     ch = (SecInt)((stream->count -= (int)sizeof(SecChar)) >= 0 ? \
 6299              		.loc 1 2040 34
 6300 0141 488B45E8 		movq	-24(%rbp), %rax
 6301 0145 8B4004   		movl	4(%rax), %eax
 6302 0148 8D50FF   		leal	-1(%rax), %edx
 6303 014b 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 165


 6304 014f 895004   		movl	%edx, 4(%rax)
 6305 0152 488B45E8 		movq	-24(%rbp), %rax
 6306 0156 8B4004   		movl	4(%rax), %eax
 6307              		.loc 1 2040 10
 6308 0159 85C0     		testl	%eax, %eax
 6309 015b 7813     		js	.L435
2041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (SecInt)(SECUREC_CHAR_MASK & \
2042:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (unsigned int)(int)(*((const SecChar *)(const void *)stream->cur))) : SECUREC_EOF
 6310              		.loc 1 2042 78 discriminator 1
 6311 015d 488B45E8 		movq	-24(%rbp), %rax
 6312 0161 488B4008 		movq	8(%rax), %rax
 6313              		.loc 1 2042 39 discriminator 1
 6314 0165 0FB600   		movzbl	(%rax), %eax
2041:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (SecInt)(SECUREC_CHAR_MASK & \
 6315              		.loc 1 2041 19 discriminator 1
 6316 0168 0FBEC0   		movsbl	%al, %eax
2040:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (SecInt)(SECUREC_CHAR_MASK & \
 6317              		.loc 1 2040 10 discriminator 1
 6318 016b 0FB6C0   		movzbl	%al, %eax
 6319 016e EB05     		jmp	.L436
 6320              	.L435:
2040:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (SecInt)(SECUREC_CHAR_MASK & \
 6321              		.loc 1 2040 10 is_stmt 0 discriminator 2
 6322 0170 B8FFFFFF 		movl	$-1, %eax
 6322      FF
 6323              	.L436:
2040:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                   (SecInt)(SECUREC_CHAR_MASK & \
 6324              		.loc 1 2040 8 is_stmt 1 discriminator 4
 6325 0175 8945F4   		movl	%eax, -12(%rbp)
2043:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     stream->cur += sizeof(SecChar);
 6326              		.loc 1 2043 17 discriminator 4
 6327 0178 488B45E8 		movq	-24(%rbp), %rax
 6328 017c 488B4008 		movq	8(%rax), %rax
 6329 0180 488D5001 		leaq	1(%rax), %rdx
 6330 0184 488B45E8 		movq	-24(%rbp), %rax
 6331 0188 48895008 		movq	%rdx, 8(%rax)
2044:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
2045:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch != SECUREC_EOF && stream->base != NULL) {
 6332              		.loc 1 2045 8 discriminator 4
 6333 018c 837DF4FF 		cmpl	$-1, -12(%rbp)
 6334 0190 741E     		je	.L437
 6335              		.loc 1 2045 36 discriminator 1
 6336 0192 488B45E8 		movq	-24(%rbp), %rax
 6337 0196 488B4010 		movq	16(%rax), %rax
 6338              		.loc 1 2045 27 discriminator 1
 6339 019a 4885C0   		testq	%rax, %rax
 6340 019d 7411     		je	.L437
2046:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->fileRealRead += (int)sizeof(SecChar);
 6341              		.loc 1 2046 30
 6342 019f 488B45E8 		movq	-24(%rbp), %rax
 6343 01a3 8B4028   		movl	40(%rax), %eax
 6344 01a6 8D5001   		leal	1(%rax), %edx
 6345 01a9 488B45E8 		movq	-24(%rbp), %rax
 6346 01ad 895028   		movl	%edx, 40(%rax)
 6347              	.L437:
2047:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2048:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return ch;
GAS LISTING /tmp/ccLrrfHE.s 			page 166


 6348              		.loc 1 2048 12
 6349 01b0 8B45F4   		movl	-12(%rbp), %eax
 6350              	.L431:
2049:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6351              		.loc 1 2049 1
 6352 01b3 488B4DF8 		movq	-8(%rbp), %rcx
 6353 01b7 6448330C 		xorq	%fs:40, %rcx
 6353      25280000 
 6353      00
 6354 01c0 7405     		je	.L438
 6355 01c2 E8000000 		call	__stack_chk_fail@PLT
 6355      00
 6356              	.L438:
 6357 01c7 C9       		leave
 6358              	.LCFI140:
 6359              		.cfi_def_cfa 7, 8
 6360 01c8 C3       		ret
 6361              		.cfi_endproc
 6362              	.LFE52:
 6364              		.section	.text.SecGetChar,"ax",@progbits
 6366              	SecGetChar:
 6367              	.LFB53:
2050:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2051:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
2052:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
2053:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Get char  for wchar version
2054:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
2055:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecGetChar(SecFileStream *stream, int *counter)
2056:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6368              		.loc 1 2056 1
 6369              		.cfi_startproc
 6370 0000 F30F1EFA 		endbr64
 6371 0004 55       		pushq	%rbp
 6372              	.LCFI141:
 6373              		.cfi_def_cfa_offset 16
 6374              		.cfi_offset 6, -16
 6375 0005 4889E5   		movq	%rsp, %rbp
 6376              	.LCFI142:
 6377              		.cfi_def_cfa_register 6
 6378 0008 4883EC20 		subq	$32, %rsp
 6379 000c 48897DE8 		movq	%rdi, -24(%rbp)
 6380 0010 488975E0 		movq	%rsi, -32(%rbp)
 6381              		.loc 1 2056 1
 6382 0014 64488B04 		movq	%fs:40, %rax
 6382      25280000 
 6382      00
 6383 001d 488945F8 		movq	%rax, -8(%rbp)
 6384 0021 31C0     		xorl	%eax, %eax
2057:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch = SECUREC_EOF;
 6385              		.loc 1 2057 12
 6386 0023 C745F4FF 		movl	$-1, -12(%rbp)
 6386      FFFFFF
2058:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
2059:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((stream->flag & SECUREC_FROM_STDIN_FLAG) > 0) {
 6387              		.loc 1 2059 16
 6388 002a 488B45E8 		movq	-24(%rbp), %rax
 6389 002e 8B00     		movl	(%rax), %eax
GAS LISTING /tmp/ccLrrfHE.s 			page 167


 6390              		.loc 1 2059 23
 6391 0030 83E004   		andl	$4, %eax
 6392              		.loc 1 2059 8
 6393 0033 85C0     		testl	%eax, %eax
 6394 0035 7411     		je	.L440
2060:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetCharFromStdin(stream);
 6395              		.loc 1 2060 14
 6396 0037 488B45E8 		movq	-24(%rbp), %rax
 6397 003b 4889C7   		movq	%rax, %rdi
 6398 003e E8000000 		call	SecGetCharFromStdin
 6398      00
 6399 0043 8945F4   		movl	%eax, -12(%rbp)
 6400 0046 EB1C     		jmp	.L441
 6401              	.L440:
2061:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((stream->flag & SECUREC_FILE_STREAM_FLAG) > 0) {
 6402              		.loc 1 2061 23
 6403 0048 488B45E8 		movq	-24(%rbp), %rax
 6404 004c 8B00     		movl	(%rax), %eax
 6405              		.loc 1 2061 30
 6406 004e 83E002   		andl	$2, %eax
 6407              		.loc 1 2061 15
 6408 0051 85C0     		testl	%eax, %eax
 6409 0053 740F     		je	.L441
2062:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetCharFromFile(stream);
 6410              		.loc 1 2062 14
 6411 0055 488B45E8 		movq	-24(%rbp), %rax
 6412 0059 4889C7   		movq	%rax, %rdi
 6413 005c E8000000 		call	SecGetCharFromFile
 6413      00
 6414 0061 8945F4   		movl	%eax, -12(%rbp)
 6415              	.L441:
2063:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2064:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2065:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((stream->flag & SECUREC_MEM_STR_FLAG) > 0) {
 6416              		.loc 1 2065 16
 6417 0064 488B45E8 		movq	-24(%rbp), %rax
 6418 0068 8B00     		movl	(%rax), %eax
 6419              		.loc 1 2065 23
 6420 006a 83E001   		andl	$1, %eax
 6421              		.loc 1 2065 8
 6422 006d 85C0     		testl	%eax, %eax
 6423 006f 744B     		je	.L442
2066:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         /* according  wchar_t has two bytes */
2067:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = (SecInt)((stream->count -= (int)sizeof(SecChar)) >= 0 ? \
 6424              		.loc 1 2067 38
 6425 0071 488B45E8 		movq	-24(%rbp), %rax
 6426 0075 8B4004   		movl	4(%rax), %eax
 6427 0078 8D50FF   		leal	-1(%rax), %edx
 6428 007b 488B45E8 		movq	-24(%rbp), %rax
 6429 007f 895004   		movl	%edx, 4(%rax)
 6430 0082 488B45E8 		movq	-24(%rbp), %rax
 6431 0086 8B4004   		movl	4(%rax), %eax
 6432              		.loc 1 2067 14
 6433 0089 85C0     		testl	%eax, %eax
 6434 008b 7813     		js	.L443
2068:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (SecInt)(SECUREC_CHAR_MASK & \
2069:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (unsigned int)(int)(*((const SecChar *)(const void *)stream->cur))) : SECUREC
GAS LISTING /tmp/ccLrrfHE.s 			page 168


 6435              		.loc 1 2069 82 discriminator 1
 6436 008d 488B45E8 		movq	-24(%rbp), %rax
 6437 0091 488B4008 		movq	8(%rax), %rax
 6438              		.loc 1 2069 43 discriminator 1
 6439 0095 0FB600   		movzbl	(%rax), %eax
2068:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (SecInt)(SECUREC_CHAR_MASK & \
 6440              		.loc 1 2068 23 discriminator 1
 6441 0098 0FBEC0   		movsbl	%al, %eax
2067:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (SecInt)(SECUREC_CHAR_MASK & \
 6442              		.loc 1 2067 14 discriminator 1
 6443 009b 0FB6C0   		movzbl	%al, %eax
 6444 009e EB05     		jmp	.L444
 6445              	.L443:
2067:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (SecInt)(SECUREC_CHAR_MASK & \
 6446              		.loc 1 2067 14 is_stmt 0 discriminator 2
 6447 00a0 B8FFFFFF 		movl	$-1, %eax
 6447      FF
 6448              	.L444:
2067:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****                       (SecInt)(SECUREC_CHAR_MASK & \
 6449              		.loc 1 2067 12 is_stmt 1 discriminator 4
 6450 00a5 8945F4   		movl	%eax, -12(%rbp)
2070:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->cur += sizeof(SecChar);
 6451              		.loc 1 2070 21 discriminator 4
 6452 00a8 488B45E8 		movq	-24(%rbp), %rax
 6453 00ac 488B4008 		movq	8(%rax), %rax
 6454 00b0 488D5001 		leaq	1(%rax), %rdx
 6455 00b4 488B45E8 		movq	-24(%rbp), %rax
 6456 00b8 48895008 		movq	%rdx, 8(%rax)
 6457              	.L442:
2071:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2072:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *counter = *counter + 1;
 6458              		.loc 1 2072 16
 6459 00bc 488B45E0 		movq	-32(%rbp), %rax
 6460 00c0 8B00     		movl	(%rax), %eax
 6461              		.loc 1 2072 25
 6462 00c2 8D5001   		leal	1(%rax), %edx
 6463              		.loc 1 2072 14
 6464 00c5 488B45E0 		movq	-32(%rbp), %rax
 6465 00c9 8910     		movl	%edx, (%rax)
2073:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return ch;
 6466              		.loc 1 2073 12
 6467 00cb 8B45F4   		movl	-12(%rbp), %eax
2074:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6468              		.loc 1 2074 1
 6469 00ce 488B4DF8 		movq	-8(%rbp), %rcx
 6470 00d2 6448330C 		xorq	%fs:40, %rcx
 6470      25280000 
 6470      00
 6471 00db 7405     		je	.L446
 6472 00dd E8000000 		call	__stack_chk_fail@PLT
 6472      00
 6473              	.L446:
 6474 00e2 C9       		leave
 6475              	.LCFI143:
 6476              		.cfi_def_cfa 7, 8
 6477 00e3 C3       		ret
 6478              		.cfi_endproc
GAS LISTING /tmp/ccLrrfHE.s 			page 169


 6479              	.LFE53:
 6481              		.section	.text.SecUnGetCharImpl,"ax",@progbits
 6483              	SecUnGetCharImpl:
 6484              	.LFB54:
2075:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
2076:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
2077:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Unget Public realizatio char  for wchar and char version
2078:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
2079:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecUnGetCharImpl(SecInt ch, SecFileStream *stream)
2080:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6485              		.loc 1 2080 1
 6486              		.cfi_startproc
 6487 0000 F30F1EFA 		endbr64
 6488 0004 55       		pushq	%rbp
 6489              	.LCFI144:
 6490              		.cfi_def_cfa_offset 16
 6491              		.cfi_offset 6, -16
 6492 0005 4889E5   		movq	%rsp, %rbp
 6493              	.LCFI145:
 6494              		.cfi_def_cfa_register 6
 6495 0008 4883EC20 		subq	$32, %rsp
 6496 000c 897DEC   		movl	%edi, -20(%rbp)
 6497 000f 488975E0 		movq	%rsi, -32(%rbp)
 6498              		.loc 1 2080 1
 6499 0013 64488B04 		movq	%fs:40, %rax
 6499      25280000 
 6499      00
 6500 001c 488945F8 		movq	%rax, -8(%rbp)
 6501 0020 31C0     		xorl	%eax, %eax
2081:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((stream->flag & SECUREC_FROM_STDIN_FLAG) > 0) {
 6502              		.loc 1 2081 16
 6503 0022 488B45E0 		movq	-32(%rbp), %rax
 6504 0026 8B00     		movl	(%rax), %eax
 6505              		.loc 1 2081 23
 6506 0028 83E004   		andl	$4, %eax
 6507              		.loc 1 2081 8
 6508 002b 85C0     		testl	%eax, %eax
 6509 002d 7417     		je	.L448
2082:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
2083:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if defined(SECUREC_NO_STD_UNGETC)
2084:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->lastChar = (unsigned int)ch;
2085:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->fUnget = 1;
2086:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
2087:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)SECUREC_UN_GETC(ch, stream->pf);
 6510              		.loc 1 2087 15
 6511 002f 488B45E0 		movq	-32(%rbp), %rax
 6512 0033 488B5018 		movq	24(%rax), %rdx
 6513 0037 8B45EC   		movl	-20(%rbp), %eax
 6514 003a 4889D6   		movq	%rdx, %rsi
 6515 003d 89C7     		movl	%eax, %edi
 6516 003f E8000000 		call	ungetc@PLT
 6516      00
 6517 0044 EB54     		jmp	.L449
 6518              	.L448:
2088:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2089:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #else
2090:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         (void)ch; /* to clear e438 last value assigned not used , the compiler will optimize this c
GAS LISTING /tmp/ccLrrfHE.s 			page 170


2091:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2092:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } else if ((stream->flag & SECUREC_MEM_STR_FLAG) || (stream->flag & SECUREC_LOAD_FILE_TO_MEM_FL
 6519              		.loc 1 2092 23
 6520 0046 488B45E0 		movq	-32(%rbp), %rax
 6521 004a 8B00     		movl	(%rax), %eax
 6522              		.loc 1 2092 30
 6523 004c 83E001   		andl	$1, %eax
 6524              		.loc 1 2092 15
 6525 004f 85C0     		testl	%eax, %eax
 6526 0051 750D     		jne	.L450
 6527              		.loc 1 2092 64 discriminator 1
 6528 0053 488B45E0 		movq	-32(%rbp), %rax
 6529 0057 8B00     		movl	(%rax), %eax
 6530              		.loc 1 2092 71 discriminator 1
 6531 0059 83E008   		andl	$8, %eax
 6532              		.loc 1 2092 54 discriminator 1
 6533 005c 85C0     		testl	%eax, %eax
 6534 005e 743A     		je	.L449
 6535              	.L450:
2093:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         if (stream->cur > stream->base) {
 6536              		.loc 1 2093 19
 6537 0060 488B45E0 		movq	-32(%rbp), %rax
 6538 0064 488B5008 		movq	8(%rax), %rdx
 6539              		.loc 1 2093 33
 6540 0068 488B45E0 		movq	-32(%rbp), %rax
 6541 006c 488B4010 		movq	16(%rax), %rax
 6542              		.loc 1 2093 12
 6543 0070 4839C2   		cmpq	%rax, %rdx
 6544 0073 7625     		jbe	.L449
2094:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->cur -= sizeof(SecChar);
 6545              		.loc 1 2094 25
 6546 0075 488B45E0 		movq	-32(%rbp), %rax
 6547 0079 488B4008 		movq	8(%rax), %rax
 6548 007d 488D50FF 		leaq	-1(%rax), %rdx
 6549 0081 488B45E0 		movq	-32(%rbp), %rax
 6550 0085 48895008 		movq	%rdx, 8(%rax)
2095:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****             stream->count += (int)sizeof(SecChar);
 6551              		.loc 1 2095 27
 6552 0089 488B45E0 		movq	-32(%rbp), %rax
 6553 008d 8B4004   		movl	4(%rax), %eax
 6554 0090 8D5001   		leal	1(%rax), %edx
 6555 0093 488B45E0 		movq	-32(%rbp), %rax
 6556 0097 895004   		movl	%edx, 4(%rax)
 6557              	.L449:
2096:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         }
2097:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2098:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #if SECUREC_ENABLE_SCANF_FILE
2099:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if ((stream->flag & SECUREC_FILE_STREAM_FLAG) > 0 && stream->base) {
 6558              		.loc 1 2099 16
 6559 009a 488B45E0 		movq	-32(%rbp), %rax
 6560 009e 8B00     		movl	(%rax), %eax
 6561              		.loc 1 2099 23
 6562 00a0 83E002   		andl	$2, %eax
 6563              		.loc 1 2099 8
 6564 00a3 85C0     		testl	%eax, %eax
 6565 00a5 741E     		je	.L453
 6566              		.loc 1 2099 64 discriminator 1
GAS LISTING /tmp/ccLrrfHE.s 			page 171


 6567 00a7 488B45E0 		movq	-32(%rbp), %rax
 6568 00ab 488B4010 		movq	16(%rax), %rax
 6569              		.loc 1 2099 55 discriminator 1
 6570 00af 4885C0   		testq	%rax, %rax
 6571 00b2 7411     		je	.L453
2100:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         stream->fileRealRead -= (int)sizeof(SecChar);
 6572              		.loc 1 2100 30
 6573 00b4 488B45E0 		movq	-32(%rbp), %rax
 6574 00b8 8B4028   		movl	40(%rax), %eax
 6575 00bb 8D50FF   		leal	-1(%rax), %edx
 6576 00be 488B45E0 		movq	-32(%rbp), %rax
 6577 00c2 895028   		movl	%edx, 40(%rax)
 6578              	.L453:
2101:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2102:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** #endif
2103:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6579              		.loc 1 2103 1
 6580 00c5 90       		nop
 6581 00c6 488B45F8 		movq	-8(%rbp), %rax
 6582 00ca 64483304 		xorq	%fs:40, %rax
 6582      25280000 
 6582      00
 6583 00d3 7405     		je	.L452
 6584 00d5 E8000000 		call	__stack_chk_fail@PLT
 6584      00
 6585              	.L452:
 6586 00da C9       		leave
 6587              	.LCFI146:
 6588              		.cfi_def_cfa 7, 8
 6589 00db C3       		ret
 6590              		.cfi_endproc
 6591              	.LFE54:
 6593              		.section	.text.SecUnGetChar,"ax",@progbits
 6595              	SecUnGetChar:
 6596              	.LFB55:
2104:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
2105:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
2106:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Unget char  for char version
2107:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
2108:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static void SecUnGetChar(SecInt ch, SecFileStream *stream, int *counter)
2109:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6597              		.loc 1 2109 1
 6598              		.cfi_startproc
 6599 0000 F30F1EFA 		endbr64
 6600 0004 55       		pushq	%rbp
 6601              	.LCFI147:
 6602              		.cfi_def_cfa_offset 16
 6603              		.cfi_offset 6, -16
 6604 0005 4889E5   		movq	%rsp, %rbp
 6605              	.LCFI148:
 6606              		.cfi_def_cfa_register 6
 6607 0008 4883EC30 		subq	$48, %rsp
 6608 000c 897DEC   		movl	%edi, -20(%rbp)
 6609 000f 488975E0 		movq	%rsi, -32(%rbp)
 6610 0013 488955D8 		movq	%rdx, -40(%rbp)
 6611              		.loc 1 2109 1
 6612 0017 64488B04 		movq	%fs:40, %rax
GAS LISTING /tmp/ccLrrfHE.s 			page 172


 6612      25280000 
 6612      00
 6613 0020 488945F8 		movq	%rax, -8(%rbp)
 6614 0024 31C0     		xorl	%eax, %eax
2110:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     if (ch != SECUREC_EOF) {
 6615              		.loc 1 2110 8
 6616 0026 837DECFF 		cmpl	$-1, -20(%rbp)
 6617 002a 7411     		je	.L455
2111:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         SecUnGetCharImpl(ch, stream);
 6618              		.loc 1 2111 9
 6619 002c 488B55E0 		movq	-32(%rbp), %rdx
 6620 0030 8B45EC   		movl	-20(%rbp), %eax
 6621 0033 4889D6   		movq	%rdx, %rsi
 6622 0036 89C7     		movl	%eax, %edi
 6623 0038 E8000000 		call	SecUnGetCharImpl
 6623      00
 6624              	.L455:
2112:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     }
2113:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     *counter = *counter - 1;
 6625              		.loc 1 2113 16
 6626 003d 488B45D8 		movq	-40(%rbp), %rax
 6627 0041 8B00     		movl	(%rax), %eax
 6628              		.loc 1 2113 25
 6629 0043 8D50FF   		leal	-1(%rax), %edx
 6630              		.loc 1 2113 14
 6631 0046 488B45D8 		movq	-40(%rbp), %rax
 6632 004a 8910     		movl	%edx, (%rax)
2114:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6633              		.loc 1 2114 1
 6634 004c 90       		nop
 6635 004d 488B45F8 		movq	-8(%rbp), %rax
 6636 0051 64483304 		xorq	%fs:40, %rax
 6636      25280000 
 6636      00
 6637 005a 7405     		je	.L456
 6638 005c E8000000 		call	__stack_chk_fail@PLT
 6638      00
 6639              	.L456:
 6640 0061 C9       		leave
 6641              	.LCFI149:
 6642              		.cfi_def_cfa 7, 8
 6643 0062 C3       		ret
 6644              		.cfi_endproc
 6645              	.LFE55:
 6647              		.section	.text.SecSkipSpaceChar,"ax",@progbits
 6649              	SecSkipSpaceChar:
 6650              	.LFB56:
2115:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** 
2116:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** /*
2117:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  *  Skip space char by isspace
2118:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****  */
2119:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** static SecInt SecSkipSpaceChar(SecFileStream *stream, int *counter)
2120:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** {
 6651              		.loc 1 2120 1
 6652              		.cfi_startproc
 6653 0000 F30F1EFA 		endbr64
 6654 0004 55       		pushq	%rbp
GAS LISTING /tmp/ccLrrfHE.s 			page 173


 6655              	.LCFI150:
 6656              		.cfi_def_cfa_offset 16
 6657              		.cfi_offset 6, -16
 6658 0005 4889E5   		movq	%rsp, %rbp
 6659              	.LCFI151:
 6660              		.cfi_def_cfa_register 6
 6661 0008 4883EC20 		subq	$32, %rsp
 6662 000c 48897DE8 		movq	%rdi, -24(%rbp)
 6663 0010 488975E0 		movq	%rsi, -32(%rbp)
 6664              		.loc 1 2120 1
 6665 0014 64488B04 		movq	%fs:40, %rax
 6665      25280000 
 6665      00
 6666 001d 488945F8 		movq	%rax, -8(%rbp)
 6667 0021 31C0     		xorl	%eax, %eax
 6668              	.L459:
2121:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     SecInt ch;
2122:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     do {
2123:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****         ch = SecGetChar(stream, counter);
 6669              		.loc 1 2123 14 discriminator 2
 6670 0023 488B55E0 		movq	-32(%rbp), %rdx
 6671 0027 488B45E8 		movq	-24(%rbp), %rax
 6672 002b 4889D6   		movq	%rdx, %rsi
 6673 002e 4889C7   		movq	%rax, %rdi
 6674 0031 E8000000 		call	SecGetChar
 6674      00
 6675 0036 8945F4   		movl	%eax, -12(%rbp)
2124:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     } while (ch != SECUREC_EOF && SECUREC_IS_SPACE(ch));
 6676              		.loc 1 2124 5 discriminator 2
 6677 0039 837DF4FF 		cmpl	$-1, -12(%rbp)
 6678 003d 7423     		je	.L458
 6679              		.loc 1 2124 35 discriminator 1
 6680 003f E8000000 		call	__ctype_b_loc@PLT
 6680      00
 6681 0044 488B00   		movq	(%rax), %rax
 6682 0047 8B55F4   		movl	-12(%rbp), %edx
 6683 004a 0FB6D2   		movzbl	%dl, %edx
 6684 004d 4801D2   		addq	%rdx, %rdx
 6685 0050 4801D0   		addq	%rdx, %rax
 6686 0053 0FB700   		movzwl	(%rax), %eax
 6687 0056 0FB7C0   		movzwl	%ax, %eax
 6688 0059 25002000 		andl	$8192, %eax
 6688      00
 6689              		.loc 1 2124 32 discriminator 1
 6690 005e 85C0     		testl	%eax, %eax
 6691 0060 75C1     		jne	.L459
 6692              	.L458:
2125:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl ****     return ch;
 6693              		.loc 1 2125 12
 6694 0062 8B45F4   		movl	-12(%rbp), %eax
2126:/home/xingli/share/LiteOS_Lab/secure_c/src/input.inl **** }
 6695              		.loc 1 2126 1
 6696 0065 488B4DF8 		movq	-8(%rbp), %rcx
 6697 0069 6448330C 		xorq	%fs:40, %rcx
 6697      25280000 
 6697      00
 6698 0072 7405     		je	.L461
GAS LISTING /tmp/ccLrrfHE.s 			page 174


 6699 0074 E8000000 		call	__stack_chk_fail@PLT
 6699      00
 6700              	.L461:
 6701 0079 C9       		leave
 6702              	.LCFI152:
 6703              		.cfi_def_cfa 7, 8
 6704 007a C3       		ret
 6705              		.cfi_endproc
 6706              	.LFE56:
 6708              		.text
 6709              	.Letext0:
 6710              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 6711              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h"
 6712              		.file 4 "<built-in>"
 6713              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 6714              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 6715              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 6716              		.file 8 "/usr/include/stdio.h"
 6717              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 6718              		.file 10 "/home/xingli/share/LiteOS_Lab/secure_c/src/securecutil.h"
 6719              		.file 11 "/home/xingli/share/LiteOS_Lab/secure_c/src/secinput.h"
 6720              		.file 12 "/usr/include/ctype.h"
 12707              		.section	.note.gnu.property,"a"
 12708              		.align 8
 12709 0000 04000000 		.long	 1f - 0f
 12710 0004 10000000 		.long	 4f - 1f
 12711 0008 05000000 		.long	 5
 12712              	0:
 12713 000c 474E5500 		.string	 "GNU"
 12714              	1:
 12715              		.align 8
 12716 0010 020000C0 		.long	 0xc0000002
 12717 0014 04000000 		.long	 3f - 2f
 12718              	2:
 12719 0018 03000000 		.long	 0x3
 12720              	3:
 12721 001c 00000000 		.align 8
 12722              	4:
GAS LISTING /tmp/ccLrrfHE.s 			page 175


DEFINED SYMBOLS
                            *ABS*:0000000000000000 secureinput_a.c
     /tmp/ccLrrfHE.s:6      .text.SecIs64BitPtr:0000000000000000 SecIs64BitPtr
     /tmp/ccLrrfHE.s:53     .text.SecAssignFloat:0000000000000000 SecAssignFloat
     /tmp/ccLrrfHE.s:131    .text.SecUpdateFloatString:0000000000000000 SecUpdateFloatString
     /tmp/ccLrrfHE.s:358    .text.SecIsLeadByte:0000000000000000 SecIsLeadByte
     /tmp/ccLrrfHE.s:398    .text.SecUpdateWcharFlagByType:0000000000000000 SecUpdateWcharFlagByType
     /tmp/ccLrrfHE.s:465    .text.SecDecodeScanQualifierL:0000000000000000 SecDecodeScanQualifierL
     /tmp/ccLrrfHE.s:536    .text.SecDecodeScanQualifierI:0000000000000000 SecDecodeScanQualifierI
     /tmp/ccLrrfHE.s:690    .text.SecDecodeScanWidth:0000000000000000 SecDecodeScanWidth
     /tmp/ccLrrfHE.s:789    .text.SecSetDefaultScanSpec:0000000000000000 SecSetDefaultScanSpec
     /tmp/ccLrrfHE.s:862    .text.SecDecodeScanQualifier:0000000000000000 SecDecodeScanQualifier
     /tmp/ccLrrfHE.s:1083   .text.SecDecodeScanFlag:0000000000000000 SecDecodeScanFlag
     /tmp/ccLrrfHE.s:1162   .text.SecDecodeClearFormat:0000000000000000 SecDecodeClearFormat
     /tmp/ccLrrfHE.s:1288   .text.SecAddEndingZero:0000000000000000 SecAddEndingZero
     /tmp/ccLrrfHE.s:1337   .text.SecClearDestBuf:0000000000000000 SecClearDestBuf
     /tmp/ccLrrfHE.s:1557   .text.SecAssignNumber:0000000000000000 SecAssignNumber
     /tmp/ccLrrfHE.s:1668   .text.SecIsLongBitEqual:0000000000000000 SecIsLongBitEqual
     /tmp/ccLrrfHE.s:1705   .text.SecHexValueOfChar:0000000000000000 SecHexValueOfChar
     /tmp/ccLrrfHE.s:1760   .text.SecDecodeNumberDecimal:0000000000000000 SecDecodeNumberDecimal
     /tmp/ccLrrfHE.s:1874   .text.SecDecodeNumberHex:0000000000000000 SecDecodeNumberHex
     /tmp/ccLrrfHE.s:1940   .text.SecDecodeNumberOctal:0000000000000000 SecDecodeNumberOctal
     /tmp/ccLrrfHE.s:2006   .text.SecFinishNumberNegativeOther:0000000000000000 SecFinishNumberNegativeOther
     /tmp/ccLrrfHE.s:2123   .text.SecFinishNumberNegativeInt:0000000000000000 SecFinishNumberNegativeInt
     /tmp/ccLrrfHE.s:2251   .text.SecFinishNumberPositiveOther:0000000000000000 SecFinishNumberPositiveOther
     /tmp/ccLrrfHE.s:2349   .text.SecFinishNumberPositiveInt:0000000000000000 SecFinishNumberPositiveInt
     /tmp/ccLrrfHE.s:2441   .text.SecDecodeNumber64Decimal:0000000000000000 SecDecodeNumber64Decimal
     /tmp/ccLrrfHE.s:2538   .text.SecDecodeNumber64Hex:0000000000000000 SecDecodeNumber64Hex
     /tmp/ccLrrfHE.s:2604   .text.SecDecodeNumber64Octal:0000000000000000 SecDecodeNumber64Octal
     /tmp/ccLrrfHE.s:2672   .data.rel.local.g_secDecodeNumberHex:0000000000000000 g_secDecodeNumberHex
     /tmp/ccLrrfHE.s:2679   .data.rel.local.g_secDecodeNumberOctal:0000000000000000 g_secDecodeNumberOctal
     /tmp/ccLrrfHE.s:2686   .data.rel.local.g_secDecodeNumberDecimal:0000000000000000 g_secDecodeNumberDecimal
     /tmp/ccLrrfHE.s:2691   .text.SecDecodeNumber:0000000000000000 SecDecodeNumber
     /tmp/ccLrrfHE.s:2837   .text.SecFinishNumber:0000000000000000 SecFinishNumber
     /tmp/ccLrrfHE.s:2932   .text.SecFinishNumber64:0000000000000000 SecFinishNumber64
     /tmp/ccLrrfHE.s:3097   .data.rel.local.g_secFinishNumber:0000000000000000 g_secFinishNumber
     /tmp/ccLrrfHE.s:3102   .text.SecSeekStream:0000000000000000 SecSeekStream
     /tmp/ccLrrfHE.s:3206   .text.SecAdjustStream:0000000000000000 SecAdjustStream
     /tmp/ccLrrfHE.s:3272   .text.SecSkipSpaceFormat:0000000000000000 SecSkipSpaceFormat
     /tmp/ccLrrfHE.s:3334   .text.SecDecodeLeadByte:0000000000000000 SecDecodeLeadByte
     /tmp/ccLrrfHE.s:6366   .text.SecGetChar:0000000000000000 SecGetChar
     /tmp/ccLrrfHE.s:6595   .text.SecUnGetChar:0000000000000000 SecUnGetChar
     /tmp/ccLrrfHE.s:3531   .text.SecSetupBracketTable:0000000000000000 SecSetupBracketTable
     /tmp/ccLrrfHE.s:3818   .text.SecInputForChar:0000000000000000 SecInputForChar
     /tmp/ccLrrfHE.s:3988   .text.SecInitFloatSpec:0000000000000000 SecInitFloatSpec
     /tmp/ccLrrfHE.s:4043   .text.SecClearFloatSpec:0000000000000000 SecClearFloatSpec
     /tmp/ccLrrfHE.s:4133   .text.SecInputFloatE:0000000000000000 SecInputFloatE
     /tmp/ccLrrfHE.s:4271   .text.SecInputFloat:0000000000000000 SecInputFloat
     /tmp/ccLrrfHE.s:4586   .text.SecInputNumberDigital:0000000000000000 SecInputNumberDigital
     /tmp/ccLrrfHE.s:4702   .text.SecInputNumber:0000000000000000 SecInputNumber
     /tmp/ccLrrfHE.s:4905   .text.SecInputString:0000000000000000 SecInputString
     /tmp/ccLrrfHE.s:5163   .text.SecInputS:0000000000000000 SecInputS
     /tmp/ccLrrfHE.s:6649   .text.SecSkipSpaceChar:0000000000000000 SecSkipSpaceChar
     /tmp/ccLrrfHE.s:6041   .text.SecGetCharFromStdin:0000000000000000 SecGetCharFromStdin
     /tmp/ccLrrfHE.s:6082   .text.SecSkipBomHeader:0000000000000000 SecSkipBomHeader
     /tmp/ccLrrfHE.s:6161   .text.SecGetCharFromFile:0000000000000000 SecGetCharFromFile
     /tmp/ccLrrfHE.s:6483   .text.SecUnGetCharImpl:0000000000000000 SecUnGetCharImpl
GAS LISTING /tmp/ccLrrfHE.s 			page 176



UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
strtold
strtod
malloc
memcpy_s
free
memset_s
__ctype_b_loc
memset
feof
fseek
__ctype_get_mb_cur_max
mbtowc
fgetc
ftell
fread
ungetc
