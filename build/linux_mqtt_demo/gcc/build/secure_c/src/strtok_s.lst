GAS LISTING /tmp/ccdIY4kG.s 			page 1


   1              		.file	"strtok_s.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.SecFindBegin,"ax",@progbits
   6              	SecFindBegin:
   7              	.LFB6:
   8              		.file 1 "/home/xingli/share/1205tiny/secure_c/src/strtok_s.c"
   1:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** /*
   2:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
   3:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *
   4:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * OpenArkCompiler is licensed under the Mulan PSL v1. 
   5:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * You can use this software according to the terms and conditions of the Mulan PSL v1.
   6:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * You may obtain a copy of Mulan PSL v1 at:
   7:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *
   8:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * 	http://license.coscl.org.cn/MulanPSL 
   9:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *
  10:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER 
  11:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
  12:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * FIT FOR A PARTICULAR PURPOSE.  
  13:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * See the Mulan PSL v1 for more details.  
  14:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  */
  15:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** 
  16:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** #include "securec.h"
  17:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** 
  18:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** /*
  19:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * Find beginning of token (skip over leading delimiters).Note that
  20:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * there is no token if this loop sets string to point to the terminal null.
  21:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  */
  22:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** static char *SecFindBegin(char *strToken, const char *strDelimit)
  23:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** {
   9              		.loc 1 23 1
  10              		.cfi_startproc
  11 0000 F30F1EFA 		endbr64
  12 0004 55       		pushq	%rbp
  13              	.LCFI0:
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0005 4889E5   		movq	%rsp, %rbp
  17              	.LCFI1:
  18              		.cfi_def_cfa_register 6
  19 0008 4883EC30 		subq	$48, %rsp
  20 000c 48897DD8 		movq	%rdi, -40(%rbp)
  21 0010 488975D0 		movq	%rsi, -48(%rbp)
  22              		.loc 1 23 1
  23 0014 64488B04 		movq	%fs:40, %rax
  23      25280000 
  23      00
  24 001d 488945F8 		movq	%rax, -8(%rbp)
  25 0021 31C0     		xorl	%eax, %eax
  24:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     char *token = strToken;
  26              		.loc 1 24 11
  27 0023 488B45D8 		movq	-40(%rbp), %rax
  28 0027 488945E8 		movq	%rax, -24(%rbp)
  25:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     while (*token != '\0') {
  29              		.loc 1 25 11
  30 002b EB3C     		jmp	.L2
  31              	.L8:
GAS LISTING /tmp/ccdIY4kG.s 			page 2


  32              	.LBB2:
  26:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
  33              		.loc 1 26 21
  34 002d 488B45D0 		movq	-48(%rbp), %rax
  35 0031 488945F0 		movq	%rax, -16(%rbp)
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  36              		.loc 1 27 15
  37 0035 EB05     		jmp	.L3
  38              	.L5:
  28:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             ++ctl;
  39              		.loc 1 28 13
  40 0037 488345F0 		addq	$1, -16(%rbp)
  40      01
  41              	.L3:
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  42              		.loc 1 27 16
  43 003c 488B45F0 		movq	-16(%rbp), %rax
  44 0040 0FB600   		movzbl	(%rax), %eax
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  45              		.loc 1 27 15
  46 0043 84C0     		testb	%al, %al
  47 0045 7412     		je	.L4
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  48              		.loc 1 27 32 discriminator 1
  49 0047 488B45F0 		movq	-16(%rbp), %rax
  50 004b 0FB610   		movzbl	(%rax), %edx
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  51              		.loc 1 27 37 discriminator 1
  52 004e 488B45E8 		movq	-24(%rbp), %rax
  53 0052 0FB600   		movzbl	(%rax), %eax
  27:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
  54              		.loc 1 27 29 discriminator 1
  55 0055 38C2     		cmpb	%al, %dl
  56 0057 75DE     		jne	.L5
  57              	.L4:
  29:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         }
  30:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         if (*ctl == '\0') { /* don't find any delimiter in string header, break the loop */
  58              		.loc 1 30 13
  59 0059 488B45F0 		movq	-16(%rbp), %rax
  60 005d 0FB600   		movzbl	(%rax), %eax
  61              		.loc 1 30 12
  62 0060 84C0     		testb	%al, %al
  63 0062 7412     		je	.L11
  31:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             break;
  32:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         }
  33:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         ++token;
  64              		.loc 1 33 9
  65 0064 488345E8 		addq	$1, -24(%rbp)
  65      01
  66              	.L2:
  67              	.LBE2:
  25:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
  68              		.loc 1 25 12
  69 0069 488B45E8 		movq	-24(%rbp), %rax
  70 006d 0FB600   		movzbl	(%rax), %eax
  25:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
  71              		.loc 1 25 11
GAS LISTING /tmp/ccdIY4kG.s 			page 3


  72 0070 84C0     		testb	%al, %al
  73 0072 75B9     		jne	.L8
  74 0074 EB01     		jmp	.L7
  75              	.L11:
  76              	.LBB3:
  31:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             break;
  77              		.loc 1 31 13
  78 0076 90       		nop
  79              	.L7:
  80              	.LBE3:
  34:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
  35:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     return token;
  81              		.loc 1 35 12
  82 0077 488B45E8 		movq	-24(%rbp), %rax
  36:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** }
  83              		.loc 1 36 1
  84 007b 488B4DF8 		movq	-8(%rbp), %rcx
  85 007f 6448330C 		xorq	%fs:40, %rcx
  85      25280000 
  85      00
  86 0088 7405     		je	.L10
  87 008a E8000000 		call	__stack_chk_fail@PLT
  87      00
  88              	.L10:
  89 008f C9       		leave
  90              	.LCFI2:
  91              		.cfi_def_cfa 7, 8
  92 0090 C3       		ret
  93              		.cfi_endproc
  94              	.LFE6:
  96              		.section	.text.SecFindRest,"ax",@progbits
  98              	SecFindRest:
  99              	.LFB7:
  37:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** 
  38:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** /*
  39:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * Find rest of token
  40:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  */
  41:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** static char *SecFindRest(char *strToken, const char *strDelimit)
  42:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** {
 100              		.loc 1 42 1
 101              		.cfi_startproc
 102 0000 F30F1EFA 		endbr64
 103 0004 55       		pushq	%rbp
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 6, -16
 107 0005 4889E5   		movq	%rsp, %rbp
 108              	.LCFI4:
 109              		.cfi_def_cfa_register 6
 110 0008 4883EC30 		subq	$48, %rsp
 111 000c 48897DD8 		movq	%rdi, -40(%rbp)
 112 0010 488975D0 		movq	%rsi, -48(%rbp)
 113              		.loc 1 42 1
 114 0014 64488B04 		movq	%fs:40, %rax
 114      25280000 
 114      00
 115 001d 488945F8 		movq	%rax, -8(%rbp)
GAS LISTING /tmp/ccdIY4kG.s 			page 4


 116 0021 31C0     		xorl	%eax, %eax
  43:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* Find the rest of the token. If it is not the end of the string,
  44:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****      * put a null there.
  45:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****      */
  46:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     char *token = strToken;
 117              		.loc 1 46 11
 118 0023 488B45D8 		movq	-40(%rbp), %rax
 119 0027 488945E8 		movq	%rax, -24(%rbp)
  47:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     while (*token != '\0') {
 120              		.loc 1 47 11
 121 002b EB4D     		jmp	.L13
 122              	.L19:
 123              	.LBB4:
  48:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
 124              		.loc 1 48 21
 125 002d 488B45D0 		movq	-48(%rbp), %rax
 126 0031 488945F0 		movq	%rax, -16(%rbp)
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 127              		.loc 1 49 15
 128 0035 EB05     		jmp	.L14
 129              	.L16:
  50:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             ++ctl;
 130              		.loc 1 50 13
 131 0037 488345F0 		addq	$1, -16(%rbp)
 131      01
 132              	.L14:
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 133              		.loc 1 49 16
 134 003c 488B45F0 		movq	-16(%rbp), %rax
 135 0040 0FB600   		movzbl	(%rax), %eax
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 136              		.loc 1 49 15
 137 0043 84C0     		testb	%al, %al
 138 0045 7412     		je	.L15
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 139              		.loc 1 49 32 discriminator 1
 140 0047 488B45F0 		movq	-16(%rbp), %rax
 141 004b 0FB610   		movzbl	(%rax), %edx
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 142              		.loc 1 49 37 discriminator 1
 143 004e 488B45E8 		movq	-24(%rbp), %rax
 144 0052 0FB600   		movzbl	(%rax), %eax
  49:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         while (*ctl != '\0' && *ctl != *token) {
 145              		.loc 1 49 29 discriminator 1
 146 0055 38C2     		cmpb	%al, %dl
 147 0057 75DE     		jne	.L16
 148              	.L15:
  51:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         }
  52:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         if (*ctl != '\0') {        /* find a delimiter */
 149              		.loc 1 52 13
 150 0059 488B45F0 		movq	-16(%rbp), %rax
 151 005d 0FB600   		movzbl	(%rax), %eax
 152              		.loc 1 52 12
 153 0060 84C0     		testb	%al, %al
 154 0062 7411     		je	.L17
  53:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             *token++ = '\0';       /* set string termintor */
 155              		.loc 1 53 19
GAS LISTING /tmp/ccdIY4kG.s 			page 5


 156 0064 488B45E8 		movq	-24(%rbp), %rax
 157 0068 488D5001 		leaq	1(%rax), %rdx
 158 006c 488955E8 		movq	%rdx, -24(%rbp)
 159              		.loc 1 53 22
 160 0070 C60000   		movb	$0, (%rax)
  54:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****             break;
 161              		.loc 1 54 13
 162 0073 EB10     		jmp	.L18
 163              	.L17:
  55:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         }
  56:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         ++token;
 164              		.loc 1 56 9
 165 0075 488345E8 		addq	$1, -24(%rbp)
 165      01
 166              	.L13:
 167              	.LBE4:
  47:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
 168              		.loc 1 47 12
 169 007a 488B45E8 		movq	-24(%rbp), %rax
 170 007e 0FB600   		movzbl	(%rax), %eax
  47:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         const char *ctl = strDelimit;
 171              		.loc 1 47 11
 172 0081 84C0     		testb	%al, %al
 173 0083 75A8     		jne	.L19
 174              	.L18:
  57:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
  58:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     return token;
 175              		.loc 1 58 12
 176 0085 488B45E8 		movq	-24(%rbp), %rax
  59:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** }
 177              		.loc 1 59 1
 178 0089 488B4DF8 		movq	-8(%rbp), %rcx
 179 008d 6448330C 		xorq	%fs:40, %rcx
 179      25280000 
 179      00
 180 0096 7405     		je	.L21
 181 0098 E8000000 		call	__stack_chk_fail@PLT
 181      00
 182              	.L21:
 183 009d C9       		leave
 184              	.LCFI5:
 185              		.cfi_def_cfa 7, 8
 186 009e C3       		ret
 187              		.cfi_endproc
 188              	.LFE7:
 190              		.section	.text.SecUpdateToken,"ax",@progbits
 192              	SecUpdateToken:
 193              	.LFB8:
  60:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** 
  61:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** /*
  62:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * Find the final position pointer
  63:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  */
  64:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** static char *SecUpdateToken(char *strToken, const char *strDelimit, char **context)
  65:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** {
 194              		.loc 1 65 1
 195              		.cfi_startproc
 196 0000 F30F1EFA 		endbr64
GAS LISTING /tmp/ccdIY4kG.s 			page 6


 197 0004 55       		pushq	%rbp
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 16
 200              		.cfi_offset 6, -16
 201 0005 4889E5   		movq	%rsp, %rbp
 202              	.LCFI7:
 203              		.cfi_def_cfa_register 6
 204 0008 4883EC30 		subq	$48, %rsp
 205 000c 48897DE8 		movq	%rdi, -24(%rbp)
 206 0010 488975E0 		movq	%rsi, -32(%rbp)
 207 0014 488955D8 		movq	%rdx, -40(%rbp)
 208              		.loc 1 65 1
 209 0018 64488B04 		movq	%fs:40, %rax
 209      25280000 
 209      00
 210 0021 488945F8 		movq	%rax, -8(%rbp)
 211 0025 31C0     		xorl	%eax, %eax
  66:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* point to updated position */
  67:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     char *token = SecFindRest(strToken, strDelimit);
 212              		.loc 1 67 19
 213 0027 488B55E0 		movq	-32(%rbp), %rdx
 214 002b 488B45E8 		movq	-24(%rbp), %rax
 215 002f 4889D6   		movq	%rdx, %rsi
 216 0032 4889C7   		movq	%rax, %rdi
 217 0035 E8000000 		call	SecFindRest
 217      00
 218 003a 488945F0 		movq	%rax, -16(%rbp)
  68:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* record string position for next search in the context */
  69:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     *context = token;
 219              		.loc 1 69 14
 220 003e 488B45D8 		movq	-40(%rbp), %rax
 221 0042 488B55F0 		movq	-16(%rbp), %rdx
 222 0046 488910   		movq	%rdx, (%rax)
  70:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* Determine if a token has been found. */
  71:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     if (token == strToken) {
 223              		.loc 1 71 8
 224 0049 488B45F0 		movq	-16(%rbp), %rax
 225 004d 483B45E8 		cmpq	-24(%rbp), %rax
 226 0051 7507     		jne	.L23
  72:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         return NULL;
 227              		.loc 1 72 16
 228 0053 B8000000 		movl	$0, %eax
 228      00
 229 0058 EB04     		jmp	.L24
 230              	.L23:
  73:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
  74:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     return strToken;
 231              		.loc 1 74 12
 232 005a 488B45E8 		movq	-24(%rbp), %rax
 233              	.L24:
  75:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** }
 234              		.loc 1 75 1
 235 005e 488B4DF8 		movq	-8(%rbp), %rcx
 236 0062 6448330C 		xorq	%fs:40, %rcx
 236      25280000 
 236      00
 237 006b 7405     		je	.L25
GAS LISTING /tmp/ccdIY4kG.s 			page 7


 238 006d E8000000 		call	__stack_chk_fail@PLT
 238      00
 239              	.L25:
 240 0072 C9       		leave
 241              	.LCFI8:
 242              		.cfi_def_cfa 7, 8
 243 0073 C3       		ret
 244              		.cfi_endproc
 245              	.LFE8:
 247              		.section	.text.strtok_s,"ax",@progbits
 248              		.globl	strtok_s
 250              	strtok_s:
 251              	.LFB9:
  76:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** 
  77:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** /*
  78:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * <FUNCTION DESCRIPTION>
  79:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    The strtok_s function parses a string into a sequence of strToken,
  80:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    replace all characters in strToken string that match to strDelimit set with 0.
  81:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    On the first call to strtok_s the string to be parsed should be specified in strToken.
  82:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    In each subsequent call that should parse the same string, strToken should be NULL
  83:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * <INPUT PARAMETERS>
  84:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    strToken            String containing token or tokens.
  85:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    strDelimit          Set of delimiter characters.
  86:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *    context             Used to store position information between calls
  87:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *                             to strtok_s
  88:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * <OUTPUT PARAMETERS>
  89:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *   context               is updated
  90:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  * <RETURN VALUE>
  91:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *   On the first call returns the address of the first non \0 character, otherwise NULL is returne
  92:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *   In subsequent calls, the strtoken is set to NULL, and the context set is the same as the previ
  93:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  *   return NULL if the *context string length is equal 0, otherwise return *context.
  94:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****  */
  95:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** char *strtok_s(char *strToken, const char *strDelimit, char **context)
  96:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** {
 252              		.loc 1 96 1
 253              		.cfi_startproc
 254 0000 F30F1EFA 		endbr64
 255 0004 55       		pushq	%rbp
 256              	.LCFI9:
 257              		.cfi_def_cfa_offset 16
 258              		.cfi_offset 6, -16
 259 0005 4889E5   		movq	%rsp, %rbp
 260              	.LCFI10:
 261              		.cfi_def_cfa_register 6
 262 0008 4883EC30 		subq	$48, %rsp
 263 000c 48897DE8 		movq	%rdi, -24(%rbp)
 264 0010 488975E0 		movq	%rsi, -32(%rbp)
 265 0014 488955D8 		movq	%rdx, -40(%rbp)
 266              		.loc 1 96 1
 267 0018 64488B04 		movq	%fs:40, %rax
 267      25280000 
 267      00
 268 0021 488945F8 		movq	%rax, -8(%rbp)
 269 0025 31C0     		xorl	%eax, %eax
  97:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     char *orgToken = strToken;
 270              		.loc 1 97 11
 271 0027 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccdIY4kG.s 			page 8


 272 002b 488945F0 		movq	%rax, -16(%rbp)
  98:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* validate delimiter and string context */
  99:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     if (context == NULL || strDelimit == NULL) {
 273              		.loc 1 99 8
 274 002f 48837DD8 		cmpq	$0, -40(%rbp)
 274      00
 275 0034 7407     		je	.L27
 276              		.loc 1 99 25 discriminator 1
 277 0036 48837DE0 		cmpq	$0, -32(%rbp)
 277      00
 278 003b 7507     		jne	.L28
 279              	.L27:
 100:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         return NULL;
 280              		.loc 1 100 16
 281 003d B8000000 		movl	$0, %eax
 281      00
 282 0042 EB5A     		jmp	.L29
 283              	.L28:
 101:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
 102:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* valid input string and string pointer from where to search */
 103:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     if (orgToken == NULL && (*context) == NULL) {
 284              		.loc 1 103 8
 285 0044 48837DF0 		cmpq	$0, -16(%rbp)
 285      00
 286 0049 7513     		jne	.L30
 287              		.loc 1 103 30 discriminator 1
 288 004b 488B45D8 		movq	-40(%rbp), %rax
 289 004f 488B00   		movq	(%rax), %rax
 290              		.loc 1 103 26 discriminator 1
 291 0052 4885C0   		testq	%rax, %rax
 292 0055 7507     		jne	.L30
 104:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         return NULL;
 293              		.loc 1 104 16
 294 0057 B8000000 		movl	$0, %eax
 294      00
 295 005c EB40     		jmp	.L29
 296              	.L30:
 105:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
 106:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     /* If string is null, continue searching from previous string position stored in context */
 107:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     if (orgToken == NULL) {
 297              		.loc 1 107 8
 298 005e 48837DF0 		cmpq	$0, -16(%rbp)
 298      00
 299 0063 750B     		jne	.L31
 108:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****         orgToken = *context;
 300              		.loc 1 108 18
 301 0065 488B45D8 		movq	-40(%rbp), %rax
 302 0069 488B00   		movq	(%rax), %rax
 303 006c 488945F0 		movq	%rax, -16(%rbp)
 304              	.L31:
 109:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     }
 110:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     orgToken = SecFindBegin(orgToken, strDelimit);
 305              		.loc 1 110 16
 306 0070 488B55E0 		movq	-32(%rbp), %rdx
 307 0074 488B45F0 		movq	-16(%rbp), %rax
 308 0078 4889D6   		movq	%rdx, %rsi
 309 007b 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccdIY4kG.s 			page 9


 310 007e E8000000 		call	SecFindBegin
 310      00
 311 0083 488945F0 		movq	%rax, -16(%rbp)
 111:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c ****     return SecUpdateToken(orgToken, strDelimit, context);
 312              		.loc 1 111 12
 313 0087 488B55D8 		movq	-40(%rbp), %rdx
 314 008b 488B4DE0 		movq	-32(%rbp), %rcx
 315 008f 488B45F0 		movq	-16(%rbp), %rax
 316 0093 4889CE   		movq	%rcx, %rsi
 317 0096 4889C7   		movq	%rax, %rdi
 318 0099 E8000000 		call	SecUpdateToken
 318      00
 319              	.L29:
 112:/home/xingli/share/1205tiny/secure_c/src/strtok_s.c **** }
 320              		.loc 1 112 1
 321 009e 488B4DF8 		movq	-8(%rbp), %rcx
 322 00a2 6448330C 		xorq	%fs:40, %rcx
 322      25280000 
 322      00
 323 00ab 7405     		je	.L32
 324 00ad E8000000 		call	__stack_chk_fail@PLT
 324      00
 325              	.L32:
 326 00b2 C9       		leave
 327              	.LCFI11:
 328              		.cfi_def_cfa 7, 8
 329 00b3 C3       		ret
 330              		.cfi_endproc
 331              	.LFE9:
 333              		.text
 334              	.Letext0:
 335              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 336              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 337              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 338              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 339              		.file 6 "/usr/include/stdio.h"
 340              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 1606              		.section	.note.gnu.property,"a"
 1607              		.align 8
 1608 0000 04000000 		.long	 1f - 0f
 1609 0004 10000000 		.long	 4f - 1f
 1610 0008 05000000 		.long	 5
 1611              	0:
 1612 000c 474E5500 		.string	 "GNU"
 1613              	1:
 1614              		.align 8
 1615 0010 020000C0 		.long	 0xc0000002
 1616 0014 04000000 		.long	 3f - 2f
 1617              	2:
 1618 0018 03000000 		.long	 0x3
 1619              	3:
 1620 001c 00000000 		.align 8
 1621              	4:
GAS LISTING /tmp/ccdIY4kG.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 strtok_s.c
     /tmp/ccdIY4kG.s:6      .text.SecFindBegin:0000000000000000 SecFindBegin
     /tmp/ccdIY4kG.s:98     .text.SecFindRest:0000000000000000 SecFindRest
     /tmp/ccdIY4kG.s:192    .text.SecUpdateToken:0000000000000000 SecUpdateToken
     /tmp/ccdIY4kG.s:250    .text.strtok_s:0000000000000000 strtok_s

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
