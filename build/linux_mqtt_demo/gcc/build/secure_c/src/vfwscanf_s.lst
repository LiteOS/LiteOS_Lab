GAS LISTING /tmp/ccSdvcdK.s 			page 1


   1              		.file	"vfwscanf_s.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.vfwscanf_s,"ax",@progbits
   5              		.globl	vfwscanf_s
   7              	vfwscanf_s:
   8              	.LFB6:
   9              		.file 1 "/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c"
   1:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** /*
   2:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
   3:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
   4:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * OpenArkCompiler is licensed under the Mulan PSL v1. 
   5:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * You can use this software according to the terms and conditions of the Mulan PSL v1.
   6:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * You may obtain a copy of Mulan PSL v1 at:
   7:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
   8:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * 	http://license.coscl.org.cn/MulanPSL 
   9:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
  10:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER 
  11:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
  12:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * FIT FOR A PARTICULAR PURPOSE.  
  13:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * See the Mulan PSL v1 for more details.  
  14:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  */
  15:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** 
  16:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** #include "secinput.h"
  17:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** 
  18:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** /*
  19:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * <FUNCTION DESCRIPTION>
  20:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    The  vfwscanf_s  function  is  the  wide-character  equivalent  of the vfscanf_s function
  21:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    The vfwscanf_s function reads data from the current position of stream into
  22:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    the locations given by argument (if any). Each argument must be a pointer
  23:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    to a variable of a type that corresponds to a type specifier in format.
  24:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    format controls the interpretation of the input fields and has the same form
  25:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    and function as the format argument for scanf.
  26:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
  27:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * <INPUT PARAMETERS>
  28:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    stream               Pointer to FILE structure.
  29:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    format               Format control string, see Format Specifications.
  30:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    argList              pointer to list of arguments
  31:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
  32:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * <OUTPUT PARAMETERS>
  33:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    argList              the converted value stored in user assigned address
  34:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *
  35:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  * <RETURN VALUE>
  36:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    Each of these functions returns the number of fields successfully converted
  37:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    and assigned; the return value does not include fields that were read but
  38:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    not assigned. A return value of 0 indicates that no fields were assigned.
  39:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  *    return -1 if an error occurs.
  40:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****  */
  41:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** int vfwscanf_s(FILE *stream, const wchar_t *format, va_list argList)
  42:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** {
  10              		.loc 1 42 1
  11              		.cfi_startproc
  12 0000 F30F1EFA 		endbr64
  13 0004 55       		pushq	%rbp
  14              	.LCFI0:
  15              		.cfi_def_cfa_offset 16
  16              		.cfi_offset 6, -16
GAS LISTING /tmp/ccSdvcdK.s 			page 2


  17 0005 4889E5   		movq	%rsp, %rbp
  18              	.LCFI1:
  19              		.cfi_def_cfa_register 6
  20 0008 4883EC70 		subq	$112, %rsp
  21 000c 48897DA8 		movq	%rdi, -88(%rbp)
  22 0010 488975A0 		movq	%rsi, -96(%rbp)
  23 0014 48895598 		movq	%rdx, -104(%rbp)
  24              		.loc 1 42 1
  25 0018 64488B04 		movq	%fs:40, %rax
  25      25280000 
  25      00
  26 0021 488945F8 		movq	%rax, -8(%rbp)
  27 0025 31C0     		xorl	%eax, %eax
  43:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     int retVal; /* If initialization causes  e838 */
  44:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     SecFileStream fStr;
  45:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** 
  46:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     if ((stream == NULL) || (format == NULL)) {
  28              		.loc 1 46 8
  29 0027 48837DA8 		cmpq	$0, -88(%rbp)
  29      00
  30 002c 7407     		je	.L2
  31              		.loc 1 46 26 discriminator 1
  32 002e 48837DA0 		cmpq	$0, -96(%rbp)
  32      00
  33 0033 750A     		jne	.L3
  34              	.L2:
  47:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****         SECUREC_ERROR_INVALID_PARAMTER("vfwscanf_s");
  48:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****         return SECUREC_SCANF_EINVAL;
  35              		.loc 1 48 16
  36 0035 B8FFFFFF 		movl	$-1, %eax
  36      FF
  37 003a E9810000 		jmp	.L7
  37      00
  38              	.L3:
  49:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     }
  50:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     if (stream == stdin) {
  39              		.loc 1 50 16
  40 003f 488B0500 		movq	stdin(%rip), %rax
  40      000000
  41              		.loc 1 50 8
  42 0046 483945A8 		cmpq	%rax, -88(%rbp)
  43 004a 7515     		jne	.L5
  51:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****         return vwscanf_s(format, argList);
  44              		.loc 1 51 16
  45 004c 488B5598 		movq	-104(%rbp), %rdx
  46 0050 488B45A0 		movq	-96(%rbp), %rax
  47 0054 4889D6   		movq	%rdx, %rsi
  48 0057 4889C7   		movq	%rax, %rdi
  49 005a E8000000 		call	vwscanf_s@PLT
  49      00
  50 005f EB5F     		jmp	.L7
  51              	.L5:
  52:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     }
  53:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** 
  54:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     SECUREC_LOCK_FILE(stream);
  55:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     SECUREC_INIT_SEC_FILE_STREAM(fStr, SECUREC_FILE_STREAM_FLAG, stream, SECUREC_UNINITIALIZED_FILE
  52              		.loc 1 55 5
GAS LISTING /tmp/ccSdvcdK.s 			page 3


  53 0061 C745C002 		movl	$2, -64(%rbp)
  53      000000
  54 0068 C745C400 		movl	$0, -60(%rbp)
  54      000000
  55 006f 48C745C8 		movq	$0, -56(%rbp)
  55      00000000 
  56 0077 48C745D0 		movq	$0, -48(%rbp)
  56      00000000 
  57 007f 488B45A8 		movq	-88(%rbp), %rax
  58 0083 488945D8 		movq	%rax, -40(%rbp)
  59 0087 48C745E0 		movq	$-1, -32(%rbp)
  59      FFFFFFFF 
  60 008f C745E800 		movl	$0, -24(%rbp)
  60      000000
  56:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     retVal = SecInputSW(&fStr, format, argList);
  61              		.loc 1 56 14
  62 0096 488B5598 		movq	-104(%rbp), %rdx
  63 009a 488B4DA0 		movq	-96(%rbp), %rcx
  64 009e 488D45C0 		leaq	-64(%rbp), %rax
  65 00a2 4889CE   		movq	%rcx, %rsi
  66 00a5 4889C7   		movq	%rax, %rdi
  67 00a8 E8000000 		call	SecInputSW@PLT
  67      00
  68 00ad 8945BC   		movl	%eax, -68(%rbp)
  57:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     SECUREC_UNLOCK_FILE(stream);
  58:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     if (retVal < 0) {
  69              		.loc 1 58 8
  70 00b0 837DBC00 		cmpl	$0, -68(%rbp)
  71 00b4 7907     		jns	.L6
  59:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****         SECUREC_ERROR_INVALID_PARAMTER("vfwscanf_s");
  60:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****         return SECUREC_SCANF_EINVAL;
  72              		.loc 1 60 16
  73 00b6 B8FFFFFF 		movl	$-1, %eax
  73      FF
  74 00bb EB03     		jmp	.L7
  75              	.L6:
  61:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     }
  62:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c ****     return retVal;
  76              		.loc 1 62 12
  77 00bd 8B45BC   		movl	-68(%rbp), %eax
  78              	.L7:
  63:/home/xingli/share/1205tiny/secure_c/src/vfwscanf_s.c **** }
  79              		.loc 1 63 1 discriminator 1
  80 00c0 488B4DF8 		movq	-8(%rbp), %rcx
  81 00c4 6448330C 		xorq	%fs:40, %rcx
  81      25280000 
  81      00
  82 00cd 7405     		je	.L8
  83              		.loc 1 63 1 is_stmt 0
  84 00cf E8000000 		call	__stack_chk_fail@PLT
  84      00
  85              	.L8:
  86 00d4 C9       		leave
  87              	.LCFI2:
  88              		.cfi_def_cfa 7, 8
  89 00d5 C3       		ret
  90              		.cfi_endproc
GAS LISTING /tmp/ccSdvcdK.s 			page 4


  91              	.LFE6:
  93              		.text
  94              	.Letext0:
  95              		.file 2 "<built-in>"
  96              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
  97              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
  98              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
  99              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 100              		.file 7 "/usr/include/stdio.h"
 101              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 102              		.file 9 "/home/xingli/share/1205tiny/secure_c/src/secinput.h"
 1273              		.section	.note.gnu.property,"a"
 1274              		.align 8
 1275 0000 04000000 		.long	 1f - 0f
 1276 0004 10000000 		.long	 4f - 1f
 1277 0008 05000000 		.long	 5
 1278              	0:
 1279 000c 474E5500 		.string	 "GNU"
 1280              	1:
 1281              		.align 8
 1282 0010 020000C0 		.long	 0xc0000002
 1283 0014 04000000 		.long	 3f - 2f
 1284              	2:
 1285 0018 03000000 		.long	 0x3
 1286              	3:
 1287 001c 00000000 		.align 8
 1288              	4:
GAS LISTING /tmp/ccSdvcdK.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 vfwscanf_s.c
     /tmp/ccSdvcdK.s:7      .text.vfwscanf_s:0000000000000000 vfwscanf_s

UNDEFINED SYMBOLS
stdin
_GLOBAL_OFFSET_TABLE_
vwscanf_s
SecInputSW
__stack_chk_fail
