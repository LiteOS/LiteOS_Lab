GAS LISTING /tmp/ccDsmczD.s 			page 1


   1              		.file	"vsscanf_s.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.vsscanf_s,"ax",@progbits
   5              		.globl	vsscanf_s
   7              	vsscanf_s:
   8              	.LFB6:
   9              		.file 1 "/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c"
   1:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** /*
   2:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * Copyright (c) [2019] Huawei Technologies Co.,Ltd.All rights reserved.
   3:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
   4:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * OpenArkCompiler is licensed under the Mulan PSL v1. 
   5:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * You can use this software according to the terms and conditions of the Mulan PSL v1.
   6:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * You may obtain a copy of Mulan PSL v1 at:
   7:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
   8:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * 	http://license.coscl.org.cn/MulanPSL 
   9:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  10:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER 
  11:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
  12:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * FIT FOR A PARTICULAR PURPOSE.  
  13:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * See the Mulan PSL v1 for more details.  
  14:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  */
  15:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** 
  16:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #include "secinput.h"
  17:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #if defined(SECUREC_VXWORKS_PLATFORM) && (!defined(SECUREC_SYSAPI4VXWORKS) && !defined(SECUREC_CTYP
  18:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #include <ctype.h>
  19:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #endif
  20:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** 
  21:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** /*
  22:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * <NAME>
  23:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    vsscanf_s
  24:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  25:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  26:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * <FUNCTION DESCRIPTION>
  27:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    The vsscanf_s function is equivalent to sscanf_s, with the variable argument list replaced by
  28:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    The vsscanf_s function reads data from buffer into the location given by
  29:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    each argument. Every argument must be a pointer to a variable with a type
  30:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    that corresponds to a type specifier in format. The format argument controls
  31:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    the interpretation of the input fields and has the same form and function
  32:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    as the format argument for the scanf function.
  33:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    If copying takes place between strings that overlap, the behavior is undefined.
  34:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  35:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * <INPUT PARAMETERS>
  36:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    buffer                Stored data
  37:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    format                Format control string, see Format Specifications.
  38:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    argList               pointer to list of arguments
  39:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  40:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * <OUTPUT PARAMETERS>
  41:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    argList               the converted value stored in user assigned address
  42:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *
  43:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  * <RETURN VALUE>
  44:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    Each of these functions returns the number of fields successfully converted
  45:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    and assigned; the return value does not include fields that were read but
  46:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    not assigned. A return value of 0 indicates that no fields were assigned.
  47:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  *    return -1 if an error occurs.
  48:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****  */
  49:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** int vsscanf_s(const char *buffer, const char *format, va_list argList)
GAS LISTING /tmp/ccDsmczD.s 			page 2


  50:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** {
  10              		.loc 1 50 1
  11              		.cfi_startproc
  12 0000 F30F1EFA 		endbr64
  13 0004 55       		pushq	%rbp
  14              	.LCFI0:
  15              		.cfi_def_cfa_offset 16
  16              		.cfi_offset 6, -16
  17 0005 4889E5   		movq	%rsp, %rbp
  18              	.LCFI1:
  19              		.cfi_def_cfa_register 6
  20 0008 4883EC70 		subq	$112, %rsp
  21 000c 48897DA8 		movq	%rdi, -88(%rbp)
  22 0010 488975A0 		movq	%rsi, -96(%rbp)
  23 0014 48895598 		movq	%rdx, -104(%rbp)
  24              		.loc 1 50 1
  25 0018 64488B04 		movq	%fs:40, %rax
  25      25280000 
  25      00
  26 0021 488945F8 		movq	%rax, -8(%rbp)
  27 0025 31C0     		xorl	%eax, %eax
  51:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     size_t count;               /* If initialization causes  e838 */
  52:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     int retVal;
  53:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     SecFileStream fStr;
  54:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** 
  55:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     /* validation section */
  56:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     if (buffer == NULL || format == NULL) {
  28              		.loc 1 56 8
  29 0027 48837DA8 		cmpq	$0, -88(%rbp)
  29      00
  30 002c 7407     		je	.L2
  31              		.loc 1 56 24 discriminator 1
  32 002e 48837DA0 		cmpq	$0, -96(%rbp)
  32      00
  33 0033 750A     		jne	.L3
  34              	.L2:
  57:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         SECUREC_ERROR_INVALID_PARAMTER("vsscanf_s");
  58:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         return SECUREC_SCANF_EINVAL;
  35              		.loc 1 58 16
  36 0035 B8FFFFFF 		movl	$-1, %eax
  36      FF
  37 003a E99F0000 		jmp	.L8
  37      00
  38              	.L3:
  59:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     }
  60:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     count = strlen(buffer);
  39              		.loc 1 60 13
  40 003f 488B45A8 		movq	-88(%rbp), %rax
  41 0043 4889C7   		movq	%rax, %rdi
  42 0046 E8000000 		call	strlen@PLT
  42      00
  43 004b 488945B8 		movq	%rax, -72(%rbp)
  61:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     if (count == 0 || count > SECUREC_STRING_MAX_LEN) {
  44              		.loc 1 61 8
  45 004f 48837DB8 		cmpq	$0, -72(%rbp)
  45      00
  46 0054 740B     		je	.L5
GAS LISTING /tmp/ccDsmczD.s 			page 3


  47              		.loc 1 61 20 discriminator 1
  48 0056 B8000000 		movl	$2147483648, %eax
  48      80
  49 005b 483945B8 		cmpq	%rax, -72(%rbp)
  50 005f 721E     		jb	.L6
  51              	.L5:
  62:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         SecClearDestBuf(buffer, format, argList);
  52              		.loc 1 62 9
  53 0061 488B5598 		movq	-104(%rbp), %rdx
  54 0065 488B4DA0 		movq	-96(%rbp), %rcx
  55 0069 488B45A8 		movq	-88(%rbp), %rax
  56 006d 4889CE   		movq	%rcx, %rsi
  57 0070 4889C7   		movq	%rax, %rdi
  58 0073 E8000000 		call	SecClearDestBuf@PLT
  58      00
  63:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         SECUREC_ERROR_INVALID_PARAMTER("vsscanf_s");
  64:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         return SECUREC_SCANF_EINVAL;
  59              		.loc 1 64 16
  60 0078 B8FFFFFF 		movl	$-1, %eax
  60      FF
  61 007d EB5F     		jmp	.L8
  62              	.L6:
  65:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     }
  66:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #ifdef SECUREC_VXWORKS_PLATFORM
  67:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     /*
  68:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****      * in vxworks platform when buffer is white string, will set first %s argument tu zero.like fol
  69:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****      * "   \v\f\t\r\n", "%s", str, strSize
  70:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****      * do not check all character, just first and last character then consider it is white string
  71:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****      */
  72:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     if (isspace((int)buffer[0]) && isspace((int)buffer[count - 1])) {
  73:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         SecClearDestBuf(buffer, format, argList);
  74:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     }
  75:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** #endif
  76:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     SECUREC_INIT_SEC_FILE_STREAM(fStr, SECUREC_MEM_STR_FLAG, NULL, 0, buffer, (int)count);
  63              		.loc 1 76 5
  64 007f C745C001 		movl	$1, -64(%rbp)
  64      000000
  65 0086 488B45B8 		movq	-72(%rbp), %rax
  66 008a 8945C4   		movl	%eax, -60(%rbp)
  67 008d 488B45A8 		movq	-88(%rbp), %rax
  68 0091 488945C8 		movq	%rax, -56(%rbp)
  69 0095 48C745D0 		movq	$0, -48(%rbp)
  69      00000000 
  70 009d 48C745D8 		movq	$0, -40(%rbp)
  70      00000000 
  71 00a5 48C745E0 		movq	$0, -32(%rbp)
  71      00000000 
  72 00ad C745E800 		movl	$0, -24(%rbp)
  72      000000
  77:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     retVal = SecInputS(&fStr, format, argList);
  73              		.loc 1 77 14
  74 00b4 488B5598 		movq	-104(%rbp), %rdx
  75 00b8 488B4DA0 		movq	-96(%rbp), %rcx
  76 00bc 488D45C0 		leaq	-64(%rbp), %rax
  77 00c0 4889CE   		movq	%rcx, %rsi
  78 00c3 4889C7   		movq	%rax, %rdi
  79 00c6 E8000000 		call	SecInputS@PLT
GAS LISTING /tmp/ccDsmczD.s 			page 4


  79      00
  80 00cb 8945B4   		movl	%eax, -76(%rbp)
  78:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     if (retVal < 0) {
  81              		.loc 1 78 8
  82 00ce 837DB400 		cmpl	$0, -76(%rbp)
  83 00d2 7907     		jns	.L7
  79:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         SECUREC_ERROR_INVALID_PARAMTER("vsscanf_s");
  80:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****         return SECUREC_SCANF_EINVAL;
  84              		.loc 1 80 16
  85 00d4 B8FFFFFF 		movl	$-1, %eax
  85      FF
  86 00d9 EB03     		jmp	.L8
  87              	.L7:
  81:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     }
  82:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c ****     return retVal;
  88              		.loc 1 82 12
  89 00db 8B45B4   		movl	-76(%rbp), %eax
  90              	.L8:
  83:/home/xingli/share/LiteOS_Lab/secure_c/src/vsscanf_s.c **** }
  91              		.loc 1 83 1 discriminator 1
  92 00de 488B75F8 		movq	-8(%rbp), %rsi
  93 00e2 64483334 		xorq	%fs:40, %rsi
  93      25280000 
  93      00
  94 00eb 7405     		je	.L9
  95              		.loc 1 83 1 is_stmt 0
  96 00ed E8000000 		call	__stack_chk_fail@PLT
  96      00
  97              	.L9:
  98 00f2 C9       		leave
  99              	.LCFI2:
 100              		.cfi_def_cfa 7, 8
 101 00f3 C3       		ret
 102              		.cfi_endproc
 103              	.LFE6:
 105              		.text
 106              	.Letext0:
 107              		.file 2 "<built-in>"
 108              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 109              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 110              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 111              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 112              		.file 7 "/usr/include/stdio.h"
 113              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 114              		.file 9 "/home/xingli/share/LiteOS_Lab/secure_c/src/secinput.h"
 1266              		.section	.note.gnu.property,"a"
 1267              		.align 8
 1268 0000 04000000 		.long	 1f - 0f
 1269 0004 10000000 		.long	 4f - 1f
 1270 0008 05000000 		.long	 5
 1271              	0:
 1272 000c 474E5500 		.string	 "GNU"
 1273              	1:
 1274              		.align 8
 1275 0010 020000C0 		.long	 0xc0000002
 1276 0014 04000000 		.long	 3f - 2f
 1277              	2:
GAS LISTING /tmp/ccDsmczD.s 			page 5


 1278 0018 03000000 		.long	 0x3
 1279              	3:
 1280 001c 00000000 		.align 8
 1281              	4:
GAS LISTING /tmp/ccDsmczD.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 vsscanf_s.c
     /tmp/ccDsmczD.s:7      .text.vsscanf_s:0000000000000000 vsscanf_s

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
strlen
SecClearDestBuf
SecInputS
__stack_chk_fail
